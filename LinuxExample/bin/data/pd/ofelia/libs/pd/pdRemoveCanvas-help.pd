#N canvas 321 23 598 518 10;
#X declare -path ofelia/libs/pd;
#X obj 0 0 cnv 15 580 40 empty empty pdRemoveCanvas 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 377 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 462 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 413 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 436 1) float;
#X text 211 436 - the 'n'th level. (default: 0);
#X text 11 23 remove the canvas;
#X text 95 349 bang;
#X text 211 349 - remove the canvas.;
#X obj 125 119 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 125 186 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 125 258 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 322 142 450 300 myCanvas 0;
#X obj 172 103 inlet;
#X obj 172 126 pdRemoveCanvas 1;
#X connect 0 0 1 0;
#X restore 125 283 pd myCanvas;
#X text 144 119 remove the object.;
#X text 148 257 remove the subpatch.;
#X text 146 185 remove the parent canvas or abstraction. (if it exists)
;
#X text 233 213 note: if the parent canvas doesn't exist \, it will
remove itself.;
#X obj 487 5 pdRemoveCanvas;
#X text 21 43 [pdRemoveCanvas] is used to remove the current or the
parent canvas. for example \, if you use [pdRemoveCanvas] in an abstraction
\, you can remove the abstraction from its canvas.;
#X obj 125 145 pdRemoveCanvas;
#X obj 125 213 pdRemoveCanvas 1;
#X obj 75 385 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 95 385 bang;
#X text 211 385 - outputs bang after removing the canvas.;
#X obj 408 46 declare -path ofelia/libs/pd;
#X connect 11 0 21 0;
#X connect 12 0 22 0;
#X connect 13 0 14 0;
