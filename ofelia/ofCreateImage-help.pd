#N canvas 321 23 601 673 10;
#X obj 0 0 cnv 15 580 40 empty empty ofCreateImage 3 12 0 18 -204280
-1 0;
#X obj 0 351 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 450 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 359 cnv 17 3 80 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 458 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 615 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 486 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 509 1) symbol;
#X obj 23 329 ofWindow 320 240 LEFT TOP;
#X text 95 359 name <s>;
#X text 72 529 2) float;
#X text 72 549 3) float;
#X text 72 589 5) symbol/list;
#X text 72 569 4) float/symbol;
#X obj 493 5 ofCreateImage;
#N canvas 322 134 600 740 related_getter_objects 0;
#X obj 30 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 212 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 325 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 83 5 0 0 0 - - -, f 5;
#X floatatom 30 173 5 0 0 0 - - -, f 5;
#X obj 30 263 unpack f f;
#X floatatom 30 286 5 0 0 0 - - -, f 5;
#X floatatom 87 286 5 0 0 0 - - -, f 5;
#X text 130 285 width \, height.;
#X floatatom 30 376 5 0 0 0 - - -, f 5;
#X text 127 415 get the color of a pixel at the specified x \, y index.
;
#X msg 30 415 0 0;
#X obj 30 469 print;
#X text 76 470 outputs r \, g \, b \, a value of the color.;
#X text 87 511 get the texture coordinate of the image from 2d vertex.
;
#X obj 30 566 print;
#X obj 30 683 print;
#X text 41 630 get the texture coordinates of the image from 2d vertices.
;
#X text 72 83 0: not exists \, 1: exists.;
#X text 53 31 check if the image variable name exists or not.;
#X msg 30 511 100 100;
#X text 53 211 get the dimensions of the image.;
#X text 53 324 get the type of the image.;
#X text 53 121 check if the image is allocated or not.;
#X text 72 173 0: not allocated \, 1: allocated.;
#X msg 68 415 639 479;
#X msg 30 608 0 0 640 0 640 480 0 480;
#X obj 30 236 ofGetImageDimen @background;
#X obj 30 56 ofDoesImageNameExist @background;
#X obj 30 146 ofIsImageAllocated @background;
#X obj 30 349 ofGetImageType @background;
#X obj 30 442 ofGetImageColorAt @background;
#X obj 30 539 ofGetImageTexCoord @background;
#X obj 30 656 ofGetImageTexCoords @background;
#X text 73 376 0: GRAY \, 1: RGB \, 2: RGBA.;
#X connect 0 0 29 0;
#X connect 1 0 30 0;
#X connect 2 0 28 0;
#X connect 3 0 31 0;
#X connect 6 0 7 0;
#X connect 6 1 8 0;
#X connect 12 0 32 0;
#X connect 21 0 33 0;
#X connect 26 0 32 0;
#X connect 27 0 34 0;
#X connect 28 0 6 0;
#X connect 29 0 4 0;
#X connect 30 0 5 0;
#X connect 31 0 10 0;
#X connect 32 0 13 0;
#X connect 33 0 16 0;
#X connect 34 0 17 0;
#X restore 23 278 pd related_getter_objects;
#N canvas 322 131 600 505 related_editor_objects 0;
#N canvas 321 130 684 567 image_texture 0;
#X obj 36 491 outlet;
#X msg 36 63 generateMipmap;
#X text 136 63 generate mipmap for the current texture.;
#X text 220 113 set texture minification/magnification scaling filters.
;
#X msg 36 113 minMagFilter NEAREST NEAREST;
#X text 75 146 minification scaling filter options.;
#X text 75 216 magnification scaling filter options.;
#X text 75 316 horizontal wrap mode options.;
#X text 75 356 vertical wrap mode options.;
#X msg 36 263 texWrap REPEAT REPEAT;
#X text 180 263 set how the texture wraps around the edges of the vertices
horizontally and vertically. by default \, textures are clamped to
their edges with CLAMP_TO_EDGE.;
#X text 75 163 0: NEAREST \, 1: LINEAR \, 2:NEAREST_MIPMAP_NEAREST
\, 3:LINEAR_MIPMAP_NEAREST \, 4:NEAREST_MIPMAP_LINEAR \, 5:LINEAR_MIPMAP_LINEAR.
;
#X text 75 233 0: NEAREST \, 1: LINEAR.;
#X text 75 333 0: REPEAT \, 1: MIRRORED_REPEAT \, 2: CLAMP_TO_EDGE.
;
#X text 75 373 0: REPEAT \, 1: MIRRORED_REPEAT \, 2: CLAMP_TO_EDGE.
;
#X text 161 414 set another image(or fbo) to use as an alpha mask.
;
#X msg 36 414 alphaMask @texture;
#X connect 1 0 0 0;
#X connect 4 0 0 0;
#X connect 9 0 0 0;
#X connect 16 0 0 0;
#X restore 51 192 pd image_texture;
#N canvas 322 131 600 280 image_type 0;
#X obj 36 221 outlet;
#X obj 111 64 vradio 15 1 0 3 empty empty empty 0 -8 0 10 -262144 -1
-1 2;
#X obj 36 137 ofPack type 0;
#X floatatom 111 116 5 0 0 0 - - -, f 5;
#X text 133 79 1: RGB;
#X text 133 94 2: RGBA;
#X text 133 63 0: GRAY;
#X text 130 140 it sets the number of channels used to represent a
color per pixel. GRAY will use 1 channel \, RGB will use 3 channels
and RGBA will use 4 channels.;
#X text 111 41 set the type of the image.;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 2 1;
#X restore 51 239 pd image_type;
#N canvas 321 131 696 383 image_clone 0;
#X obj 36 291 outlet;
#X text 35 195 clone the specified image.;
#X obj 366 93 ofTranslate 40 40;
#X obj 366 137 ofStar 30 12 5;
#X obj 366 115 ofSetColor yellow;
#X obj 366 48 ofHead;
#X text 365 194 clone the specified fbo.;
#X obj 366 71 ofCreateFbo @myFbo 80 80 RGB orange;
#X msg 366 216 clone @myFbo;
#X msg 36 216 clone @texture;
#X obj 366 291 ofEditImage @texture;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X connect 5 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X restore 51 286 pd image_clone;
#N canvas 322 130 597 287 image_resize 0;
#X obj 36 201 outlet;
#X msg 36 63 resize 600 450;
#X msg 36 113 crop 100 100 400 300;
#X text 137 63 resize the image to a new size. (w \, h);
#X text 173 113 crop the image. (x \, y \, w \, h);
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 51 145 pd image_resize;
#N canvas 322 131 659 427 image_processing 0;
#X msg 36 62 grayscale;
#X text 107 80 note: it will not affect the allocated image type.;
#X msg 36 112 invert;
#X text 88 112 invert the colors of the image.;
#X msg 36 152 brightness 30;
#X msg 36 192 contrast 30;
#X msg 36 232 gamma 2;
#X obj 36 341 outlet;
#X msg 36 273 mirror ON OFF;
#X text 131 273 flip the pixels of the image vertically and/or horizontally.
;
#X text 107 62 convert the image to grayscale. (0.299r + 0.587g + 0.114b)
;
#X text 130 152 change the brightness of the image. (range: -255~255)
;
#X text 118 192 change the contrast of the image. (range: -255~255)
;
#X text 93 232 change the gamma of the image. (range: 0~);
#X connect 0 0 7 0;
#X connect 2 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 8 0 7 0;
#X restore 51 98 pd image_processing;
#N canvas 321 131 597 287 image_screenshot 0;
#X obj 36 201 outlet;
#X msg 36 63 grabScreen 0 0 320 240;
#X text 184 63 take a screenshot. (x \, y \, w \, h);
#X connect 1 0 0 0;
#X restore 51 333 pd image_screenshot;
#N canvas 321 131 597 287 image_coloring 0;
#X obj 36 201 outlet;
#X msg 36 63 color skyBlue;
#X msg 36 113 colorAt 100 300 red;
#X text 166 113 color a pixel at the specified x \, y position.;
#X text 130 63 color the whole image.;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 51 51 pd image_coloring;
#X obj 51 430 ofEditImage @background;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X restore 23 238 pd related_editor_objects;
#N canvas 321 132 516 355 related_saver_objects 0;
#X obj 36 39 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X symbolatom 36 112 60 0 0 0 - - -, f 60;
#X obj 36 66 ofGetPatchDirectory;
#X obj 36 252 ofPrepend save;
#X text 59 38 save the image.;
#X obj 81 144 vradio 15 1 0 5 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X text 102 143 0: BEST;
#X obj 36 225 pack s 0;
#X text 102 159 1: HIGH;
#X text 102 174 2: MIDIUM;
#X text 102 189 3: LOW;
#X text 102 204 4: WORST;
#X obj 36 276 ofSaveImage @background;
#X obj 36 89 makefilename %s/examples/data/myImage.jpg;
#X text 98 225 you can optionally set the quality of the image.;
#X connect 0 0 2 0;
#X connect 1 0 7 0;
#X connect 2 0 13 0;
#X connect 3 0 12 0;
#X connect 5 0 7 1;
#X connect 7 0 3 0;
#X connect 13 0 1 0;
#X restore 23 298 pd related_saver_objects;
#X obj 23 202 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 321 133 624 507 related_drawer_objects 0;
#X obj 63 38 loadbang;
#X obj 63 59 ofGetLastRenderOrder;
#X obj 30 80 ofHead;
#X obj 30 101 ofClear 63;
#X obj 30 207 ofTranslate 160 120;
#X obj 30 384 ofSetDepthTest ON;
#X obj 30 431 ofSetDepthTest OFF;
#X obj 30 408 ofBox 80 80 80;
#X obj 30 261 t b b;
#X text 312 180 draw a subsection of the image.;
#X obj 30 154 ofSetColor 230;
#X text 127 154 slightly darken the below image.;
#X obj 57 285 ofGetFrameNum;
#X text 229 129 draw the background image.;
#X obj 30 180 ofDrawSubImage @background 100 75 0 0 400 300;
#X obj 30 359 ofBindImageTex @texture;
#X obj 30 234 ofSetColor white;
#X text 182 359 bind the image's texture.;
#X obj 30 128 ofDrawImage @background 320 240;
#X obj 30 333 ofRotateXYZ;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 18 0;
#X connect 4 0 16 0;
#X connect 5 0 7 0;
#X connect 7 0 6 0;
#X connect 8 0 19 0;
#X connect 8 1 12 0;
#X connect 10 0 14 0;
#X connect 12 0 19 1;
#X connect 12 0 19 2;
#X connect 12 0 19 3;
#X connect 14 0 4 0;
#X connect 15 0 5 0;
#X connect 16 0 8 0;
#X connect 18 0 10 0;
#X connect 19 0 15 0;
#X restore 23 258 pd related_drawer_objects;
#X text 95 379 allocate <f \, f \, f/s>;
#X text 95 399 color <s/l>;
#X text 95 419 clear;
#X text 251 419 - clears the allocated image.;
#X text 251 569 - sets the type of the image. (GRAY/RGB/RGBA);
#X text 95 458 bang;
#X text 251 458 - outputs bang when allocating is done.;
#X text 11 23 create an image;
#X text 21 43 [ofCreateImage] allows you to create an image that can
be edited \, bound as a texture \, drawn directly to the screen \,
or used by its related "getter" objects.;
#X text 41 202 outputs bang when allocating is done.;
#X text 251 359 - sets the unique variable name for the image.;
#X text 251 509 - sets the unique variable name for the image.;
#X text 251 529 - sets the width of the image.;
#X text 251 549 - sets the height of the image.;
#X text 251 379 - allocates the image. (width \, height \, type);
#X text 251 399 - colors the image with the specified color.;
#X text 251 589 - sets the initial color of the image. (default: 255
\, 255);
#X obj 23 178 ofCreateImage @texture 80 80 RGB 0xffe39b;
#X obj 23 108 ofCreateImage @background 640 480 RGB 0xa2c8a2;
#X msg 23 145 allocate 80 80 RGBA \, color orange 200;
#X msg 301 145 clear;
#X connect 37 0 18 0;
#X connect 39 0 37 0;
#X connect 40 0 37 0;
