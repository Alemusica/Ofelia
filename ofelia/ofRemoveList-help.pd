#N canvas 321 23 603 539 10;
#X obj 0 0 cnv 15 580 40 empty empty ofRemoveList 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 400 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 408 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 485 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 436 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 232 259 print;
#X text 95 349 list;
#X obj 75 372 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 95 372 list;
#X text 95 408 list;
#X text 72 459 1) list;
#X text 211 408 - outputs the processed list.;
#N canvas 322 114 563 447 about_list-processing_objects 0;
#X text 41 35 in ofelia \, list-processing objects whose name starts
with "ofList" (e.g. "ofListFill") accepts the source list from its
first inlet. and objects whose name ends with "List" (e.g. "ofFillList")
can set the source list via creation arguments or by its last inlet.
the former type is more intuitive when you have many different lists
to process \, while the later is more intuitive when you have a single
list to process differently many times.;
#X obj 46 258 print;
#X obj 46 231 ofListFill foo 2 3;
#X obj 46 388 print;
#X msg 134 301 2 3;
#X text 171 302 fill the list with "foo" from index 2 to 3;
#X msg 46 301 symbol foo;
#X text 230 202 fill the list with "foo" from index 2 to 3;
#X msg 195 201 2 3;
#X msg 107 201 symbol foo;
#X msg 46 171 0 1 2 3 4 5;
#X obj 46 361 ofFillList 0 1 2 3 4 5;
#X msg 197 331 0 1 2 3 4 5;
#X text 137 172 the incoming source list.;
#X text 287 331 set the source list.;
#X connect 2 0 1 0;
#X connect 4 0 11 1;
#X connect 6 0 11 0;
#X connect 8 0 2 2;
#X connect 9 0 2 1;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 11 2;
#X restore 384 45 pd about_list-processing_objects;
#X msg 252 165 symbol a;
#X floatatom 232 141 5 0 0 0 - - -, f 5;
#X msg 262 192 3 2;
#X text 11 23 remove sublists in a list;
#X obj 499 5 ofRemoveList;
#X text 269 140 the incoming sublist or element to remove.;
#X obj 232 227 ofRemoveList c a 1 3 2 a 1 7 3 2 c a b;
#X text 211 349 - the incoming sublist or element to remove.;
#X text 211 372 - sets the source list.;
#X text 211 459 - sets the source list.;
#X connect 15 0 21 0;
#X connect 16 0 21 0;
#X connect 17 0 21 0;
#X connect 21 0 7 0;
