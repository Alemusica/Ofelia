#N canvas 321 23 601 828 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofLoadVec2f 3 12 0 18 -204280
-1 0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 670 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 678 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 775 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 706 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 678 float;
#X text 95 479 name <s>;
#X text 95 499 load <l>;
#X text 95 539 append <l>;
#X text 95 559 prepend <l>;
#X text 95 619 erase <f \, f>;
#X text 95 639 clear;
#X text 72 729 1) symbol;
#X text 72 749 2) list;
#N canvas 321 122 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X msg 26 93 print;
#X text 70 333 remove all elements from the array.;
#X msg 26 333 clear;
#X floatatom 26 397 5 0 0 0 - - -, f 5;
#X text 241 678 - the number of elements stored in the array.;
#X text 70 397 the number of elements stored in the array.;
#X obj 505 5 ofLoadVec2f;
#X msg 26 123 load 4 5 6 7 8 9;
#X msg 26 153 add 10 11;
#X msg 26 183 append 12 13 14 15;
#X text 148 183 append "12 13" \, "14 15" to the array.;
#X msg 26 213 prepend 0 1 2 3;
#X text 131 213 prepend "0 1" \, "2 3" to the array.;
#X msg 26 303 erase 6 7;
#X text 94 153 add an element "10 11" to the end of the array.;
#X text 95 519 add <f \, f>;
#X text 95 579 insert <f \, f \, f \, f>;
#X text 95 599 fill <f \, f \, f \, f>;
#X msg 26 243 insert 5 6 3 3;
#X msg 26 273 fill 7 8 5 5;
#X text 70 93 print the name and stored array elements.;
#X text 241 479 - sets the unique variable name for the array.;
#X text 241 499 - (re)initializes an array with one or more elements.
;
#X text 241 519 - adds a single element to the end of the array.;
#X text 241 539 - appends one or more elements to the array.;
#X text 241 559 - prepends one or more elements to the array.;
#X text 241 579 - inserts an element at the specified position.;
#X text 241 599 - assigns value to all the elements in the range.;
#X text 241 619 - removes a range of elements from the array.;
#X text 241 639 - removes all elements from the array.;
#X text 241 729 - sets the unique variable name for the array.;
#X text 241 749 - initializes an array with one or more elements.;
#X text 136 123 (re)initialize an array with "4 5" \, "6 7" \, "8 9".
;
#X text 125 243 insert "5 6" to the index range "3~3".;
#X text 113 273 assign "7 8" to the index range "5~5".;
#X text 96 303 remove the index range "6~7".;
#X text 11 23 store an array of two dimensional vectors;
#X text 21 43 [ofLoadVec2f] stores an array of two dimensional vectors
that can be edited or used by its related "getter" objects.;
#N canvas 321 44 910 830 related_getter_objects 0;
#X obj 30 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 232 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 283 print;
#X obj 30 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 83 5 0 0 0 - - -, f 5;
#X obj 30 173 unpack f f;
#X floatatom 30 195 5 0 0 0 - - -, f 5;
#X floatatom 87 195 5 0 0 0 - - -, f 5;
#X text 69 83 0: not exists \, 1: exists.;
#X text 53 31 check if the vec2f variable name exists or not.;
#X text 53 121 get a vec2f element at the index "1". (starting from
"0");
#X text 53 231 get all vec2f elements as a list.;
#X obj 30 322 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 53 321 get the average value of vec2f elements.;
#X obj 30 373 unpack f f;
#X floatatom 30 395 5 0 0 0 - - -, f 5;
#X floatatom 87 395 5 0 0 0 - - -, f 5;
#X floatatom 30 493 8 0 0 0 - - -, f 8;
#X floatatom 530 493 8 0 0 0 - - -, f 8;
#X msg 30 430 5 20;
#X msg 530 430 5 20;
#X floatatom 30 593 8 0 0 0 - - -, f 8;
#X msg 30 530 9 20;
#X floatatom 530 593 8 0 0 0 - - -, f 8;
#X msg 530 530 9 20;
#X text 568 429 calculate and return the angle in radians.;
#X text 567 529 calculate and return the squared distance.;
#X floatatom 30 693 8 0 0 0 - - -, f 8;
#X msg 30 630 2 1;
#X obj 30 732 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 783 8 0 0 0 - - -, f 8;
#X obj 530 732 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 530 783 8 0 0 0 - - -, f 8;
#X text 69 430 calculate and return the angle in degrees between the
array element and "5 20".;
#X text 69 530 calculate and return the distance between the array
element and "9 20";
#X text 63 630 calculate and return the dot product of the array element
with "2 1".;
#X text 53 731 return the length(magnitude) of the array element.;
#X text 553 731 return the squared length(magnitude).;
#X obj 30 56 ofDoesVec2fNameExist @myVec2fs;
#X obj 30 146 ofGetVec2f @myVec2fs[1];
#X obj 30 256 ofGetVec2fs @myVec2fs;
#X obj 30 346 ofGetVec2fAverage @myVec2fs;
#X obj 30 466 ofGetVec2fAngle @myVec2fs[1];
#X obj 530 466 ofGetVec2fAngleRad @myVec2fs[1];
#X obj 30 566 ofGetVec2fDist @myVec2fs[1];
#X obj 530 566 ofGetVec2fDistSquared @myVec2fs[1];
#X obj 30 666 ofGetVec2fDot @myVec2fs[1];
#X obj 30 756 ofGetVec2fLength @myVec2fs[1];
#X obj 530 756 ofGetVec2fLengthSquared @myVec2fs[1];
#X connect 0 0 39 0;
#X connect 1 0 40 0;
#X connect 3 0 38 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 12 0 41 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 19 0 42 0;
#X connect 20 0 43 0;
#X connect 22 0 44 0;
#X connect 24 0 45 0;
#X connect 28 0 46 0;
#X connect 29 0 47 0;
#X connect 31 0 48 0;
#X connect 38 0 4 0;
#X connect 39 0 5 0;
#X connect 40 0 2 0;
#X connect 41 0 14 0;
#X connect 42 0 17 0;
#X connect 43 0 18 0;
#X connect 44 0 21 0;
#X connect 45 0 23 0;
#X connect 46 0 27 0;
#X connect 47 0 30 0;
#X connect 48 0 32 0;
#X restore 26 448 pd related_getter_objects;
#N canvas 321 121 605 686 related_editor_objects 0;
#X text 186 571 edit the specified array element.;
#X msg 30 34 assign 3 4;
#X text 104 34 assign "3 4" to the array element.;
#X msg 30 64 add 2 3;
#X text 87 64 add "2 3" to the array element.;
#X msg 30 94 sub 1 2;
#X text 84 94 subtract "1 2" from the array element.;
#X msg 30 124 mult 3 2;
#X text 93 124 multiply the array element by "3 2".;
#X msg 30 154 div 4 5;
#X text 86 154 divide the array element by "4 5".;
#X msg 30 184 lerp 5 4 0.5;
#X text 118 185 linearly interpolate the array element towards "5 4"
with the control amount of "0.5".;
#X msg 30 254 map 0 0 2 0 0 2;
#X msg 30 224 limit 3;
#X msg 30 314 middle 8 6;
#X text 106 315 set the array element to the midpoint between itself
and "8 6".;
#X msg 30 354 normalize;
#X msg 30 384 perpendicular;
#X msg 30 424 rotate 90 5 4;
#X msg 30 464 rotateRad 1.5 5 4;
#X msg 30 504 scale 10;
#X text 87 224 restrict the length(magnitude) of this vector to "3".
;
#X text 101 354 normalize the array element to a length of 1;
#X text 125 384 set the array element to its own normalized perpendicular
(by rotating 90 degrees and normalizing);
#X text 125 424 rotate the array element by "90" angle degrees around
the pivot "5 4".;
#X text 150 464 rotate the array element by "1.5" angle radians around
the pivot "5 4".;
#X text 138 254 map the array element from its default coordinate system
origin (0 \, 0) \, x direction (1 \, 0) \, y direction (0 \, 1) to
a new coordinate system defined with origin at "0 0" \, X direction
"2 0" \, and Y direction "0 2".;
#X obj 30 571 ofEditVec2f @myVec2fs[1];
#X obj 30 635 print;
#X obj 30 593 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 48 593 outputs bang when editing is done.;
#X obj 30 613 ofGetVec2f @myVec2fs[1];
#X text 93 504 scale the array element up or down so that it has the
requested length "10".;
#X connect 1 0 28 0;
#X connect 3 0 28 0;
#X connect 5 0 28 0;
#X connect 7 0 28 0;
#X connect 9 0 28 0;
#X connect 11 0 28 0;
#X connect 13 0 28 0;
#X connect 14 0 28 0;
#X connect 15 0 28 0;
#X connect 17 0 28 0;
#X connect 18 0 28 0;
#X connect 19 0 28 0;
#X connect 20 0 28 0;
#X connect 21 0 28 0;
#X connect 28 0 30 0;
#X connect 30 0 32 0;
#X connect 32 0 29 0;
#X restore 26 428 pd related_editor_objects;
#X obj 26 370 ofLoadVec2f @myVec2fs 7 8 9 10;
#X obj 462 46 declare -lib ofelia;
#X connect 17 0 57 0;
#X connect 19 0 57 0;
#X connect 24 0 57 0;
#X connect 25 0 57 0;
#X connect 26 0 57 0;
#X connect 28 0 57 0;
#X connect 30 0 57 0;
#X connect 35 0 57 0;
#X connect 36 0 57 0;
#X connect 57 0 20 0;
