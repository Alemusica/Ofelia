#N canvas 321 23 601 560 10;
#X obj 0 0 cnv 15 580 40 empty empty ofGetImageTexCoords 3 12 0 18
-204280 -1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 420 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 428 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 505 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 456 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 479 1) symbol;
#X text 95 395 name <s>;
#N canvas 321 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#X obj 30 243 print;
#X obj 457 5 ofGetImageTexCoords;
#X text 41 191 get the texture coordinates of the image from 2d vertices.
;
#X text 11 23 get the texture coordinates of the image from 2d vertices
;
#X text 95 369 list;
#X text 95 428 list;
#X text 221 428 - the texture coordinates of the image.;
#X text 221 369 - gets the texture coordinates of the image from 2d
vertices.;
#X text 221 395 - sets the variable name followed by the index.;
#X text 221 479 - sets the variable name followed by the index.;
#X obj 30 216 ofGetImageTexCoords @myImages[0];
#X text 95 349 float;
#X text 221 349 - sets the index of the array element.;
#X msg 30 170 0 0 800 0 800 600 0 600;
#X obj 26 70 ofLoadImage \; @myImages \; examples/data/background.jpg
\; examples/data/texture.jpg \;;
#X connect 21 0 11 0;
#X connect 24 0 21 0;
