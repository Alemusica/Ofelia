#N canvas 321 23 601 828 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofLoadVec4f 3 12 0 18 -204280
-1 0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 670 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 678 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 775 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 706 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 678 float;
#X text 95 479 name <s>;
#X text 95 499 load <l>;
#X text 95 539 append <l>;
#X text 95 559 prepend <l>;
#X text 95 619 erase <f \, f>;
#X text 95 639 clear;
#X text 72 729 1) symbol;
#X text 72 749 2) list;
#N canvas 322 123 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X msg 26 93 print;
#X text 72 333 remove all elements from the array.;
#X msg 26 333 clear;
#X floatatom 26 397 5 0 0 0 - - -, f 5;
#X text 281 678 - the number of elements stored in the array.;
#X text 70 397 the number of elements stored in the array.;
#X obj 505 5 ofLoadVec4f;
#X msg 26 213 prepend 0 1 2 3;
#X msg 26 153 add 12 13 14 15;
#X text 130 153 add an element "12 13 14 15" to the end of the array.
;
#X text 130 213 prepend "0 1 2 3" to the array.;
#X msg 26 123 load 4 5 6 7 8 9 10 11;
#X msg 26 183 append 16 17 18 19;
#X text 149 183 append "16 17 18 19" to the array.;
#X msg 26 243 insert 7 6 5 4 2 2;
#X msg 26 273 fill 11 10 9 8 4 4;
#X msg 26 303 erase 3 4;
#X text 95 519 add <f \, f \, f \, f>;
#X text 95 579 insert <f \, f \, f \, f \, f \, f>;
#X text 95 599 fill <f \, f \, f \, f \, f \, f>;
#X text 75 93 print the name and stored array elements.;
#X text 281 479 - sets the unique variable name for the array.;
#X text 281 499 - (re)initializes an array with one or more elements.
;
#X text 281 519 - adds a single element to the end of the array.;
#X text 281 539 - appends one or more elements to the array.;
#X text 281 559 - prepends one or more elements to the array.;
#X text 281 579 - inserts an element at the specified position.;
#X text 281 599 - assigns value to all the elements in the range.;
#X text 281 619 - removes a range of elements from the array.;
#X text 281 639 - removes all elements from the array.;
#X text 281 729 - sets the unique variable name for the array.;
#X text 281 749 - initializes an array with one or more elements.;
#X text 174 123 (re)initialize an array with "4 5 6 7" \, "8 9 10 11".
;
#X text 148 243 insert "7 6 5 4" to the index range "2~2".;
#X text 148 273 assign "11 10 9 8" to the index range "4~4".;
#X text 94 303 remove the index range "3~4".;
#N canvas 321 121 599 523 related_editor_objects 0;
#X text 187 391 edit the specified array element.;
#X msg 30 224 limit 3;
#X msg 30 294 normalize;
#X msg 30 324 scale 10;
#X text 99 294 normalize the array element to a length of 1;
#X text 86 224 restrict the length(magnitude) of the array element
to "3".;
#X msg 30 34 assign 3 4 5 6;
#X text 129 34 assign "3 4 5 6" to the array element.;
#X msg 30 64 add 2 3 4 5;
#X text 110 64 add "2 3 4 5" to the array element.;
#X msg 30 94 sub 1 2 3 4;
#X msg 30 124 mult 3 2 1 0;
#X text 110 94 subtract "1 2 3 4" from the array element.;
#X text 117 124 multiply the array element by "3 2 1 0".;
#X msg 30 154 div 4 5 6 7;
#X text 112 154 divide the array element by "4 5 6 7".;
#X msg 30 184 lerp 5 4 3 2 0.5;
#X text 140 185 linearly interpolate the array element towards "5 4
3 2" with the control amount of "0.5".;
#X msg 30 254 middle 8 6 4 2;
#X text 130 255 set the array element to the midpoint between itself
and "8 6 4 2".;
#X obj 30 391 ofEditVec4f @myVec4fs[1];
#X obj 30 455 print;
#X obj 30 413 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 48 413 outputs bang when editing is done.;
#X obj 30 433 ofGetVec4f @myVec4fs[1];
#X text 94 324 scale the array element up or down so that it has the
requested length "10".;
#X connect 1 0 20 0;
#X connect 2 0 20 0;
#X connect 3 0 20 0;
#X connect 6 0 20 0;
#X connect 8 0 20 0;
#X connect 10 0 20 0;
#X connect 11 0 20 0;
#X connect 14 0 20 0;
#X connect 16 0 20 0;
#X connect 18 0 20 0;
#X connect 20 0 22 0;
#X connect 22 0 24 0;
#X connect 24 0 21 0;
#X restore 26 428 pd related_editor_objects;
#N canvas 322 122 977 734 related_getter_objects 0;
#X obj 30 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 232 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 283 print;
#X obj 30 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 83 5 0 0 0 - - -, f 5;
#X floatatom 30 195 5 0 0 0 - - -, f 5;
#X floatatom 72 195 5 0 0 0 - - -, f 5;
#X text 68 83 0: not exists \, 1: exists.;
#X obj 30 322 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 395 5 0 0 0 - - -, f 5;
#X floatatom 72 395 5 0 0 0 - - -, f 5;
#X floatatom 30 493 8 0 0 0 - - -, f 8;
#X floatatom 560 493 8 0 0 0 - - -, f 8;
#X text 641 430 calculate and return the squared distance.;
#X floatatom 30 593 8 0 0 0 - - -, f 8;
#X obj 30 632 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 683 8 0 0 0 - - -, f 8;
#X obj 560 632 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 560 683 8 0 0 0 - - -, f 8;
#X text 53 631 return the length(magnitude) of the array element.;
#X text 583 631 return the squared length(magnitude).;
#X floatatom 114 395 5 0 0 0 - - -, f 5;
#X text 53 31 check if the vec4f variable name exists or not.;
#X text 53 121 get a vec4f element at the index "1". (starting from
"0");
#X obj 30 173 unpack f f f f;
#X floatatom 114 195 5 0 0 0 - - -, f 5;
#X floatatom 156 195 5 0 0 0 - - -, f 5;
#X text 53 231 get all vec4f elements as a list.;
#X obj 30 373 unpack f f f f;
#X floatatom 156 395 5 0 0 0 - - -, f 5;
#X msg 30 430 10 20 30 40;
#X text 111 430 calculate and return the distance between the array
element and "10 20 30 40";
#X msg 560 430 10 20 30 40;
#X msg 30 530 3 2 1 0;
#X text 88 530 calculate and return the dot product of the array element
with "3 2 1 0".;
#X text 53 321 get the average value of vec4f elements.;
#X obj 30 56 ofDoesVec4fNameExist @myVec4fs;
#X obj 30 146 ofGetVec4f @myVec4fs[1];
#X obj 30 256 ofGetVec4fs @myVec4fs;
#X obj 30 346 ofGetVec4fAverage @myVec4fs;
#X obj 30 466 ofGetVec4fDist @myVec4fs[1];
#X obj 30 566 ofGetVec4fDot @myVec4fs[1];
#X obj 30 656 ofGetVec4fLength @myVec4fs[1];
#X obj 560 466 ofGetVec4fDistSquared @myVec4fs[1];
#X obj 560 656 ofGetVec4fLengthSquared @myVec4fs[1];
#X connect 0 0 37 0;
#X connect 1 0 38 0;
#X connect 3 0 36 0;
#X connect 8 0 39 0;
#X connect 15 0 42 0;
#X connect 17 0 44 0;
#X connect 24 0 5 0;
#X connect 24 1 6 0;
#X connect 24 2 25 0;
#X connect 24 3 26 0;
#X connect 28 0 9 0;
#X connect 28 1 10 0;
#X connect 28 2 21 0;
#X connect 28 3 29 0;
#X connect 30 0 40 0;
#X connect 32 0 43 0;
#X connect 33 0 41 0;
#X connect 36 0 4 0;
#X connect 37 0 24 0;
#X connect 38 0 2 0;
#X connect 39 0 28 0;
#X connect 40 0 11 0;
#X connect 41 0 14 0;
#X connect 42 0 16 0;
#X connect 43 0 12 0;
#X connect 44 0 18 0;
#X restore 26 448 pd related_getter_objects;
#X text 11 23 store an array of four dimensional vectors;
#X text 21 43 [ofLoadVec4f] stores an array of four dimensional vectors
that can be edited or used by its related "getter" objects.;
#X obj 26 370 ofLoadVec4f @myVec4fs 7 8 9 10 11 12 13 14;
#X obj 462 46 declare -lib ofelia;
#X connect 17 0 57 0;
#X connect 19 0 57 0;
#X connect 24 0 57 0;
#X connect 25 0 57 0;
#X connect 28 0 57 0;
#X connect 29 0 57 0;
#X connect 31 0 57 0;
#X connect 32 0 57 0;
#X connect 33 0 57 0;
#X connect 57 0 20 0;
