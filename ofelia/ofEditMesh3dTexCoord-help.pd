#N canvas 321 23 601 851 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofEditMesh3dTexCoord 3 12 0 18
-204280 -1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 720 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 360 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 728 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 805 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 756 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 72 779 1) symbol;
#N canvas 322 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 233 182 edit the specified array element.;
#X obj 23 207 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 207 outputs bang when editing is done.;
#X obj 23 257 print;
#X text 241 389 - assigns the value to the array element.;
#X text 241 449 - adds the value to the array element.;
#X text 241 469 - subtracts the value from the array element.;
#X text 241 489 - multiplies the array element by the value.;
#X text 241 509 - divides the array element by the value.;
#X text 241 529 - linearly interpolates the array element.;
#X text 95 728 bang;
#X text 241 728 - outputs bang when editing is done.;
#X text 241 369 - sets the variable name followed by the index.;
#X text 241 779 - sets the variable name followed by the index.;
#X text 95 389 assign <f \, f>;
#X text 95 449 add <f \, f>;
#X text 95 469 sub <f \, f>;
#X text 95 489 mult <f \, f>;
#X text 95 509 div <f \, f>;
#X text 95 529 lerp <f \, f \, f>;
#X text 241 589 - sets the array element to the midpoint.;
#X text 95 549 limit <f>;
#X text 95 589 middle <f \, f>;
#X text 95 609 normalize;
#X text 95 629 perpendicular;
#X text 95 649 rotate <f \, f \, f>;
#X text 95 669 rotateRad <f \, f \, f>;
#X text 95 689 scale <f>;
#X text 241 549 - restricts the length of the array element.;
#X text 241 569 - maps the array element to a new coordinate system.
;
#X text 241 609 - normalizes the array element to a length of 1;
#X text 241 629 - sets the array element to its own perpendicular.
;
#X text 241 649 - rotates the array element by degrees around the pivot.
;
#X text 241 669 - rotates the array element by radians around the pivot.
;
#X text 241 689 - scales the array element up or down to the length.
;
#X text 95 569 map <6f>;
#X text 68 257 print all array elements as a list.;
#X text 95 409 assignX <f>;
#X text 95 429 assignY <f>;
#X text 241 409 - assigns the x value to the array element.;
#X text 241 429 - assigns the y value to the array element.;
#X text 95 349 float;
#X text 241 349 - sets the index of the array element.;
#X msg 23 65 print;
#X text 70 65 print the current settings and stored array elements.
;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#N canvas 322 115 618 255 related_drawer_objects 0;
#X obj 63 34 loadbang;
#X obj 63 55 ofGetLastRenderOrder;
#X obj 30 76 ofHead;
#X obj 30 97 ofClear 63;
#X obj 30 163 ofSetFillMode FILLED;
#X obj 147 141 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 176 191 draw the stored mesh.;
#X text 172 140 note: the mesh will be drawn as a wireframe when it's
not filled.;
#X obj 30 119 ofTranslate 110 70;
#X obj 30 190 ofDrawMesh3d @myMesh3d;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 9 0;
#X connect 5 0 4 1;
#X connect 8 0 4 0;
#X restore 23 298 pd related_drawer_objects;
#X text 11 23 edit the stored mesh3d texture coordinate;
#X obj 451 5 ofEditMesh3dTexCoord;
#X obj 23 89 ofLoadMesh3d \; @myMesh3d \; rectangle 100 100 \;;
#N canvas 322 115 605 642 ofEditMesh3dTexCoord_parameters 0;
#X msg 30 34 assign 3 4;
#X text 104 34 assign "3 4" to the array element.;
#X msg 30 64 add 2 3;
#X text 86 64 add "2 3" to the array element.;
#X msg 30 94 sub 1 2;
#X text 88 94 subtract "1 2" from the array element.;
#X msg 30 124 mult 3 2;
#X text 94 124 multiply the array element by "3 2".;
#X msg 30 154 div 4 5;
#X text 88 154 divide the array element by "4 5".;
#X msg 30 184 lerp 5 4 0.5;
#X text 117 185 linearly interpolate the array element towards "5 4"
with the control amount of "0.5".;
#X msg 30 254 map 0 0 2 0 0 2;
#X msg 30 224 limit 3;
#X msg 30 314 middle 8 6;
#X text 106 314 set the array element to the midpoint between itself
and "8 6".;
#X msg 30 354 normalize;
#X msg 30 384 perpendicular;
#X msg 30 424 rotate 90 5 4;
#X msg 30 464 rotateRad 1.5 5 4;
#X msg 30 504 scale 10;
#X obj 30 571 outlet;
#X text 136 255 map the array element from its default coordinate system
origin (0 \, 0) \, x direction (1 \, 0) \, y direction (0 \, 1) to
a new coordinate system defined with origin at "0 0" \, X direction
"2 0" \, and Y direction "0 2".;
#X text 86 224 restrict the length(magnitude) of the array element
to "3".;
#X text 100 354 normalize the array element to a length of 1;
#X text 125 385 set the array element to its own normalized perpendicular
(by rotating 90 degrees and normalizing);
#X text 125 424 rotate the array element by "90" angle degrees around
the pivot "5 4".;
#X text 147 465 rotate the array element by "1.5" angle radians around
the pivot "5 4".;
#X text 94 504 scale the array element up or down so that it has the
requested length "10".;
#X connect 0 0 21 0;
#X connect 2 0 21 0;
#X connect 4 0 21 0;
#X connect 6 0 21 0;
#X connect 8 0 21 0;
#X connect 10 0 21 0;
#X connect 12 0 21 0;
#X connect 13 0 21 0;
#X connect 14 0 21 0;
#X connect 16 0 21 0;
#X connect 17 0 21 0;
#X connect 18 0 21 0;
#X connect 19 0 21 0;
#X connect 20 0 21 0;
#X restore 23 158 pd ofEditMesh3dTexCoord_parameters;
#X obj 23 182 ofEditMesh3dTexCoord @myMesh3d[1];
#X obj 23 230 ofGetMesh3dTexCoords @myMesh3d;
#X obj 462 46 declare -lib ofelia;
#X connect 11 0 62 0;
#X connect 53 0 59 0;
#X connect 60 0 61 0;
#X connect 61 0 11 0;
#X connect 62 0 13 0;
