#N canvas 321 23 601 798 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofEditRect 3 12 0 18 -204280 -1
0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 660 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 300 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 668 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 745 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 696 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 72 719 1) symbol;
#N canvas 322 115 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X floatatom 26 131 5 0 0 0 - - -, f 5;
#X text 66 131 the number of elements stored in the array.;
#X text 169 222 edit the specified array element.;
#X obj 26 247 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 44 247 outputs bang when editing is done.;
#X obj 26 297 print;
#X text 95 668 bang;
#X text 241 668 - outputs bang when editing is done.;
#X text 241 369 - sets the variable name followed by the index.;
#X text 241 719 - sets the variable name followed by the index.;
#X text 71 297 print all array elements as a list.;
#X text 95 349 float;
#X text 241 349 - sets the index of the array element.;
#X obj 462 46 declare -lib ofelia;
#X obj 511 5 ofEditRect;
#N canvas 322 119 661 545 ofEditRect_parameters 0;
#X msg 30 34 assign 100 100 30 30;
#X text 164 34 assign "100 100 30 30" to the array element.;
#X msg 30 64 assignFromCenter 100 100 30 30;
#X text 225 64 assign "100 100 30 30" from center to the array element.
;
#X msg 30 94 assignX 200;
#X text 110 94 assign "200" to the x position of the array element.
;
#X msg 30 124 assignY 200;
#X text 110 124 assign "200" to the y position of the array element.
;
#X msg 30 154 assignWidth 50;
#X text 128 154 assign "50" to the width of the array element.;
#X msg 30 184 assignHeight 50;
#X text 135 185 assign "50" to the height of the array element.;
#X msg 30 274 growToInclude 300 200;
#X text 173 274 grow the rectangle to include the given point.;
#X msg 30 304 growToInclude 300 200 50 50;
#X text 206 304 grow the rectangle to include the given rectangle.
;
#X text 100 334 scale the width and height of the rectangle.;
#X text 159 364 scale the width and height of the rectangle from its
center.;
#X msg 30 334 scale 2 1;
#X msg 30 364 scaleFromCenter 1 2;
#X msg 30 394 standardize;
#X text 109 394 standardize the rectangle.;
#X msg 30 424 translate 50 50;
#X text 133 424 offsets the position of the rectangle.;
#X obj 30 481 outlet;
#X msg 30 214 assignPos 200 200;
#X text 146 214 assign "200 200" to the position of the array element.
;
#X msg 30 244 assignDimen 50 50;
#X text 146 244 assign "50 50" to the dimensions of the array element.
;
#X connect 0 0 24 0;
#X connect 2 0 24 0;
#X connect 4 0 24 0;
#X connect 6 0 24 0;
#X connect 8 0 24 0;
#X connect 10 0 24 0;
#X connect 12 0 24 0;
#X connect 14 0 24 0;
#X connect 18 0 24 0;
#X connect 19 0 24 0;
#X connect 20 0 24 0;
#X connect 22 0 24 0;
#X connect 25 0 24 0;
#X connect 27 0 24 0;
#X restore 26 198 pd ofEditRect_parameters;
#X obj 26 222 ofEditRect @myRects[1];
#X obj 26 270 ofGetRects @myRects;
#X obj 26 70 ofLoadRect \; @myRects \; 0 0 100 80 \; 200 150 110 80
\;;
#X text 11 23 edit the stored rectangle;
#X text 95 389 assign <f \, f \, f \, f>;
#X text 241 389 - assigns the rectangle to the array element.;
#X text 95 429 assignX <f>;
#X text 95 449 assignY <f>;
#X text 95 469 assignWidth <f>;
#X text 95 489 assignHeight <f>;
#X text 241 429 - assigns the x position to the array element.;
#X text 241 449 - assigns the y position to the array element.;
#X text 241 469 - assigns the width to the array element.;
#X text 241 489 - assigns the height to the array element.;
#X text 95 549 growToInclude <l>;
#X text 241 549 - grow the rectangle to include the given point/rectangle.
;
#X text 95 569 scale <f \, f>;
#X text 241 569 - scale the width and height of the rectangle.;
#X text 95 589 scaleFromCenter <f \, f>;
#X text 241 589 - scale the width and height of the rectangle from
center.;
#X text 241 409 - assigns the rectangle from center to the array element.
;
#X text 95 409 assignFromCenter <4f>;
#X text 95 610 standardize;
#X text 241 609 - standardize the rectangle.;
#X text 95 629 translate <f \, f>;
#X text 241 629 - offsets the position of the rectangle.;
#X text 95 509 assignPos <f \, f>;
#X text 95 529 assignDimen <f \, f>;
#X text 241 509 - assigns the position to the array element.;
#X text 241 529 - assigns the dimension to the array element.;
#X connect 13 0 27 0;
#X connect 25 0 26 0;
#X connect 26 0 13 0;
#X connect 27 0 15 0;
#X connect 28 0 10 0;
