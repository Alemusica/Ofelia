#N canvas 518 52 665 802 10;
#X declare -lib ofelia;
#X obj 26 109 ofWindow;
#X obj 26 169 ofGetDimen;
#X obj 26 229 ofGetFrameRate;
#X obj 26 249 ofGetTargetFrameRate;
#X obj 26 269 ofGetElapsedTime;
#X obj 26 349 ofGetOrienLock;
#X obj 26 369 ofGetOrien;
#X obj 26 389 ofGetFullscreen;
#X obj 26 409 ofGetFocus;
#X obj 26 529 ofGetScreenDimen;
#X obj 26 549 ofGetRetina;
#X obj 26 629 ofGetBgColor;
#X obj 26 649 ofGetWindow;
#X obj 26 669 ofGetFirstRenderOrder;
#X obj 26 689 ofGetLastRenderOrder;
#X obj 26 129 ofGetWidth;
#X obj 26 149 ofGetHeight;
#X obj 26 489 ofGetScreenWidth;
#X obj 26 509 ofGetScreenHeight;
#X obj 26 569 ofGetBgColorR;
#X obj 26 589 ofGetBgColorG;
#X obj 26 609 ofGetBgColorB;
#X obj 26 209 ofGetFrameNum;
#X obj 26 709 ofTouchListener;
#X obj 26 729 ofMouseListener;
#X obj 26 749 ofScrollListener;
#X obj 26 769 ofKeyListener;
#X obj 26 809 ofAccelListener;
#X obj 26 849 ofOrienListener;
#X obj 26 869 ofFullscreenListener;
#X obj 26 889 ofFocusListener;
#X obj 26 929 ofWindowListener;
#X obj 26 989 ofBackListener;
#X obj 26 949 ofWindowLoadBang;
#X obj 26 969 ofWindowCloseBang;
#X text 224 109 - handle the output window;
#X obj 26 1049 ofHead;
#X obj 26 1989 ofCircle;
#X obj 26 2009 ofEllipse;
#X obj 26 2029 ofArc;
#X obj 26 2049 ofSector;
#X obj 26 2069 ofLine2d;
#X obj 26 2089 ofLine3d;
#X obj 26 2109 ofCurve2d;
#X obj 26 2129 ofCurve3d;
#X obj 26 2149 ofBezier2d;
#X obj 26 2169 ofBezier3d;
#X obj 26 2189 ofQuadBezier2d;
#X obj 26 2209 ofQuadBezier3d;
#X obj 26 2229 ofTriangle2d;
#X obj 26 2249 ofTriangle3d;
#X obj 26 2269 ofEqTriangle;
#X obj 26 2289 ofIsoTriangle;
#X obj 26 2309 ofQuad2d;
#X obj 26 2329 ofQuad3d;
#X obj 26 2349 ofSquare;
#X obj 26 2369 ofRectangle;
#X obj 26 2389 ofRectRounded;
#X obj 26 2409 ofRectRounded4;
#X obj 26 2429 ofCross;
#X obj 26 2449 ofHeart;
#X obj 26 2469 ofMoon;
#X obj 26 2489 ofRegPolygon;
#X obj 26 2509 ofStar;
#X obj 26 2529 ofAxis;
#X obj 26 2549 ofBox;
#X obj 26 2569 ofCone;
#X obj 26 2589 ofCylinder;
#X obj 26 2609 ofIcosphere;
#X obj 26 2629 ofPlane;
#X obj 26 2649 ofSphere;
#X obj 26 2669 ofArrow;
#X obj 26 2689 ofGrid;
#X obj 26 2709 ofGridPlane;
#X obj 26 2729 ofRotationAxes;
#X obj 26 1809 ofBeginShape;
#X obj 26 1829 ofEndShape;
#X obj 26 1869 ofVertex2d;
#X obj 26 1889 ofVertex3d;
#X obj 26 1909 ofCurveVertex2d;
#X obj 26 1929 ofCurveVertex3d;
#X obj 26 1949 ofBezierVertex2d;
#X obj 26 1969 ofBezierVertex3d;
#X obj 26 1849 ofNextContour;
#X obj 26 3809 ofBindFboTex;
#X obj 26 3829 ofDrawFbo;
#X obj 26 3889 ofGetFboDimen;
#X obj 26 3909 ofGetFboType;
#X obj 26 3849 ofDoesFboNameExist;
#X obj 26 3789 ofCreateFbo;
#X obj 26 3869 ofIsFboAllocated;
#X obj 26 4009 ofEditImage;
#X obj 26 4049 ofBindImageTex;
#X obj 26 4069 ofDrawImage;
#X obj 26 4089 ofDrawSubImage;
#X obj 26 4129 ofGetImagePath;
#X obj 26 4169 ofGetImageDimen;
#X obj 26 4189 ofGetImageType;
#X obj 26 4209 ofGetImageColorAt;
#X obj 26 4229 ofGetImageTexCoord;
#X obj 26 4249 ofGetImageTexCoords;
#X obj 26 4109 ofDoesImageNameExist;
#X obj 26 4029 ofSaveImage;
#X obj 26 3989 ofLoadImage;
#X obj 26 3969 ofCreateImage;
#X obj 26 4149 ofIsImageAllocated;
#X obj 26 4889 ofLoadFont;
#X obj 26 4909 ofEditFont;
#X obj 26 4949 ofDrawText;
#X obj 26 4969 ofDrawTextAsShapes;
#X obj 26 4929 ofBindFontTex;
#X obj 26 5009 ofGetFontPath;
#X obj 26 5029 ofGetFontSize;
#X obj 26 5069 ofGetTextBoundingBox;
#X obj 26 5089 ofGetFontLetterSpacing;
#X obj 26 5109 ofGetFontLineHeight;
#X obj 26 5129 ofGetFontSpaceSize;
#X obj 26 5149 ofGetTextMesh2dCommands;
#X obj 26 5169 ofGetTextMesh3dCommands;
#X obj 26 4989 ofDoesFontNameExist;
#X obj 26 5049 ofIsFontLoaded;
#X obj 26 3269 ofLoadPath2d;
#X obj 26 3309 ofDrawPath2d;
#X obj 26 3549 ofGetPath2dCommands;
#X obj 26 3589 ofGetPath2dTessellation;
#X obj 26 3629 ofGetPath2dBoundingBox;
#X obj 26 3289 ofLoadPath3d;
#X obj 26 3329 ofDrawPath3d;
#X obj 26 3569 ofGetPath3dCommands;
#X obj 26 3609 ofGetPath3dTessellation;
#X obj 26 3649 ofGetPath3dBoundingBox;
#X obj 26 3349 ofDoesPath2dNameExist;
#X obj 26 3369 ofDoesPath3dNameExist;
#X obj 26 3469 ofIsPointInsidePath2d;
#X obj 26 3489 ofIsPointInsidePath3d;
#X obj 26 3389 ofGetPath2dPoint;
#X obj 26 3409 ofGetPath3dPoint;
#X obj 26 3429 ofGetPath2dPoints;
#X obj 26 3449 ofGetPath3dPoints;
#X obj 26 3509 ofGetPath2dCommand;
#X obj 26 3529 ofGetPath3dCommand;
#X obj 26 3669 ofGetPath2dCentroid;
#X obj 26 3689 ofGetPath3dCentroid;
#X obj 26 3709 ofGetPath2dArea;
#X obj 26 3729 ofGetPath3dArea;
#X obj 26 3749 ofGetPath2dPerimeter;
#X obj 26 3769 ofGetPath3dPerimeter;
#X obj 26 2749 ofLoadPolyline2d;
#X obj 26 2789 ofDrawPolyline2d;
#X obj 26 3069 ofGetPolyline2dCommands;
#X obj 26 3109 ofGetPolyline2dBoundingBox;
#X obj 26 2769 ofLoadPolyline3d;
#X obj 26 2809 ofDrawPolyline3d;
#X obj 26 3089 ofGetPolyline3dCommands;
#X obj 26 3129 ofGetPolyline3dBoundingBox;
#X obj 26 2829 ofDoesPolyline2dNameExist;
#X obj 26 2849 ofDoesPolyline3dNameExist;
#X obj 26 2989 ofIsPointInsidePolyline2d;
#X obj 26 3009 ofIsPointInsidePolyline3d;
#X obj 26 2909 ofGetPolyline2dPoint;
#X obj 26 2929 ofGetPolyline3dPoint;
#X obj 26 2949 ofGetPolyline2dPoints;
#X obj 26 2969 ofGetPolyline3dPoints;
#X obj 26 3029 ofGetPolyline2dCommand;
#X obj 26 3049 ofGetPolyline3dCommand;
#X obj 26 3149 ofGetPolyline2dCentroid;
#X obj 26 3169 ofGetPolyline3dCentroid;
#X obj 26 3189 ofGetPolyline2dArea;
#X obj 26 3209 ofGetPolyline3dArea;
#X obj 26 2869 ofEditPolyline2dPoint;
#X obj 26 2889 ofEditPolyline3dPoint;
#X obj 26 3229 ofGetPolyline2dPerimeter;
#X obj 26 3249 ofGetPolyline3dPerimeter;
#X obj 26 5189 ofLoadMesh2d;
#X obj 26 5209 ofLoadMesh3d;
#X obj 26 5229 ofDrawMesh2d;
#X obj 26 5249 ofDrawMesh3d;
#X obj 26 5909 ofGetMesh2dCommands;
#X obj 26 5929 ofGetMesh3dCommands;
#X obj 26 5949 ofGetMesh2dBoundingBox;
#X obj 26 5969 ofGetMesh3dBoundingBox;
#X obj 26 5509 ofGetMesh2dVertex;
#X obj 26 5709 ofGetMesh2dVertices;
#X obj 26 5549 ofGetMesh2dIndex;
#X obj 26 5589 ofGetMesh2dNormal;
#X obj 26 5629 ofGetMesh2dTexCoord;
#X obj 26 5669 ofGetMesh2dColor;
#X obj 26 5749 ofGetMesh2dIndices;
#X obj 26 5789 ofGetMesh2dNormals;
#X obj 26 5829 ofGetMesh2dTexCoords;
#X obj 26 5869 ofGetMesh2dColors;
#X obj 26 5529 ofGetMesh3dVertex;
#X obj 26 5569 ofGetMesh3dIndex;
#X obj 26 5609 ofGetMesh3dNormal;
#X obj 26 5649 ofGetMesh3dTexCoord;
#X obj 26 5689 ofGetMesh3dColor;
#X obj 26 5729 ofGetMesh3dVertices;
#X obj 26 5769 ofGetMesh3dIndices;
#X obj 26 5809 ofGetMesh3dNormals;
#X obj 26 5849 ofGetMesh3dTexCoords;
#X obj 26 5889 ofGetMesh3dColors;
#X obj 26 5269 ofDoesMesh2dNameExist;
#X obj 26 5289 ofDoesMesh3dNameExist;
#X obj 26 5989 ofGetMesh2dCentroid;
#X obj 26 6009 ofGetMesh3dCentroid;
#X obj 26 5309 ofEditMesh2dVertex;
#X obj 26 5329 ofEditMesh3dVertex;
#X obj 26 5349 ofEditMesh2dIndex;
#X obj 26 5369 ofEditMesh3dIndex;
#X obj 26 5389 ofEditMesh2dNormal;
#X obj 26 5409 ofEditMesh3dNormal;
#X obj 26 5429 ofEditMesh2dTexCoord;
#X obj 26 5449 ofEditMesh3dTexCoord;
#X obj 26 5469 ofEditMesh2dColor;
#X obj 26 5489 ofEditMesh3dColor;
#X obj 26 6029 ofEasyCam;
#X obj 26 6049 ofCamera;
#X obj 26 6109 ofDirectionalLight;
#X obj 26 6069 ofPointLight;
#X obj 26 6089 ofSpotlight;
#X obj 26 6129 ofMaterial;
#X obj 26 1629 ofViewport;
#X obj 26 1209 ofPushMatrix;
#X obj 26 1229 ofPopMatrix;
#X obj 26 1069 ofTranslate;
#X obj 26 1089 ofRotateX;
#X obj 26 1109 ofRotateY;
#X obj 26 1129 ofRotateZ;
#X obj 26 1189 ofScale;
#X obj 26 1529 ofPushStyle;
#X obj 26 1549 ofPopStyle;
#X obj 26 1309 ofSetColor;
#X obj 26 1329 ofSetBgColor;
#X obj 26 1349 ofSetRectMode;
#X obj 26 1369 ofSetTextMode;
#X obj 26 1389 ofSetFillMode;
#X obj 26 1429 ofSetBlendMode;
#X obj 26 1449 ofSetLineWidth;
#X obj 26 1489 ofSetCircleRes;
#X obj 26 1509 ofSetCurveRes;
#X obj 26 1409 ofSetPolyMode;
#X obj 26 1469 ofSetLineSmoothing;
#X obj 26 1589 ofSepStyle;
#X obj 26 1569 ofSepMatrix;
#X obj 26 1609 ofSeparator;
#X obj 26 1649 ofSetDepthTest;
#X obj 26 1669 ofSetArbTex;
#X obj 26 1729 ofClear;
#X obj 26 1749 ofClearColor;
#X obj 26 1769 ofClearDepth;
#X obj 26 1789 ofClearAlpha;
#X obj 26 1689 ofSetAntiAliasing;
#X obj 26 1709 ofSetBgAuto;
#X obj 26 6189 ofLoadFloat;
#X obj 26 6209 ofEditFloat;
#X obj 26 6229 ofDoesFloatNameExist;
#X obj 26 6249 ofGetFloat;
#X obj 26 6269 ofGetFloats;
#X obj 26 6289 ofGetFloatAverage;
#X obj 26 7409 ofLoadSymbol;
#X obj 26 7429 ofEditSymbol;
#X obj 26 7449 ofDoesSymbolNameExist;
#X obj 26 7469 ofGetSymbol;
#X obj 26 7489 ofGetSymbols;
#X obj 26 6369 ofGetVec2f;
#X obj 26 6309 ofLoadVec2f;
#X obj 26 6329 ofEditVec2f;
#X obj 26 6349 ofDoesVec2fNameExist;
#X obj 26 6389 ofGetVec2fs;
#X obj 26 6409 ofGetVec2fAverage;
#X obj 26 6429 ofGetVec2fAngle;
#X obj 26 6449 ofGetVec2fAngleRad;
#X obj 26 6469 ofGetVec2fDist;
#X obj 26 6489 ofGetVec2fDistSquared;
#X obj 26 6509 ofGetVec2fDot;
#X obj 26 6529 ofGetVec2fLength;
#X obj 26 6549 ofGetVec2fLengthSquared;
#X obj 26 6569 ofLoadVec3f;
#X obj 26 6589 ofEditVec3f;
#X obj 26 6609 ofDoesVec3fNameExist;
#X obj 26 6629 ofGetVec3f;
#X obj 26 6649 ofGetVec3fs;
#X obj 26 6669 ofGetVec3fAverage;
#X obj 26 6689 ofGetVec3fAngle;
#X obj 26 6709 ofGetVec3fAngleRad;
#X obj 26 6729 ofGetVec3fDist;
#X obj 26 6749 ofGetVec3fDistSquared;
#X obj 26 6769 ofGetVec3fDot;
#X obj 26 6789 ofGetVec3fLength;
#X obj 26 6809 ofGetVec3fLengthSquared;
#X obj 26 6829 ofLoadVec4f;
#X obj 26 6849 ofEditVec4f;
#X obj 26 6869 ofDoesVec4fNameExist;
#X obj 26 6889 ofGetVec4f;
#X obj 26 6909 ofGetVec4fs;
#X obj 26 6929 ofGetVec4fAverage;
#X obj 26 6949 ofGetVec4fDist;
#X obj 26 6969 ofGetVec4fDistSquared;
#X obj 26 6989 ofGetVec4fDot;
#X obj 26 7009 ofGetVec4fLength;
#X obj 26 7029 ofGetVec4fLengthSquared;
#X obj 26 7049 ofLoadColor;
#X obj 26 7069 ofEditColor;
#X obj 26 7089 ofDoesColorNameExist;
#X obj 26 7109 ofGetColor;
#X obj 26 7129 ofGetColors;
#X obj 26 7589 ofDegToRad;
#X obj 26 7609 ofRadToDeg;
#X obj 26 7629 ofDist2d;
#X obj 26 7649 ofDist3d;
#X obj 26 7669 ofDistSquared2d;
#X obj 26 7689 ofDistSquared3d;
#X obj 26 7709 ofInRange;
#X obj 26 7749 ofNormalize;
#X obj 26 7769 ofLerp;
#X obj 26 7789 ofLerpDegrees;
#X obj 26 7809 ofLerpRadians;
#X obj 26 7829 ofRandom;
#X obj 26 7909 ofWrap;
#X obj 26 7969 ofMap;
#X obj 26 8009 ofNoise;
#X obj 26 8029 ofSignedNoise;
#X obj 26 8049 ofSign;
#X obj 26 7549 ofAngleDifferenceDegrees;
#X obj 26 7569 ofAngleDifferenceRadians;
#X obj 26 7729 ofClamp;
#X obj 26 7929 ofWrapDegrees;
#X obj 26 7949 ofWrapRadians;
#X obj 26 7989 ofNextPow2;
#X obj 26 7849 ofRandomf;
#X obj 26 7869 ofRandomuf;
#X obj 26 7889 ofSeedRandom;
#X obj 26 8109 ofAppend;
#X obj 26 8129 ofPrepend;
#X obj 26 8149 ofPack;
#X obj 26 9209 ofCount;
#X obj 26 9229 ofCountUntil;
#X obj 26 9289 ofSwitch;
#X obj 26 9309 ofGate;
#X obj 26 9369 ofGetPlatform;
#X obj 26 9389 ofGetDate;
#X obj 26 9409 ofGetTime;
#X obj 26 8769 ofGetDollarZero;
#X obj 26 8809 ofGetCanvasArgs;
#X obj 26 9329 ofGetMinFloat;
#X obj 26 9349 ofGetMaxFloat;
#X obj 26 9249 ofStep;
#X obj 26 8489 ofListToSymbol;
#X obj 26 8509 ofSymbolToList;
#X obj 26 9009 ofGetPatchDirectory;
#X obj 26 9029 ofGetHomeDirectory;
#X obj 26 9049 ofGetDocumentsDirectory;
#X obj 26 9069 ofGetLibraryDirectory;
#X obj 26 9089 ofGetTemporaryDirectory;
#X obj 26 8949 ofGetDirectoryFileNames;
#X obj 26 8969 ofGetDirectoryFilePaths;
#X obj 26 9109 ofDoesDirectoryExist;
#X obj 26 8929 ofDoesFileExist;
#X obj 26 8869 ofError;
#X obj 26 8529 ofHexToHsb;
#X obj 26 8549 ofHexToRgb;
#X obj 26 8569 ofHsbToHex;
#X obj 26 8589 ofHsbToRgb;
#X obj 26 8609 ofRgbToHex;
#X obj 26 8629 ofRgbToHsb;
#X obj 26 8169 ofListFind;
#X obj 26 8189 ofFindList;
#X obj 26 8209 ofListInsert;
#X obj 26 8229 ofInsertList;
#X obj 26 8249 ofListFill;
#X obj 26 8269 ofFillList;
#X obj 26 8289 ofListReplace;
#X obj 26 8309 ofReplaceList;
#X obj 26 8329 ofListRemove;
#X obj 26 8349 ofRemoveList;
#X obj 26 8369 ofListErase;
#X obj 26 8389 ofEraseList;
#X obj 26 8409 ofListSort;
#X obj 26 8429 ofListUnique;
#X obj 26 8449 ofListReverse;
#X obj 26 8469 ofListShuffle;
#X obj 26 8649 ofValue;
#X obj 26 8669 ofSend;
#X obj 26 8689 ofReceive;
#X obj 26 8789 ofGetCanvasName;
#X obj 26 8709 ofExpr;
#X obj 26 8729 ofDefine;
#X obj 26 9269 ofAnimate;
#X obj 26 9129 ofGetAudioDevices;
#X obj 26 9149 ofSetAudioDevices;
#X obj 26 9169 ofGetMidiDevices;
#X obj 26 9189 ofSetMidiDevices;
#X obj 26 8889 ofFile;
#X obj 26 8989 ofDirectory;
#X obj 26 8909 ofSaveURL;
#X obj 26 8749 ofPatch;
#X obj 27 9469 ofSine~;
#X obj 27 9489 ofTriangle~;
#X obj 27 9509 ofSaw~;
#X obj 27 9529 ofSquare~;
#X obj 27 9549 ofPulse~;
#X obj 27 9569 ofBlTriangle~;
#X obj 27 9589 ofBlSaw~;
#X obj 27 9609 ofBlSquare~;
#X obj 27 9629 ofBlPulse~;
#X obj 27 9649 ofLowPass~;
#X obj 27 9669 ofHighPass~;
#X obj 27 9689 ofBandPass~;
#X obj 27 9709 ofNotch~;
#X obj 27 9729 ofPeaking~;
#X obj 27 9749 ofLowShelf~;
#X obj 27 9769 ofHighShelf~;
#X obj 27 9789 ofAllPass~;
#X text 224 129 - get the width of the current window;
#X text 224 149 - get the height of the current window;
#X text 224 169 - get the dimensions of the current window;
#X text 224 189 - get the scale of the current window;
#X text 224 209 - get the number of frames rendered;
#X text 224 229 - get the actual frame rate of the current window;
#X text 224 249 - get the target frame rate of the current window;
#X text 224 329 - get the last frame time in milliseconds;
#X text 224 349 - get the orientation lock state of the current window
;
#X text 224 369 - get the orientation of the current window;
#X text 224 389 - get the fullscreen state of the current window;
#X text 224 409 - get the focus state of the current window;
#X text 224 429 - get the x position of the current window;
#X text 224 449 - get the y position of the current window;
#X text 224 469 - get the position of the current window;
#X text 224 489 - get the width of the current device's screen;
#X text 224 509 - get the height of the current device's screen;
#X text 224 529 - get the dimensions of the current device's screen
;
#X text 224 549 - get the retina scale of the current device's screen
;
#X text 224 569 - get the r value of the background color;
#X text 224 589 - get the g value of the background color;
#X text 224 609 - get the b value of the background color;
#X text 224 629 - get the background color of the current window;
#X text 224 649 - check if a window exists;
#X text 224 669 - get the first rendering order;
#X text 224 689 - get the last rendering order;
#X text 224 709 - listen to the touch events;
#X text 224 729 - listen to the mouse events;
#X text 224 749 - listen to the mouse scroll events;
#X text 224 769 - listen to the key events;
#X text 224 809 - listen to the accelerometer events;
#X text 224 829 - listen to the updated scale of the current window
;
#X text 224 849 - listen to the updated orientation of the current
window;
#X text 224 869 - listen to the fullscreen mode of the current window
;
#X text 224 889 - listen to the focus state of the current window;
#X text 224 909 - listen to the updated position of the current window
;
#X text 224 929 - listen to the creation/destruction of the current
window;
#X text 224 949 - listen to the creation of the current window;
#X text 224 969 - listen to the destruction of the current window;
#X text 224 989 - listen to the back button press on android devices
;
#X text 224 1049 - the start of a rendering chain;
#X text 224 1809 - start drawing a new shape;
#X text 224 1829 - finish drawing the shape and draw it to the screen
;
#X text 224 1869 - specify a single 2d point of a shape;
#X text 224 1889 - specify a single 3d point of a shape;
#X text 224 1909 - specify a single 2d point of a shape;
#X text 224 1929 - specify a single 3d point of a shape;
#X text 224 1949 - describe a bezier curve through three points of
a shape;
#X text 224 1969 - describe a bezier curve through three points of
a shape;
#X text 224 1989 - draw a circle;
#X text 224 2009 - draw an ellipse;
#X text 224 2029 - draw an arc;
#X text 224 2049 - draw a sector;
#X text 224 2069 - draw a 2d line;
#X text 224 2089 - draw a 3d line;
#X text 224 2109 - draw a 2d curve;
#X text 224 2129 - draw a 3d curve;
#X text 224 2149 - draw a 2d bezier curve;
#X text 224 2169 - draw a 3d bezier curve;
#X text 224 2189 - draw a 2d quadratic bezier curve;
#X text 224 2209 - draw a 3d quadratic bezier curve;
#X text 224 2229 - draw a 2d triangle;
#X text 224 2249 - draw a 3d triangle;
#X text 224 2269 - draw an equilateral triangle;
#X text 224 2289 - draw an isosceles triangle;
#X text 224 2309 - draw a 2d quadrilateral;
#X text 224 2329 - draw a 3d quadrilateral;
#X text 224 2349 - draw a square;
#X text 224 2369 - draw a rectangle;
#X text 224 2389 - draw a rounded rectangle with a given corner radius
;
#X text 224 2409 - draw a rounded rectangle with a given 4 corner radiuses
;
#X text 224 2429 - draw a cross;
#X text 224 2449 - draw a heart;
#X text 224 2469 - draw a moon;
#X text 224 2489 - draw a regular polygon;
#X text 224 2509 - draw a star;
#X text 224 2529 - draw axes;
#X text 224 2549 - draw a box;
#X text 224 2569 - draw a cone;
#X text 224 2589 - draw a cylinder;
#X text 224 2609 - draw an icosphere;
#X text 224 2629 - draw a plane;
#X text 224 2649 - draw a sphere;
#X text 224 2669 - draw an arrow;
#X text 224 2689 - draw grid planes;
#X text 224 2709 - draw a yz grid plane;
#X text 224 2729 - draw a set of 3-axis aligned circular bands;
#X text 224 3789 - create framebuffer object;
#X text 224 3809 - bind the stored fbo's texture;
#X text 224 3829 - draw the stored fbo;
#X text 224 3849 - check the existence of a fbo variable name;
#X text 224 3869 - check if the fbo is allocated or not;
#X text 224 3889 - get the dimensions of the fbo;
#X text 224 3909 - get the type of the fbo;
#X text 224 3969 - create an image;
#X text 224 3989 - store an array of images;
#X text 224 4009 - edit the stored image;
#X text 224 4029 - save image to disk;
#X text 224 4049 - bind the stored image's texture;
#X text 224 4069 - draw the stored image;
#X text 224 4089 - draw a subsection of the image;
#X text 224 4109 - check the existence of an image variable name;
#X text 224 4129 - get the absolute path of the image;
#X text 224 4149 - check if the image is allocated or not;
#X text 224 4169 - get the dimensions of the image;
#X text 224 4189 - get the type of the image;
#X text 224 4209 - get the color of a pixel at the specified x \, y
index;
#X text 224 4229 - get the texture coordinate of the image from 2d
vertex;
#X text 224 4249 - get the texture coordinates of the image from 2d
vertices;
#X text 224 4889 - store an array of fonts;
#X text 224 4909 - edit the stored font;
#X text 224 4929 - bind the stored font's texture;
#X text 224 4949 - draw a text using the stored font;
#X text 224 4969 - draw a text as shapes using the stored font;
#X text 224 4989 - check the existence of a font variable name;
#X text 224 5009 - get the absolute path of the font;
#X text 224 5029 - get the size of the font;
#X text 224 5049 - check if the font is loaded or not;
#X text 224 5069 - get the dimensions of the text bounding box;
#X text 224 5089 - get the letter spacing of the font;
#X text 224 5109 - get the line height of the font;
#X text 224 5129 - get the space size of the font;
#X text 224 5149 - get the mesh2d data based on the font and text;
#X text 224 5169 - get the mesh3d data based on the font and text;
#X text 224 3269 - store an array of path2d commands;
#X text 224 3289 - store an array of path3d commands;
#X text 224 3309 - draw the stored path2d;
#X text 224 3329 - draw the stored path3d;
#X text 224 3349 - check the existence of a path2d variable name;
#X text 224 3369 - check the existence of a path3d variable name;
#X text 224 3389 - get a path2d point at the given index;
#X text 224 3409 - get a path3d point at the given index;
#X text 224 3429 - get all path2d points as a list;
#X text 224 3449 - get all path3d points as a list;
#X text 224 3469 - check if a 2d point is within a closed path2d;
#X text 224 3489 - check if a 2d point is within a closed path3d;
#X text 224 3509 - get a path2d command at the given index;
#X text 224 3529 - get a path3d command at the given index;
#X text 224 3549 - get all path2d commands as a list;
#X text 224 3569 - get all path3d commands as a list;
#X text 224 3589 - get the tessellation data to convert path2d to mesh2d
;
#X text 224 3609 - get the tessellation data to convert path3d to mesh3d
;
#X text 224 3629 - get the dimensions of the path2d bounding box;
#X text 224 3649 - get the dimensions of the path3d bounding box;
#X text 224 3669 - get the center position of the path2d area;
#X text 224 3689 - get the center position of the path3d area;
#X text 224 3709 - get the precise area of the path2d;
#X text 224 3729 - get the precise area of the path3d;
#X text 224 3749 - get the size of the perimeter of the path2d;
#X text 224 3769 - get the size of the perimeter of the path3d;
#X text 224 2749 - store an array of polyline2d commands;
#X text 224 2769 - store an array of polyline3d commands;
#X text 224 2789 - draw the stored polyline2d;
#X text 224 2809 - draw the stored polyline3d;
#X text 224 2829 - check the existence of a polyline2d variable name
;
#X text 224 2849 - check the existence of a polyline3d variable name
;
#X text 224 2869 - edit the stored polyline2d point;
#X text 224 2889 - edit the stored polyline3d point;
#X text 224 2909 - get a polyline2d point at the given index;
#X text 224 2929 - get a polyline3d point at the given index;
#X text 224 2949 - get all polyline2d points as a list;
#X text 224 2969 - get all polyline3d points as a list;
#X text 224 2989 - check if a 2d point is within a closed polyline2d
;
#X text 224 3009 - check if a 2d point is within a closed polyline3d
;
#X text 224 3029 - get a polyline2d command at the given index;
#X text 224 3049 - get a polyline3d command at the given index;
#X text 224 3069 - get all polyline2d commands as a list;
#X text 224 3089 - get all polyline3d commands as a list;
#X text 224 3109 - get the dimensions of the polyline2d bounding box
;
#X text 224 3129 - get the dimensions of the polyline3d bounding box
;
#X text 224 3149 - get the center position of the polyline2d area;
#X text 224 3169 - get the center position of the polyline3d area;
#X text 224 3189 - get the precise area of the polyline2d;
#X text 224 3209 - get the precise area of the polyline3d;
#X text 224 3229 - get the size of the perimeter of the polyline2d
;
#X text 224 3249 - get the size of the perimeter of the polyline3d
;
#X text 224 5189 - store a set of arrays for a 2d mesh;
#X text 224 5209 - store a set of arrays for a 3d mesh;
#X text 224 5229 - draw the stored mesh2d;
#X text 224 5249 - draw the stored mesh3d;
#X text 224 5269 - check the existence of a mesh2d variable name;
#X text 224 5289 - check the existence of a mesh3d variable name;
#X text 224 5309 - edit the stored mesh2d vertex;
#X text 224 5329 - edit the stored mesh3d vertex;
#X text 224 5349 - edit the stored mesh2d index;
#X text 224 5369 - edit the stored mesh3d index;
#X text 224 5389 - edit the stored mesh2d normal;
#X text 224 5409 - edit the stored mesh3d normal;
#X text 224 5429 - edit the stored mesh2d texture coordinate;
#X text 224 5449 - edit the stored mesh3d texture coordinate;
#X text 224 5469 - edit the stored mesh2d color;
#X text 224 5489 - edit the stored mesh3d color;
#X text 224 5509 - get the mesh2d vertex at the given index;
#X text 224 5529 - get the mesh3d vertex at the given index;
#X text 224 5549 - get the mesh2d index at the given index;
#X text 224 5569 - get the mesh3d index at the given index;
#X text 224 5589 - get the mesh2d normal at the given index;
#X text 224 5609 - get the mesh3d normal at the given index;
#X text 224 5629 - get the mesh2d texture coordinate at the given index
;
#X text 224 5649 - get the mesh3d texture coordinate at the given index
;
#X text 224 5669 - get the mesh2d color at the given index;
#X text 224 5689 - get the mesh3d color at the given index;
#X text 224 5709 - get all mesh2d vertices as a list;
#X text 224 5729 - get all mesh3d vertices as a list;
#X text 224 5749 - get all mesh2d indices as a list;
#X text 224 5769 - get all mesh3d indices as a list;
#X text 224 5789 - get all mesh2d normals as a list;
#X text 224 5809 - get all mesh3d normals as a list;
#X text 224 5829 - get all mesh2d texture coordinates as a list;
#X text 224 5849 - get all mesh3d texture coordinates as a list;
#X text 224 5869 - get all mesh2d colors as a list;
#X text 224 5889 - get all mesh3d colors as a list;
#X text 224 5909 - get all mesh2d commands as a list;
#X text 224 5929 - get all mesh3d commands as a list;
#X text 224 5949 - get the dimensions of the mesh2d bounding box;
#X text 224 5969 - get the dimensions of the mesh3d bounding box;
#X text 224 5989 - get the centroid of all the vetices in the mesh2d
;
#X text 224 6009 - get the centroid of all the vetices in the mesh3d
;
#X text 224 6029 - a simple camera for interacting with objects in
3d space;
#X text 224 6049 - a basic camera for interacting with objects in 3d
space;
#X text 224 6069 - a light that spreads outward evenly in all directions
;
#X text 224 6089 - a light that spreads outward in a cone;
#X text 224 6109 - a light that comes evenly from a given direction
;
#X text 224 6129 - set the material of the object;
#X text 224 1629 - setup the drawing viewport;
#X text 224 1209 - push the current matrix;
#X text 224 1229 - pop the current matrix;
#X text 224 1069 - move along the coordinate system;
#X text 224 1089 - rotate around the x-axis of the coordinate system
;
#X text 224 1109 - rotate around the y-axis of the coordinate system
;
#X text 224 1129 - rotate around the z-axis of the coordinate system
;
#X text 224 1189 - scale along the coordinate system;
#X text 224 1529 - push the current style;
#X text 224 1549 - pop the current style;
#X text 224 1309 - set the draw color;
#X text 224 1349 - set the align mode for drawing rectangular objects
;
#X text 224 1389 - set the fill mode for drawing shaped objects;
#X text 224 1409 - set the poly winding mode for drawing;
#X text 224 1429 - set the blend mode for drawing;
#X text 224 1449 - set the width of the lined objects;
#X text 224 1469 - enable/disable the smoothing for lines;
#X text 224 1489 - set the resolution for circular objects;
#X text 224 1509 - set the resolution for curved objects;
#X text 224 1589 - separate render chains in style;
#X text 224 1569 - separate render chains in matrix;
#X text 224 1609 - separate render chains in matrix and style;
#X text 224 1649 - enable/disable the depth test;
#X text 224 1669 - enable/disable the use of ARB textures;
#X text 224 1689 - enable/disable the anti-aliasing for lines;
#X text 224 1709 - enable/disable the auto background clearing function
;
#X text 224 1749 - clear the color bits of current renderer;
#X text 224 1769 - clear the depth bits of current renderer;
#X text 224 1789 - clear the alpha channel of current renderer;
#X text 224 6189 - store an array of floats;
#X text 224 6209 - edit the stored float;
#X text 224 6229 - check the existence of a float variable name;
#X text 224 6249 - get a float element at the given index;
#X text 224 6269 - get all float elements as a list;
#X text 224 6289 - get the average value of float elements;
#X text 224 7409 - store an array of symbols;
#X text 224 7429 - edit the stored symbol;
#X text 224 7449 - check the existence of a symbol variable name;
#X text 224 7469 - get a symbol element at the given index;
#X text 224 7489 - get all symbol elements as a list;
#X text 224 6309 - store an array of two dimensional vectors;
#X text 224 6329 - edit the stored vec2f;
#X text 224 6349 - check the existence of a vec2f variable name;
#X text 224 6369 - get a vec2f element at the given index;
#X text 224 6389 - get all vec2f elements as a list;
#X text 224 6409 - get the average value of vec2f elements;
#X text 224 6429 - get the angle in degrees between two vec2fs;
#X text 224 6449 - get the angle in radians between two vec2fs;
#X text 224 6469 - get the distance between two vec2fs;
#X text 224 6489 - get the squared distance between two vec2fs;
#X text 224 6509 - get the dot product of two vec2fs;
#X text 224 6529 - get the length of the vec2f element;
#X text 224 6549 - get the squared length of the vec2f element;
#X text 224 6569 - store an array of three dimensional vectors;
#X text 224 6589 - edit the stored vec3f;
#X text 224 6609 - check the existence of a vec3f variable name;
#X text 224 6629 - get a vec3f element at the given index;
#X text 224 6649 - get all vec3f elements as a list;
#X text 224 6669 - get the average value of vec3f elements;
#X text 224 6689 - get the angle in degrees between two vec3fs;
#X text 224 6709 - get the angle in radians between two vec3fs;
#X text 224 6729 - get the distance between two vec3fs;
#X text 224 6749 - get the squared distance between two vec3fs;
#X text 224 6769 - get the dot product of two vec3fs;
#X text 224 6789 - get the length of the vec3f element;
#X text 224 6809 - get the squared length of the vec3f element;
#X text 224 6829 - store an array of four dimensional vectors;
#X text 224 6849 - edit the stored vec4f;
#X text 224 6869 - check the existence of a vec4f variable name;
#X text 224 6889 - get a vec4f element at the given index;
#X text 224 6909 - get all vec4f elements as a list;
#X text 224 6929 - get the average value of vec4f elements;
#X text 224 6949 - get the distance between two vec4fs;
#X text 224 6969 - get the squared distance between two vec4fs;
#X text 224 6989 - get the dot product of two vec4fs;
#X text 224 7009 - get the length of the vec4f element;
#X text 224 7029 - get the squared length of the vec4f element;
#X text 224 7049 - store an array of colors;
#X text 224 7069 - edit the stored color;
#X text 224 7089 - check the existence of a color variable name;
#X text 224 7109 - get a color element at the given index;
#X text 224 7129 - get all color elements as a list;
#X text 224 7589 - convert degrees to radians;
#X text 224 7609 - convert radians to degrees;
#X text 224 7629 - calculate the 2d distance between two points;
#X text 224 7649 - calculate the 3d distance between two points;
#X text 224 7689 - calculate the squared 3d distance between two points
;
#X text 224 7709 - determine if a number is inside of a given range
;
#X text 224 7729 - clamp a value between min and max;
#X text 224 7749 - map the input value to be within 0 and 1;
#X text 224 7769 - linearly interpolate a value within a range;
#X text 224 7789 - linearly interpolate a value between two angles
in degrees;
#X text 224 7809 - linearly interpolate a value between two angles
in radians;
#X text 224 7829 - get a random number within a given range;
#X text 224 7849 - get a random floating point number between -1 and
1;
#X text 224 7869 - get a random floating point number between 0 and
1;
#X text 224 7889 - seed the random number generator with a unique value
;
#X text 224 7909 - wrap a value if it overflows a given range;
#X text 224 7929 - wrap a value within the angle in degrees;
#X text 224 7949 - wrap a value within the angle in radians;
#X text 224 7969 - map the value to a new value;
#X text 224 8009 - calculate a simplex noise value between 0 and 1
;
#X text 224 8029 - calculate a simplex noise value between -1 and 1
;
#X text 224 8049 - get the sign of a value;
#X text 224 8109 - append a symbol to an incoming message;
#X text 224 8129 - prepend a symbol to an incoming message;
#X text 224 8149 - combine several atoms into one message;
#X text 224 8169 - get indices of sublists found in a list;
#X text 224 8189 - get indices of sublists found in a list;
#X text 224 8209 - insert a list into a list;
#X text 224 8229 - insert a list into a list;
#X text 224 8249 - fill a list with element;
#X text 224 8269 - fill a list with element;
#X text 224 8289 - replace sublists in a list;
#X text 224 8309 - replace sublists in a list;
#X text 224 8329 - remove sublists in a list;
#X text 224 8349 - remove sublists in a list;
#X text 224 8369 - remove a range of elements from a list;
#X text 224 8389 - remove a range of elements from a list;
#X text 224 8409 - sort a list in ascending or descending order;
#X text 224 8429 - remove duplicates from a list;
#X text 224 8449 - reverse the order of a list;
#X text 224 8469 - randomly change the order of a list;
#X text 224 8489 - convert a list into a symbol;
#X text 224 8509 - convert a symbol into a list;
#X text 224 9249 - increase or decrease a value in steps;
#X text 224 9289 - pass messages from a specific inlet;
#X text 224 9309 - route a message to an outlet;
#X text 224 8649 - nonlocal shared value;
#X text 224 8669 - send messages without patch cords;
#X text 224 8689 - receive messages without patch cords;
#X text 224 9369 - get the OS platform being used;
#X text 224 9389 - get the day/month/year;
#X text 224 9409 - get the time in seconds/minutes/hours;
#X text 224 9009 - get the directory of the patch;
#X text 224 9029 - get the user home directory on desktop platforms
;
#X text 224 9049 - get the documents directory on ios devices;
#X text 224 9069 - get the library directory on ios devices;
#X text 224 9089 - get the temporary directory on ios devices;
#X text 224 9109 - check the existence of a directory;
#X text 224 8929 - check the existence of a file;
#X text 224 8949 - get the list of file names in a directory;
#X text 224 8969 - get the list of file paths in a directory;
#X text 224 8789 - get the unique name of the canvas;
#X text 224 8769 - get the \$0 value of the patch;
#X text 224 9329 - get the lowest possible float;
#X text 224 9349 - get the highest possible float;
#X text 224 8529 - convert hex color values to hsb color values;
#X text 224 8549 - convert hex color values to rgb color values;
#X text 224 8569 - convert hsb color values to hex color values;
#X text 224 8589 - convert hsb color values to rgb color values;
#X text 224 8609 - convert rgb color values to hex color values;
#X text 224 8629 - convert rgb color values to hsb color values;
#X text 224 8869 - print an error to the pd console;
#X text 224 8709 - expression evaluation object;
#X text 224 8729 - expression evaluation object;
#X text 224 9269 - smoothly change a value over time;
#X text 224 9149 - set input/output audio device \, sample rate and
block size;
#X text 224 9169 - get a list of all available input/output midi devices
;
#X text 224 9189 - set input/output midi device;
#X text 223 8889 - create/remove/rename/copy/move files;
#X text 223 8989 - create/remove/rename/copy/move directories;
#X text 223 8909 - save a file from a url;
#X text 223 8749 - open/close pd patches;
#X text 225 9469 - sine wave oscillator;
#X text 225 9489 - triangle wave oscillator;
#X text 225 9509 - sawtooth wave oscillator;
#X text 225 9529 - square wave oscillator;
#X text 225 9549 - pulse wave oscillator;
#X text 225 9569 - bandlimited triangle wave oscillator;
#X text 225 9589 - bandlimited sawtooth wave oscillator;
#X text 225 9609 - bandlimited square wave oscillator;
#X text 225 9629 - bandlimited pulse wave oscillator;
#X text 225 9649 - low-pass filter with resonance control;
#X text 225 9669 - high-pass filter with resonance control;
#X text 225 9689 - band-pass filter with Q control;
#X text 225 9709 - notch filter with bandwidth control;
#X text 225 9729 - peaking filter with Q and gain control;
#X text 225 9749 - low shelf filter with shelf slope and gain control
;
#X text 225 9769 - high shelf filter with shelf slope and gain control
;
#X text 225 9789 - all-pass filter with bandwidth control;
#X text 224 9129 - get a list of all available input/output audio devices
;
#X text 24 60 -------------------------- WINDOW --------------------------
;
#X text 24 1020 ------------------------- GRAPHICS -------------------------
;
#X text 24 6160 -------------------------- TYPES --------------------------
;
#X text 24 7520 --------------------------- MATH ---------------------------
;
#X text 24 8080 -------------------------- UTILS --------------------------
;
#X text 24 9440 -------------------------- AUDIO --------------------------
;
#X text 224 1329 - set the background color;
#X text 224 1729 - clear the color and depth bits of current renderer
;
#X text 224 1849 - draw multiple contours within one shape;
#X text 224 7669 - calculate the squared 2d distance between two points
;
#X text 224 7989 - calculate the next larger power of 2;
#X text 224 9209 - count over a range;
#X text 224 9229 - count over a range at once;
#X text 224 7549 - calculate the difference between two angles in degrees
;
#X text 224 7569 - calculate the difference between two angles in radians
;
#X text 224 1369 - set the align mode for drawing texts;
#X obj 26 1149 ofRotateXYZ;
#X obj 26 1169 ofRotate;
#X text 224 1149 - rotate around the xyz-axis of the coordinate system
;
#X text 224 1169 - produce a rotation of angle around the vector;
#X text 23 22 a list of built-in objects in ofelia.;
#X obj 512 20 declare -lib ofelia;
#X obj 26 89 ofelia;
#X text 224 89 - initialize the ofelia external library;
#X obj 26 3929 ofGetFboMaxSamples;
#X text 224 3929 - get the maximum number of MSAA samples;
#X obj 26 429 ofGetWindowPosX;
#X obj 26 449 ofGetWindowPosY;
#X obj 26 469 ofGetWindowPos;
#X obj 26 189 ofGetWindowScale;
#X obj 26 829 ofWindowScaleListener;
#X obj 26 909 ofWindowPosListener;
#X obj 26 1249 ofGetTranslate;
#X text 224 1249 - get the current translate information;
#X obj 26 1269 ofGetRotate;
#X obj 26 1289 ofGetScale;
#X text 224 1269 - get the current rotate information;
#X text 224 1289 - get the current scale information;
#X text 224 289 - get the elapsed time in milliseconds;
#X obj 26 289 ofGetElapsedTimeMillis;
#X text 224 269 - get the elapsed time in seconds;
#X obj 26 309 ofGetLastFrameTime;
#X obj 26 329 ofGetLastFrameTimeMillis;
#X text 224 309 - get the last frame time in seconds;
#X obj 26 4289 ofLoadShader;
#X obj 26 4309 ofApplyShader;
#X obj 26 4329 ofDoesShaderNameExist;
#X obj 26 4349 ofGetShaderPath;
#X obj 26 4369 ofIsShaderLoaded;
#X obj 26 4389 ofSetShaderUniform1i;
#X obj 26 4409 ofSetShaderUniform2i;
#X obj 26 4429 ofSetShaderUniform3i;
#X obj 26 4449 ofSetShaderUniform4i;
#X obj 26 4469 ofSetShaderUniform1f;
#X obj 26 4489 ofSetShaderUniform2f;
#X obj 26 4509 ofSetShaderUniform3f;
#X obj 26 4529 ofSetShaderUniform4f;
#X obj 26 4549 ofSetShaderUniform1iv;
#X obj 26 4569 ofSetShaderUniform2iv;
#X obj 26 4589 ofSetShaderUniform3iv;
#X obj 26 4609 ofSetShaderUniform4iv;
#X obj 26 4629 ofSetShaderUniform1fv;
#X obj 26 4649 ofSetShaderUniform2fv;
#X obj 26 4669 ofSetShaderUniform3fv;
#X obj 26 4689 ofSetShaderUniform4fv;
#X obj 26 4709 ofSetShaderUniformTex;
#X obj 26 4729 ofSetShaderAttribute1f;
#X obj 26 4749 ofSetShaderAttribute2f;
#X obj 26 4769 ofSetShaderAttribute3f;
#X obj 26 4789 ofSetShaderAttribute4f;
#X obj 26 4809 ofSetShaderAttribute1fv;
#X obj 26 4829 ofSetShaderAttribute2fv;
#X obj 26 4849 ofSetShaderAttribute3fv;
#X obj 26 4869 ofSetShaderAttribute4fv;
#X text 224 4289 - store an array of shaders;
#X text 224 4309 - apply the shader;
#X text 224 4329 - check the existence of a shader variable name;
#X text 224 4349 - get the absolute path of the shader;
#X text 224 4369 - check if the shader is loaded or not;
#X text 224 4389 - set a int uniform on the shader;
#X text 224 4409 - set a ivec2 uniform on the shader;
#X text 224 4429 - set a ivec3 uniform on the shader;
#X text 224 4449 - set a ivec4 uniform on the shader;
#X text 224 4469 - set a float uniform on the shader;
#X text 224 4489 - set a vec2 uniform on the shader;
#X text 224 4509 - set a vec3 uniform on the shader;
#X text 224 4529 - set a vec4 uniform on the shader;
#X text 224 4549 - set an array of int uniform on the shader;
#X text 224 4569 - set an array of ivec2 uniform on the shader;
#X text 224 4589 - set an array of ivec3 uniform on the shader;
#X text 224 4609 - set an array of ivec4 uniform on the shader;
#X text 224 4629 - set an array of float uniform on the shader;
#X text 224 4649 - set an array of vec2 uniform on the shader;
#X text 224 4669 - set an array of vec3 uniform on the shader;
#X text 224 4689 - set an array of vec4 uniform on the shader;
#X text 224 4709 - set a texture reference on the shader;
#X text 224 4729 - set 1 float attribute on the shader;
#X text 224 4749 - set 2 float attributes on the shader;
#X text 224 4769 - set 3 float attributes on the shader;
#X text 224 4789 - set 4 float attributes on the shader;
#X text 224 4809 - set an array of 1 float attribute on the shader
;
#X text 224 4829 - set an array of 2 float attributes on the shader
;
#X text 224 4849 - set an array of 3 float attributes on the shader
;
#X text 224 4869 - set an array of 4 float attributes on the shader
;
#X obj 26 8829 ofSetCanvasArgs;
#X obj 26 8849 ofRemoveCanvas;
#X text 224 8809 - get the arguments of the canvas;
#X text 224 8829 - set the arguments of the canvas;
#X text 224 8849 - remove the canvas;
#X obj 26 3949 ofGetFboTexID;
#X text 224 3949 - get the texture ID of the fbo;
#X obj 26 4269 ofGetImageTexID;
#X text 224 4269 - get the texture ID of the image;
#X obj 26 7149 ofLoadRect;
#X obj 26 7169 ofEditRect;
#X obj 26 7189 ofDoesRectNameExist;
#X obj 26 7209 ofGetRect;
#X obj 26 7229 ofGetRects;
#X text 224 7149 - store an array of rectangles;
#X text 224 7169 - edit the stored rectangle;
#X text 224 7189 - check the existence of a rectangle variable name
;
#X text 224 7209 - get a rectangle element at the given index;
#X text 224 7229 - get all rectangle elements as a list;
#X obj 26 7249 ofIsPointInsideRect;
#X text 224 7249 - check if a point is inside the rectangle;
#X obj 26 7269 ofIsLineInsideRect;
#X text 224 7269 - check if a line is inside the rectangle;
#X obj 26 7289 ofIsRectInsideRect;
#X text 224 7289 - check if a rectangle is inside the rectangle;
#X obj 26 7309 ofDoesLineIntersectRect;
#X text 224 7309 - check if a line intersects with the rectangle;
#X obj 26 7329 ofDoesRectIntersectRect;
#X text 224 7329 - check if a rectangle intersects with the rectangle
;
#X obj 26 7349 ofGetRectCenter;
#X text 224 7349 - get the center position of the rectangle;
#X obj 26 7369 ofGetRectArea;
#X text 224 7369 - get the area of the rectangle;
#X obj 26 7389 ofGetRectPerimeter;
#X text 224 7389 - get the perimeter of the rectangle;
#X obj 26 789 ofKeyCodeListener;
#X text 224 789 - listen to the key events independent of modifiers
;
