#N canvas 321 23 601 677 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofApplyShader 3 12 0 18 -204280
-1 0;
#X obj 0 461 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 540 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 469 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 548 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 624 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 576 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 599 1) symbol;
#X obj 23 439 ofWindow 320 240 LEFT TOP;
#X text 95 469 render bang;
#X text 95 548 render bang;
#X text 241 469 - the incoming render bang.;
#X text 241 548 - the outgoing render bang.;
#X text 95 509 name <s>;
#N canvas 322 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 185 109 the number of elements stored in the array.;
#X floatatom 146 109 5 0 0 0 - - -, f 5;
#X obj 23 129 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 42 129 outputs bang when loading is done.;
#X text 241 510 - sets the variable name followed by the index.;
#X text 241 599 - sets the variable name followed by the index.;
#X text 95 489 float;
#X text 241 489 - sets the index of the array element.;
#X obj 462 46 declare -lib ofelia;
#X obj 23 65 ofLoadShader \; @myShader \; examples/data/shader \;;
#X obj 493 5 ofApplyShader;
#X obj 56 164 loadbang;
#X obj 56 185 ofGetLastRenderOrder;
#X obj 23 206 ofHead;
#X obj 23 227 ofClear 63;
#X obj 23 248 t b b;
#X obj 23 370 ofSetShaderUniform2f windowDimen;
#X obj 23 401 ofRectangle;
#X obj 50 268 ofExpr \; _scaleFactor = ofGetRetina * ofGetWindowScale
\; $o1 = ofGetWidth * _scaleFactor \; $o2 = ofGetHeight * _scaleFactor
\; $o3 = ofGetWidth \; $o4 = ofGetHeight \;;
#X text 190 349 apply the shader.;
#X text 11 23 apply the shader;
#X obj 23 349 ofApplyShader @myShader[0];
#X connect 24 0 17 0;
#X connect 24 1 16 0;
#X connect 26 0 27 0;
#X connect 27 0 28 1;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 30 0 36 0;
#X connect 30 1 33 0;
#X connect 31 0 32 0;
#X connect 33 0 31 1;
#X connect 33 1 31 2;
#X connect 33 2 32 1;
#X connect 33 3 32 2;
#X connect 36 0 31 0;
