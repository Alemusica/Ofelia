#N canvas 321 23 601 560 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofIsRectInsideRect 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 420 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 428 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 505 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 456 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 479 1) symbol;
#N canvas 322 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 95 389 name <s>;
#X text 241 389 - sets the variable name followed by the index.;
#X text 241 479 - sets the variable name followed by the index.;
#X text 95 369 float;
#X text 241 369 - sets the index of the array element.;
#X obj 462 46 declare -lib ofelia;
#X obj 26 80 ofLoadRect @myRects 0 0 100 80 200 150 110 80;
#X floatatom 26 228 5 0 0 0 - - -, f 5;
#X text 67 228 0: not inside \, 1: inside.;
#X text 241 428 - 0: not inside \, 1: inside.;
#X text 95 428 float;
#X text 95 349 list <f \, f \, f \, f>;
#X text 11 23 check if a rectangle is inside the rectangle;
#X obj 463 5 ofIsRectInsideRect;
#X obj 26 202 ofIsRectInsideRect @myRects[1];
#X msg 26 176 210 210 10 10;
#X text 120 176 check if a rectangle is inside the rectangle.;
#X text 241 349 - checks if a rectangle is inside the rectangle.;
#X connect 23 0 16 0;
#X connect 24 0 23 0;
