#N canvas 321 23 601 823 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofEditVec4f 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 680 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 320 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 688 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 765 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 716 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 72 739 1) symbol;
#N canvas 322 115 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X floatatom 26 131 5 0 0 0 - - -, f 5;
#X text 65 131 the number of elements stored in the array.;
#X text 182 222 edit the specified array element.;
#X obj 26 247 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 44 247 outputs bang when editing is done.;
#X obj 26 297 print;
#X text 241 389 - assigns the value to the array element.;
#X text 241 489 - adds the value to the array element.;
#X text 241 509 - subtracts the value from the array element.;
#X text 241 529 - multiplies the array element by the value.;
#X text 241 549 - divides the array element by the value.;
#X text 241 569 - linearly interpolates the array element.;
#X text 95 688 bang;
#X text 241 688 - outputs bang when editing is done.;
#X text 241 369 - sets the variable name followed by the index.;
#X text 241 739 - sets the variable name followed by the index.;
#X text 241 609 - sets the array element to the midpoint.;
#X text 95 589 limit <f>;
#X text 95 629 normalize;
#X text 95 649 scale <f>;
#X text 241 589 - restricts the length of the array element.;
#X text 241 629 - normalizes the array element to a length of 1;
#X text 241 649 - scales the array element up or down to the length.
;
#X obj 505 5 ofEditVec4f;
#N canvas 322 115 599 442 ofEditVec4f_parameters 0;
#X msg 30 224 limit 3;
#X msg 30 294 normalize;
#X msg 30 324 scale 10;
#X text 99 294 normalize the array element to a length of 1;
#X text 87 224 restrict the length(magnitude) of the array element
to "3".;
#X msg 30 34 assign 3 4 5 6;
#X text 128 34 assign "3 4 5 6" to the array element.;
#X msg 30 64 add 2 3 4 5;
#X text 111 64 add "2 3 4 5" to the array element.;
#X msg 30 94 sub 1 2 3 4;
#X msg 30 124 mult 3 2 1 0;
#X text 111 94 subtract "1 2 3 4" from the array element.;
#X text 117 124 multiply the array element by "3 2 1 0".;
#X msg 30 154 div 4 5 6 7;
#X text 111 154 divide the array element by "4 5 6 7".;
#X msg 30 184 lerp 5 4 3 2 0.5;
#X text 143 185 linearly interpolate the array element towards "5 4
3 2" with the control amount of "0.5".;
#X msg 30 254 middle 8 6 4 2;
#X text 132 254 set the array element to the midpoint between itself
and "8 6 4 2".;
#X obj 30 391 outlet;
#X text 94 324 scale the array element up or down so that it has the
requested length "10".;
#X connect 0 0 19 0;
#X connect 1 0 19 0;
#X connect 2 0 19 0;
#X connect 5 0 19 0;
#X connect 7 0 19 0;
#X connect 9 0 19 0;
#X connect 10 0 19 0;
#X connect 13 0 19 0;
#X connect 15 0 19 0;
#X connect 17 0 19 0;
#X restore 26 198 pd ofEditVec4f_parameters;
#X text 11 23 edit the stored vec4f;
#X text 95 389 assign <f \, f \, f \, f>;
#X text 95 489 add <f \, f \, f \, f>;
#X text 95 509 sub <f \, f \, f \, f>;
#X text 95 529 mult <f \, f \, f \, f>;
#X text 95 550 div <f \, f \, f \, f>;
#X text 95 609 middle <f \, f \, f \, f>;
#X text 71 297 print all array elements as a list.;
#X text 95 409 assignX <f>;
#X text 241 409 - assigns the x value to the array element.;
#X text 95 429 assignY <f>;
#X text 95 449 assignZ <f>;
#X text 95 469 assignW <f>;
#X text 241 429 - assigns the y value to the array element.;
#X text 241 449 - assigns the z value to the array element.;
#X text 241 469 - assigns the w value to the array element.;
#X obj 26 222 ofEditVec4f @myVec4fs[1];
#X obj 26 270 ofGetVec4fs @myVec4fs;
#X text 95 349 float;
#X text 241 349 - sets the index of the array element.;
#X obj 26 70 ofLoadVec4f \; @myVec4fs \; 7 8 9 10 \; 11 12 13 14 \;
;
#X text 95 569 lerp <f \, f \, f \, f \, f>;
#X obj 462 46 declare -lib ofelia;
#X connect 13 0 52 0;
#X connect 34 0 51 0;
#X connect 51 0 13 0;
#X connect 52 0 15 0;
#X connect 55 0 10 0;
