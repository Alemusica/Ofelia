#N canvas 321 23 599 614 10;
#X obj 0 0 cnv 15 580 40 empty empty ofAnimate 3 12 0 18 -204280 -1
0;
#X obj 0 371 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 470 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 379 cnv 17 3 80 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 478 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 555 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 506 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X floatatom 73 317 5 0 0 0 - - -, f 5;
#N canvas 321 134 758 657 more_examples 0;
#X obj 71 75 loadbang;
#X floatatom 243 272 5 0 0 0 - - -, f 5;
#X obj 243 71 sel 0 1;
#X obj 243 39 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 314 600 visit http://easings.net/ if you want to learn more
about the easing functions.;
#X obj 243 107 30;
#X obj 71 107 ofGetLastRenderOrder;
#X obj 243 250 ofAnimate 30;
#X obj 38 138 ofHead;
#X obj 38 180 ofClear 63;
#X obj 38 324 ofTranslate 30 120;
#X obj 38 373 ofSetColor orange;
#X obj 38 418 ofCircle 5;
#X text 266 39 <- move the circle back and forth.;
#X obj 243 180 pack 0 1000 0;
#X obj 556 71 vradio 15 1 0 31 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X text 576 71 0: LINEAR;
#X text 576 86 1: SINE_IN;
#X text 576 101 2: SINE_OUT;
#X text 576 116 3: SINE_INOUT;
#X text 576 131 4: QUAD_IN;
#X text 576 146 5: QUAD_OUT;
#X text 576 161 6: QUAD_INOUT;
#X text 576 176 7: CUBIC_IN;
#X text 576 191 8: CUBIC_OUT;
#X text 576 206 9: CUBIC_INOUT;
#X text 576 221 10: QUART_IN;
#X text 576 236 11: QUART_OUT;
#X text 576 251 12: QUART_INOUT;
#X text 576 266 13: QUINT_IN;
#X text 576 281 14: QUINT_OUT;
#X text 576 296 15: QUINT_INOUT;
#X text 576 311 16: EXPO_IN;
#X text 576 326 17: EXPO_OUT;
#X text 576 341 18: EXPO_INOUT;
#X text 576 356 19: CIRC_IN;
#X text 576 371 20: CIRC_OUT;
#X text 576 386 21: CIRC_INOUT;
#X text 576 401 22: BACK_IN;
#X text 576 416 23: BACK_OUT;
#X text 576 431 24: BACK_INOUT;
#X text 576 446 25: ELASTIC_IN;
#X text 576 461 26: ELASTIC_OUT;
#X text 576 476 27: ELASTIC_INOUT;
#X text 576 491 28: BOUNCE_IN;
#X text 576 506 29: BOUNCE_OUT;
#X text 576 521 30: BOUNCE_INOUT;
#X floatatom 318 160 5 0 30 0 - - -, f 5;
#X text 552 39 change the easing type.;
#X floatatom 243 160 5 0 30 0 - - -, f 5;
#X obj 281 107 ofExpr ofGetWidth-30;
#X obj 318 138 ofRcv @easingType;
#X obj 556 546 ofSnd @easingType;
#X connect 0 0 6 0;
#X connect 1 0 10 1;
#X connect 2 0 5 0;
#X connect 2 1 50 0;
#X connect 3 0 2 0;
#X connect 5 0 49 0;
#X connect 6 0 8 1;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 14 0 7 0;
#X connect 15 0 52 0;
#X connect 47 0 14 2;
#X connect 49 0 14 0;
#X connect 50 0 49 0;
#X connect 51 0 47 0;
#X restore 480 46 pd more_examples;
#X text 95 478 float;
#X text 72 529 1) float;
#X msg 130 193 3;
#X text 164 193 jump value to 3;
#X text 11 23 smoothly change a value over time;
#X text 95 379 float;
#X msg 131 223 stop;
#X text 171 223 stop the animation.;
#X text 95 439 stop;
#X msg 131 250 value 10;
#X text 95 419 value <f>;
#X text 221 439 - stops the animation.;
#X text 221 478 - the animated value.;
#X obj 73 289 ofAnimate 3;
#X obj 517 5 ofAnimate;
#X obj 23 348 ofWindow 320 240 LEFT TOP;
#X text 221 529 - the current value. (default: 0);
#X text 21 43 [ofAnimate] is used to smoothly change a value over time.
It works in a similar way as [line] except that [ofAnimate] updates
value on a frame basis.;
#X text 95 399 list <f \, f \, f/s>;
#X text 221 379 - jumps to a target value.;
#X text 127 99 animate the value to 5 for 3000ms linearly.;
#X msg 73 99 5 3000;
#X text 127 119 note: if you don't specify the third argument which
sets the easing function \, it will be set to LINEAR.;
#X text 200 250 set the current value.;
#X text 221 419 - sets the current value.;
#X text 221 399 - animates to a target value. <target \, time \, easingType>
;
#X msg 99 156 1 2000 CUBIC_IN;
#X text 209 156 animate the value to 1 for 2000ms using the cubic easing
in function.;
#X text 215 326 [ofAnimate] object makes use of Robert Penner's easing
equations which is free open source software \, licensed under the
BSD License.;
#X connect 11 0 22 0;
#X connect 15 0 22 0;
#X connect 18 0 22 0;
#X connect 22 0 7 0;
#X connect 30 0 22 0;
#X connect 35 0 22 0;
