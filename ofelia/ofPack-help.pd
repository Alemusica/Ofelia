#N canvas 321 23 599 609 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofPack 3 12 0 18 -204280 -1 0
;
#X obj 183 278 print;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 443 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 95 451 anything;
#X obj 75 451 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 554 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 479 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 201 451 - the combined message.;
#X obj 183 134 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 203 168 5 0 0 0 - - -, f 5;
#X floatatom 301 168 5 0 0 0 - - -, f 5;
#X msg 232 192 symbol apples;
#X msg 245 219 symbol oranges;
#X msg 330 192 symbol dogs;
#X msg 343 219 symbol cats;
#X text 95 349 bang;
#X text 95 369 list;
#X text 201 369 - updates multiple atoms at once.;
#X text 201 349 - outputs the current message.;
#X text 201 389 - updates multiple atoms at once.;
#X text 95 389 anything;
#X obj 75 415 cnv 17 3 17 empty empty n 5 9 0 16 -228856 -162280 0
;
#X text 95 415 float/symbol;
#X text 72 502 n) float/symbol;
#X text 11 23 combine several atoms into one message;
#X text 204 133 output the current message.;
#X text 201 415 - an inlet is created for each argument given.;
#N canvas 322 159 704 491 more_examples 0;
#X floatatom 90 69 5 0 0 0 - - -, f 5;
#X floatatom 128 69 5 0 0 0 - - -, f 5;
#X floatatom 167 69 5 0 0 0 - - -, f 5;
#X obj 444 335 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 444 387 print;
#X msg 59 45 set 1 2 3;
#X floatatom 79 336 5 0 0 0 - - -, f 5;
#X obj 59 335 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 180 335 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 59 192 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 59 240 print;
#X msg 218 190 symbol path/image2.jpg;
#X floatatom 79 387 5 0 0 0 - - -, f 5;
#X text 57 302 it can also be used to generate a float \, symbol or
a list.;
#X text 233 216 or you can use it just like a message box and optionally
replace its atoms.;
#X msg 464 333 list list d e f;
#X text 168 104 it is convenient when creating a list that should update
whenever one of its elements changes.;
#X obj 59 103 ofPack set 0 0 0;
#X obj 59 215 ofPack load path/image1.jpg;
#X obj 79 361 ofPack 3.14;
#X symbolatom 199 387 10 0 0 0 - - -, f 10;
#X obj 444 361 ofPack list a b c 1 2 3;
#X floatatom 579 333 5 0 0 0 - - -, f 5;
#X obj 199 361 ofPack symbol foo;
#X msg 199 333 list symbol zoo;
#X msg 303 333 symbol bar;
#X msg 59 130;
#X connect 0 0 17 1;
#X connect 1 0 17 2;
#X connect 2 0 17 3;
#X connect 3 0 21 0;
#X connect 5 0 17 0;
#X connect 6 0 19 0;
#X connect 7 0 19 0;
#X connect 8 0 23 0;
#X connect 9 0 18 0;
#X connect 11 0 18 1;
#X connect 15 0 21 0;
#X connect 17 0 26 0;
#X connect 18 0 10 0;
#X connect 19 0 12 0;
#X connect 21 0 4 0;
#X connect 22 0 21 6;
#X connect 23 0 20 0;
#X connect 24 0 23 0;
#X connect 25 0 23 1;
#X restore 480 66 pd more_examples;
#X text 201 502 - the number of arguments(up to 64) determines the
number of inlets. you can use floats or symbols to specify the type
while also initializing that inlet's value.;
#X obj 183 250 ofPack 2 fruits 3 animals;
#X obj 535 5 ofPack;
#X text 21 43 [ofPack] is used to create a message by combining several
atoms that can be replaced through inlets. creation arguments specify
the number of inlets and their types. [ofPack] outputs the message
whenever it receives a message from one of its inlets.;
#X obj 462 46 declare -lib ofelia;
#X connect 10 0 31 0;
#X connect 11 0 31 0;
#X connect 12 0 31 2;
#X connect 13 0 31 1;
#X connect 14 0 31 1;
#X connect 15 0 31 3;
#X connect 16 0 31 3;
#X connect 31 0 1 0;
