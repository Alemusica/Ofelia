#N canvas 321 23 601 680 10;
#X obj 0 0 cnv 15 580 40 empty empty ofEditMesh3dIndex 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 540 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 548 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 625 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 576 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 95 409 add <f>;
#X text 72 599 1) symbol;
#N canvas 322 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X text 95 389 assign <f>;
#X text 241 389 - assigns the value to the array element.;
#X text 241 409 - adds the value to the array element.;
#X text 95 429 sub <f>;
#X text 241 429 - subtracts the value from the array element.;
#X text 95 449 mult <f>;
#X text 241 449 - multiplies the array element by the value.;
#X text 95 469 div <f>;
#X text 241 469 - divides the array element by the value.;
#X text 95 489 lerp <f \, f>;
#X text 95 509 middle <f>;
#X text 241 489 - linearly interpolates the array element.;
#X text 241 509 - sets the array element to the midpoint.;
#X text 95 548 bang;
#X text 241 548 - outputs bang when editing is done.;
#X text 241 369 - sets the variable name followed by the index.;
#X text 241 599 - sets the variable name followed by the index.;
#X text 95 349 float;
#X text 241 349 - sets the index of the array element.;
#X msg 23 65 print;
#X text 70 65 print the current settings and stored array elements.
;
#X text 212 182 edit the specified array element.;
#X obj 23 207 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 207 outputs bang when editing is done.;
#X obj 23 257 print;
#X text 68 257 print all array elements as a list.;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#N canvas 321 115 616 255 related_drawer_objects 0;
#X obj 63 34 loadbang;
#X obj 63 55 ofGetLastRenderOrder;
#X obj 30 76 ofHead;
#X obj 30 97 ofClear 63;
#X obj 30 163 ofSetFillMode FILLED;
#X obj 147 141 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 172 191 draw the stored mesh.;
#X text 172 140 note: the mesh will be drawn as a wireframe when it's
not filled.;
#X obj 30 119 ofTranslate 110 70;
#X obj 30 190 ofDrawMesh3d @myMesh3d;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 9 0;
#X connect 5 0 4 1;
#X connect 8 0 4 0;
#X restore 23 298 pd related_drawer_objects;
#X text 11 23 edit the stored mesh3d index;
#X obj 469 5 ofEditMesh3dIndex;
#X obj 23 89 ofLoadMesh3d \; @myMesh3d \; rectangle 100 100 \;;
#N canvas 321 115 601 344 ofEditMesh3dIndex_parameters 0;
#X msg 36 44 assign 3;
#X text 100 44 assign "3" to the array element.;
#X msg 36 74 add 2;
#X msg 36 134 mult 2;
#X text 87 134 multiply the array element by "2".;
#X text 80 74 add "2" to the array element.;
#X msg 36 164 div 2;
#X text 82 165 divide the array element by "2".;
#X msg 36 104 sub 2;
#X text 81 104 subtract "2" from the array element.;
#X msg 36 194 lerp 5 0.5;
#X msg 36 224 middle 8;
#X text 111 195 linearly interpolate the array element towards "5"
with the control amount of "0.5".;
#X text 100 224 set the array element to the midpoint between itself
and "8".;
#X obj 36 272 outlet;
#X connect 0 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 14 0;
#X connect 6 0 14 0;
#X connect 8 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X restore 23 158 pd ofEditMesh3dIndex_parameters;
#X obj 23 182 ofEditMesh3dIndex @myMesh3d[1];
#X obj 23 230 ofGetMesh3dIndices @myMesh3d;
#X connect 30 0 41 0;
#X connect 33 0 44 0;
#X connect 42 0 43 0;
#X connect 43 0 33 0;
#X connect 44 0 35 0;
