#N canvas 321 23 601 828 10;
#X obj 0 0 cnv 15 580 40 empty empty ofLoadFloat 3 12 0 18 -204280
-1 0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 670 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 678 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 775 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 706 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 678 float;
#X text 95 479 name <s>;
#X text 95 499 load <l>;
#X text 95 519 add <f>;
#X text 95 539 append <l>;
#X text 95 559 prepend <l>;
#X text 95 579 insert <f \, f \, f>;
#X text 95 599 fill <f \, f \, f>;
#X text 95 619 erase <f \, f>;
#X text 95 639 clear;
#X text 72 729 1) symbol;
#X text 72 749 2) list;
#N canvas 322 123 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X msg 26 93 print;
#X msg 26 123 load 3 4 5;
#X msg 26 153 add 6;
#X msg 26 183 append 7 8;
#X msg 26 213 prepend 0 1 2;
#X msg 26 273 fill 3.14 3 5;
#X msg 26 303 erase 3 7;
#X text 72 333 remove all elements from the array.;
#X msg 26 333 clear;
#X msg 26 243 insert 5.5 6 7;
#X floatatom 26 397 5 0 0 0 - - -, f 5;
#X text 241 678 - the number of elements stored in the array.;
#X text 64 397 the number of elements stored in the array.;
#X text 11 23 store an array of floats;
#X text 71 153 add an element "6" to the end of the array.;
#X text 102 183 append "7" \, "8" to the array.;
#X text 122 213 prepend "0" \, "1" \, "2" to the array.;
#X text 75 93 print the name and stored array elements.;
#X text 241 479 - sets the unique variable name for the array.;
#X text 241 499 - (re)initializes an array with one or more elements.
;
#X text 241 519 - adds a single element to the end of the array.;
#X text 241 539 - appends one or more elements to the array.;
#X text 241 559 - prepends one or more elements to the array.;
#X text 241 579 - inserts an element at the specified position.;
#X text 241 599 - assigns value to all the elements in the range.;
#X text 241 619 - removes a range of elements from the array.;
#X text 241 639 - removes all elements from the array.;
#X text 241 729 - sets the unique variable name for the array.;
#X text 241 749 - initializes an array with one or more elements.;
#X text 102 124 (re)initialize an array with "3" \, "4" \, "5".;
#X text 126 243 insert "5.5" to the index range "6~7".;
#X text 121 273 assign "3.14" to the index range "3~5".;
#X text 96 303 remove the index range "3~7".;
#X obj 505 5 ofLoadFloat;
#N canvas 322 122 604 422 related_getter_objects 0;
#X obj 30 122 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 173 5 0 0 0 - - -, f 5;
#X obj 30 212 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 263 print;
#X obj 30 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 83 5 0 0 0 - - -, f 5;
#X text 69 83 0: not exists \, 1: exists.;
#X obj 30 302 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 353 5 0 0 0 - - -, f 5;
#X text 53 121 get a float element at the index "1". (starting from
"0");
#X text 53 211 get all float elements as a list.;
#X text 53 301 get the average value of float elements.;
#X text 53 31 check if the float variable name exists or not.;
#X obj 30 56 ofDoesFloatNameExist @myFloats;
#X obj 30 146 ofGetFloat @myFloats[1];
#X obj 30 236 ofGetFloats @myFloats;
#X obj 30 326 ofGetFloatAverage @myFloats;
#X connect 0 0 14 0;
#X connect 2 0 15 0;
#X connect 4 0 13 0;
#X connect 7 0 16 0;
#X connect 13 0 5 0;
#X connect 14 0 1 0;
#X connect 15 0 3 0;
#X connect 16 0 8 0;
#X restore 26 448 pd related_getter_objects;
#N canvas 322 122 604 391 related_editor_objects 0;
#X msg 30 34 assign 3;
#X text 94 34 assign "3" to the array element.;
#X msg 30 64 add 2;
#X msg 30 124 mult 2;
#X text 83 124 multiply the array element by "2".;
#X text 77 64 add "2" to the array element.;
#X msg 30 154 div 2;
#X text 77 154 divide the array element by "2".;
#X msg 30 94 sub 2;
#X text 76 94 subtract "2" from the array element.;
#X msg 30 184 lerp 5 0.5;
#X msg 30 214 middle 8;
#X text 106 184 linearly interpolate the array element towards "5"
with the control amount of "0.5".;
#X text 95 214 set the array element to the midpoint between itself
and "8".;
#X text 186 262 edit the specified array element.;
#X obj 30 262 ofEditFloat @myFloats[1];
#X obj 30 326 print;
#X obj 30 284 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 51 284 outputs bang when editing is done.;
#X obj 30 304 ofGetFloat @myFloats[1];
#X connect 0 0 15 0;
#X connect 2 0 15 0;
#X connect 3 0 15 0;
#X connect 6 0 15 0;
#X connect 8 0 15 0;
#X connect 10 0 15 0;
#X connect 11 0 15 0;
#X connect 15 0 17 0;
#X connect 17 0 19 0;
#X connect 19 0 16 0;
#X restore 26 428 pd related_editor_objects;
#X text 21 43 [ofLoadFloat] stores an array of floats that can be edited
or used by its related "getter" objects.;
#X obj 26 370 ofLoadFloat @myFloats 7 8 9 10;
#X connect 20 0 57 0;
#X connect 21 0 57 0;
#X connect 22 0 57 0;
#X connect 23 0 57 0;
#X connect 24 0 57 0;
#X connect 25 0 57 0;
#X connect 26 0 57 0;
#X connect 28 0 57 0;
#X connect 29 0 57 0;
#X connect 57 0 30 0;
