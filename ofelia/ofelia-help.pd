#N canvas 66 53 636 596 10;
#N canvas 710 53 703 716 define 0;
#X msg 28 76 clear;
#X msg 49 326 click;
#X msg 97 326 close;
#X obj 28 389 ofelia define -k \$0-test;
#A set ofelia.myBoolean = true \; ofelia.myNumber = 42 \; ofelia.myString
= "Foo" \; ofelia.myTable = {1 \, 2 \, 3 \, 4} \; \; function ofelia.myFunction(f)
\; return f * 2 \; end;
#X msg 28 102 read -c ofelia-help.lua;
#X msg 28 128 write -c ofelia-help.lua;
#X msg 38 174 myBoolean \$1;
#X obj 38 154 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 48 220 myNumber \$1;
#X floatatom 48 200 5 0 0 0 - - -;
#X msg 68 272 myTable 5 6 7 8 nine;
#X obj 28 526 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 28 546 ofelia define \; function ofelia.bang() \; local a =
require("\$0-test") \; return a.myNumber \; end \;;
#X msg 78 298 myFunction 3;
#X msg 58 246 myString apple;
#X obj 28 410 print Result;
#X obj 28 611 print Result;
#X text 72 76 Clear.;
#X text 180 102 Read from a file.;
#X text 187 128 Write to a file.;
#X text 124 174 Set boolean variable with float. (0 or 1);
#X text 128 220 Set number variable with float.;
#X text 157 246 Set string variable with symbol.;
#X text 201 272 Set table variable with list.;
#X text 163 298 Call function with argument. (outputs the returned
value);
#X text 141 326 Open and close text window.;
#X text 187 390 Creation arguments:;
#X text 215 410 Optional -k flag to keep contents.;
#X text 215 430 Optional -c flag with 2 digits sets the number of control
inlets and outlets. (e.g. -c21: 2 inlets and 1 outlet);
#X text 215 460 Optional -s flag with 2 digits sets the number of signal
inlets and outlets. (e.g. -s21: 2 inlets and 1 outlet);
#X text 215 490 Optional name. (unnamed or duplicated named object
will automatically be given a unique name);
#X text 214 546 When you create the "ofelia define" object with a semi-colon
argument \, you can directly write lua script as arguments.;
#X text 214 576 Variables from other named objects can be accessed
using the "require" function.;
#X text 300 102 (By using -c flag \, you can optionally read or write
to/from a file interpreting carriage returns as separators);
#X text 214 606 Dollar symbols in a script will be replaced with the
actual value internally. (e.g. "\$0-test" -> "1004-test");
#X text 22 20 "ofelia define" allows you to run a lua script. You can
optionally name an object so other objects can access variables or
functions in the script.;
#X text 51 355 Click to open and edit script:;
#X text 51 370 Save the edited text to update the script.;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 15 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 9 0 8 0;
#X connect 10 0 3 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 13 0 3 0;
#X connect 14 0 3 0;
#X restore 462 277 pd define;
#N canvas 711 53 702 595 get 0;
#X obj 28 247 ofelia get \$0-test;
#X msg 28 86 myBoolean;
#X msg 68 190 myFunction 5;
#X msg 58 164 myTable;
#X msg 38 112 myNumber;
#X msg 48 138 myString;
#X obj 28 268 print Result;
#X msg 133 226 symbol foo;
#X text 22 20 Using "ofelia get" you can get the value of variables
or get the returned value from functions from a named define object.
;
#X text 155 190 Call function with argument. (outputs the returned
value);
#X text 208 226 Set other script.;
#X text 155 248 Optional -c flag with 2 digits sets the number of control
inlets and outlets. (e.g. -c21: 2 inlets and 1 outlet);
#X text 155 278 Optional -s flag with 2 digits sets the number of signal
inlets and outlets. (e.g. -s21: 2 inlets and 1 outlet);
#X text 155 308 Optional name.;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 0 1;
#X restore 462 303 pd get;
#X obj 18 16 ofelia;
#X obj 250 277 ofelia define;
#X obj 250 303 ofelia get;
#X obj 250 329 ofelia set;
#X obj 250 355 ofelia exists;
#X text 61 233 The ofelia object's first argument sets its function:
, f 30;
#X text 340 276 or;
#X obj 361 277 ofelia d;
#X text 339 354 or;
#X obj 360 355 ofelia e;
#N canvas 711 53 702 595 set 0;
#X msg 28 104 myBoolean \$1;
#X obj 28 84 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X msg 38 150 myNumber \$1;
#X floatatom 38 130 5 0 0 0 - - -;
#X obj 28 306 print Result;
#X obj 28 285 ofelia set \$0-test;
#X msg 133 264 symbol foo;
#X msg 48 176 myString banana;
#X msg 58 202 myTable a b c d e f;
#X msg 68 228 myFunction 8;
#X text 22 20 Using "ofelia set" you can set the value of variables
or get the returned value from functions from a named define object.
It behaves identical to "ofelia define" except that you cannot change
the script.;
#X text 114 104 Set boolean variable with float. (0 or 1);
#X text 118 150 Set number variable with float.;
#X text 149 176 Set string variable with symbol.;
#X text 186 202 Set table variable with list.;
#X text 154 228 Call function with argument. (outputs the returned
value);
#X text 208 264 Set other script.;
#X text 155 286 Optional -c flag with 2 digits sets the number of control
inlets and outlets. (e.g. -c21: 2 inlets and 1 outlet);
#X text 155 316 Optional -s flag with 2 digits sets the number of signal
inlets and outlets. (e.g. -s21: 2 inlets and 1 outlet);
#X text 155 346 Optional name.;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 5 1;
#X connect 7 0 5 0;
#X connect 8 0 5 0;
#X connect 9 0 5 0;
#X restore 462 329 pd set;
#N canvas 711 53 702 595 exists 0;
#X msg 151 226 symbol foo;
#X obj 28 247 ofelia exists \$0-test;
#X floatatom 28 268 5 0 0 0 - - -;
#X text 69 268 0: not exists \, 1: exists.;
#X obj 28 226 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 22 20 Using "ofelia exists" you can check the existence of
a named define object.;
#X text 226 226 Set other script.;
#X connect 0 0 1 1;
#X connect 1 0 2 0;
#X connect 4 0 1 0;
#X restore 462 355 pd exists;
#X text 37 276 Create \, store \, edit lua script.;
#X text 61 302 Get the value of variables.;
#X text 61 328 Set the value of variables.;
#X text 7 355 Check the existence of named object.;
#X text 461 236 (Click for details), f 11;
#N canvas 710 53 730 789 example 0;
#X floatatom 24 383 5 0 0 0 - - -;
#X msg 24 81 add 2 3;
#X msg 44 133 mult 3 4;
#X msg 54 159 div 8 2;
#X obj 24 197 ofelia d \; function ofelia.add(fv) \; return fv[1] +
fv[2] \; end \; \; function ofelia.sub(fv) \; return fv[1] - fv[2]
\; end \; \; function ofelia.mult(fv) \; return fv[1] * fv[2] \; end
\; \; function ofelia.div(fv) \; return fv[1] / fv[2] \; end \;;
#X msg 34 107 sub 5 2;
#X msg 198 81 bang;
#X msg 208 107 123;
#X msg 218 133 symbol foo;
#X msg 228 159 1 2 3;
#X msg 276 159 list a b c d e;
#X obj 396 264 ofelia d \$0-abc \; a = ofelia \; a.x = 100 \; a.y =
200 \; a.w = 80 \; a.h = 50 \;;
#X obj 396 449 ofelia get \$0-abc;
#X msg 396 345 x;
#X floatatom 396 470 5 0 0 0 - - -;
#X msg 406 371 y;
#X msg 416 397 w;
#X msg 426 423 h;
#X obj 522 405 ofelia d \; function ofelia.bang() \; local a = require("\$0-abc")
\; return a.w * a.h \; end \;;
#X obj 522 385 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 522 470 5 0 0 0 - - -;
#X obj 522 319 ofelia set \$0-abc;
#X msg 522 284 x \$1;
#X floatatom 522 264 5 0 0 0 - - -;
#X floatatom 560 264 5 0 0 0 - - -;
#X msg 560 284 y \$1;
#X obj 198 196 ofelia d \; function ofelia.new() \; end \; \; function
ofelia.free() \; end \; \; function ofelia.bang() \; print("got bang")
\; end \; \; function ofelia.float(f) \; print("got float : " .. f)
\; end \; \; function ofelia.symbol(s) \; print("got symbol : " ..
s) \; end \; \; function ofelia.list(v) \; for i=1 \, #v do \; print("got
list : " .. v[i]) \; end \; end \;;
#X text 381 206 ofelia.new() function is called on object creation
and ofelia.free() function is called on object destruction.;
#X obj 24 521 ofelia d -c21 \; function ofelia.list(fv) \; return fv[1]
+ fv[2] \; end \;;
#X floatatom 171 501 5 0 0 0 - - -;
#X floatatom 24 501 5 0 0 0 - - -;
#X floatatom 24 575 5 0 0 0 - - -;
#X text 187 521 Optional -c flag with 2 digits sets the number of control
inlets and outlets. (e.g. -c21: 2 inlets and 1 outlet);
#X obj 26 614 osc~ 440;
#X obj 26 727 dac~;
#X obj 26 635 ofelia d -s11 \; function ofelia.perform(v) \; for i=1
\, #v do \; v[i] = v[i] * 0.1 \; end \; return v \; end \;;
#X text 200 633 Optional -s flag with 2 digits sets the number of signal
inlets and outlets. (e.g. -s21: 2 inlets and 1 outlet);
#X text 200 663 ofelia.perform() function is called at each DSP-cycle.
;
#X obj 564 554 ofelia d -k -c13;
#A set function ofelia.bang() \; return {1 \, 2 \, 3} \; end \; \;
function ofelia.list(fv) \; return fv \; end \;;
#X obj 564 501 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 564 575 5 0 0 0 - - -;
#X floatatom 610 575 5 0 0 0 - - -;
#X floatatom 657 575 5 0 0 0 - - -;
#X msg 574 526 4 5 6;
#X floatatom 602 264 5 0 0 0 - - -;
#X floatatom 640 264 5 0 0 0 - - -;
#X msg 602 284 w \$1;
#X msg 640 284 h \$1;
#X text 22 20 Here are some examples that show how "ofelia define"
object can be used.;
#X text 239 80 Check the pd console.;
#X text 187 551 Multiple control inlets are packed to a list when a
messaage is sent to the first inlet.;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 4 0;
#X connect 6 0 26 0;
#X connect 7 0 26 0;
#X connect 8 0 26 0;
#X connect 9 0 26 0;
#X connect 10 0 26 0;
#X connect 12 0 14 0;
#X connect 13 0 12 0;
#X connect 15 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 12 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 22 0 21 0;
#X connect 23 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 21 0;
#X connect 28 0 31 0;
#X connect 29 0 28 1;
#X connect 30 0 28 0;
#X connect 33 0 35 0;
#X connect 35 0 34 0;
#X connect 35 0 34 1;
#X connect 38 0 40 0;
#X connect 38 1 41 0;
#X connect 38 2 42 0;
#X connect 39 0 38 0;
#X connect 43 0 38 0;
#X connect 44 0 46 0;
#X connect 45 0 47 0;
#X connect 46 0 21 0;
#X connect 47 0 21 0;
#X restore 532 277 pd example;
#X text 62 50 "ofelia" object can be used to execute a lua script which
consists of variables and functions that can be updated or called by
sending messages to the object.;
#X text 63 16 - run a lua script.;
#X text 62 100 Besides the lua language \, ofelia provides "of" module
which is the bindings for the openFrameworks API. And "pd" module which
has some useful pd related classes.;
#X text 62 150 For now \, please visit "https://github.com/danomatika/ofxLua"
to learn about "of" module. And check "src/ofeliaBindings.h" to see
classes and functions used in "pd" module.;
