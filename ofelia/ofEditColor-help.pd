#N canvas 321 23 601 851 10;
#X obj 0 0 cnv 15 580 40 empty empty ofEditColor 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 720 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 360 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 728 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 805 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 756 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 72 779 1) symbol;
#N canvas 322 115 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X floatatom 26 131 5 0 0 0 - - -, f 5;
#X text 66 131 the number of elements stored in the array.;
#X text 181 222 edit the specified array element.;
#X obj 26 247 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 44 247 outputs bang when editing is done.;
#X obj 26 297 print;
#X text 241 489 - adds the value to the array element.;
#X text 241 509 - subtracts the value from the array element.;
#X text 241 529 - multiplies the array element by the value.;
#X text 241 549 - divides the array element by the value.;
#X text 241 589 - linearly interpolates the array element.;
#X text 95 728 bang;
#X text 241 728 - outputs bang when editing is done.;
#X text 241 369 - sets the variable name followed by the index.;
#X text 241 779 - sets the variable name followed by the index.;
#X text 71 297 print all array elements as a list.;
#X text 95 349 float;
#X text 241 349 - sets the index of the array element.;
#X text 11 23 edit the stored color;
#X obj 505 5 ofEditColor;
#X obj 26 70 ofLoadColor \; @myColors \; 255 165 0 255 \; 63 223 207
255 \;;
#X obj 26 222 ofEditColor @myColors[1];
#X obj 26 270 ofGetColors @myColors;
#N canvas 322 115 661 544 ofEditColor_parameters 0;
#X msg 30 314 normalize;
#X msg 30 64 assign turquoise;
#X msg 30 34 assign 0 153 37 255;
#X text 159 34 assign "0 153 37 255" to the array element.;
#X text 142 64 you can assign using the color name.;
#X msg 30 94 assign 0x3293ef;
#X text 136 94 you can also use hex color code.;
#X msg 30 274 lerp 255 255 255 255 0.5;
#X text 190 275 linearly interpolate the array element towards "255
255 255 255" with the control amount of "0.5".;
#X text 98 314 normalize the array element to a length of 255;
#X msg 30 244 invert;
#X text 81 244 invert the array element. (subtract from 255);
#X text 86 344 set the current hue.;
#X text 112 374 set the hue angle between 0 and 360;
#X msg 30 374 hueAngle 90;
#X msg 30 404 brightness 128;
#X text 129 404 set the current brightness.;
#X msg 30 434 saturation 128;
#X text 129 434 set the current saturation.;
#X msg 30 344 hue 128;
#X msg 30 124 add 10;
#X msg 30 154 sub 10;
#X msg 30 214 div 2;
#X text 80 124 add "10" to the array element.;
#X text 80 154 subtract "10" from the array element.;
#X text 80 185 multiply the array element by "2".;
#X text 75 214 divide the array element by "2".;
#X msg 30 184 mult 2;
#X obj 30 491 outlet;
#X connect 0 0 28 0;
#X connect 1 0 28 0;
#X connect 2 0 28 0;
#X connect 5 0 28 0;
#X connect 7 0 28 0;
#X connect 10 0 28 0;
#X connect 14 0 28 0;
#X connect 15 0 28 0;
#X connect 17 0 28 0;
#X connect 19 0 28 0;
#X connect 20 0 28 0;
#X connect 21 0 28 0;
#X connect 22 0 28 0;
#X connect 27 0 28 0;
#X restore 26 198 pd ofEditColor_parameters;
#X text 95 389 assign <s/l>;
#X text 241 389 - assigns the color value to the array element.;
#X text 95 409 assignR <f>;
#X text 95 429 assignG <f>;
#X text 95 449 assignB <f>;
#X text 95 469 assignA <f>;
#X text 241 409 - assigns the r value to the array element.;
#X text 241 429 - assigns the g value to the array element.;
#X text 241 449 - assigns the b value to the array element.;
#X text 241 469 - assigns the a value to the array element.;
#X text 95 489 add <f \, f \, f>;
#X text 95 509 sub <f \, f \, f>;
#X text 95 529 mult <f>;
#X text 95 550 div <f>;
#X text 95 589 lerp <f \, f \, f \, f \, f>;
#X text 95 609 normalize;
#X text 241 609 - normalizes the array element to a length of 255;
#X text 241 629 - sets the current hue.;
#X text 95 629 hue <f>;
#X text 95 649 hueAngle <f>;
#X text 95 669 brightness <f>;
#X text 241 669 - sets the current brightness.;
#X text 95 689 saturation <f>;
#X text 241 689 - sets the current saturation.;
#X text 95 570 invert;
#X text 241 649 - sets the hue angle between 0 and 360;
#X text 241 569 - inverts the array element.;
#X connect 13 0 32 0;
#X connect 30 0 10 0;
#X connect 31 0 13 0;
#X connect 32 0 15 0;
#X connect 33 0 31 0;
