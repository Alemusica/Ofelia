#N canvas 720 100 665 767 10;
#X declare -lib ofelia;
#X obj 28 92 loadbang;
#X obj 28 134 ofWindow;
#X obj 28 170 ofSetup;
#X obj 28 191 ofBackground 102;
#X obj 28 212 ofFill;
#X obj 28 423 ofDraw;
#X text 335 245 The star() function.;
#X text 25 23 The star() function created for this example is capable
of drawing a wide range of different forms. Try placing different numbers
into the star() function calls within draw() to explore.;
#X text 318 686 This example was originally written in Processing.
https://processing.org/examples/star.html;
#X obj 28 465 ofelia f \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.2
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*0.5) \; a.star(0
\, 0 \, 5 \, 70 \, 3) \; ofPopMatrix() \; \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.5
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*1) \; a.star(0
\, 0 \, 80 \, 100 \, 40) \; ofPopMatrix() \; \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.8
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*-1) \; a.star(0
\, 0 \, 30 \, 70 \, 5) \; ofPopMatrix() \;;
#X msg 28 113 setPosition 30 100 \, setSize 640 360 \, create;
#X obj 512 29 declare -lib ofelia;
#X obj 28 233 ofelia f \$0-vars \; function M.star(x \, y \, radius1
\, radius2 \, npoints) \; local angle = OF_TWO_PI / npoints \; local
halfAngle = angle / 2 \; ofBeginShape() \; for a = 0 \, OF_TWO_PI \,
angle do \; local sx = x + math.cos(a) * radius2 \; local sy = y +
math.sin(a) * radius2 \; ofVertex(sx \, sy) \; sx = x + math.cos(a+halfAngle)
* radius1 \; sy = y + math.sin(a+halfAngle) * radius1 \; ofVertex(sx
\, sy) \; end \; ofEndShape(true) \; end \;;
#X obj 28 444 ofRequire \$0-vars;
#X text 142 444 Require the module that has the star() function.;
#X connect 0 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 12 0;
#X connect 5 0 13 0;
#X connect 10 0 1 0;
#X connect 13 0 9 0;
