#N canvas 720 100 665 737 10;
#X declare -path ofelia/libs/of;
#X obj 28 102 loadbang;
#X text 318 652 This example was originally written in Processing.
https://processing.org/examples/regularpolygon.html;
#X obj 462 29 declare -path ofelia/libs/of;
#X obj 28 144 ofWindow;
#X obj 28 180 ofSetup;
#X obj 28 201 ofBackground 102;
#X obj 28 222 ofFill;
#X obj 28 389 ofDraw;
#X obj 28 410 ofGetPtr \$0-vars;
#X obj 28 431 ofelia f \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.2
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*0.5) \; a.polygon(0
\, 0 \, 82 \, 3) \; ofPopMatrix() \; \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.5
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*1) \; a.polygon(0
\, 0 \, 80 \, 20) \; ofPopMatrix() \; \; ofPushMatrix() \; ofTranslate(ofGetWidth()*0.8
\, ofGetHeight()*0.5) \; ofRotateZDeg(ofGetFrameNum()*-1) \; a.polygon(0
\, 0 \, 70 \, 7) \; ofPopMatrix() \;;
#X text 25 23 What is your favorite? Pentagon? Hexagon? Heptagon? No?
What about the icosagon? The polygon() function created for this example
is capable of drawing any regular polygon. Try placing different numbers
into the polygon() function calls within draw() to explore.;
#X text 293 255 The polygon() function.;
#X text 136 410 Get a pointer to the module that has the polygon()
function.;
#X msg 28 123 setPosition 30 100 \, setSize 640 360 \, create;
#X obj 28 243 ofelia f \$0-vars \; function M.polygon(x \, y \, radius
\, npoints) \; local angle = TWO_PI / npoints \; ofBeginShape() \;
for a = 0 \, TWO_PI \, angle do \; local sx = x + math.cos(a) * radius
\; local sy = y + math.sin(a) * radius \; ofVertex(sx \, sy) \; end
\; ofEndShape(true) \; end \;;
#X connect 0 0 13 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 13 0 3 0;
