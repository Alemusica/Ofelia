#N canvas 720 100 665 501 10;
#X declare -lib ofelia;
#X obj 28 82 loadbang;
#X obj 28 124 ofWindow;
#X obj 28 160 ofSetup;
#X msg 28 103 setPosition 30 100 \, setSize 640 360 \, create;
#X obj 511 28 declare -lib ofelia;
#X text 25 23 Move the mouse across the image to obscure and reveal
the matrix. Measures the distance from the mouse to each square and
sets the size proportionally.;
#X obj 28 239 ofDraw;
#X obj 28 181 ofelia f \$0-vars \; M.maxDist = ofDist(0 \, 0 \, ofGetWidth()
\, ofGetHeight()) \; ofBackground(0) \;;
#X obj 28 260 ofRequire \$0-vars;
#X obj 28 281 ofelia f \; for i=0 \, ofGetWidth() \, 20 do \; for j=0
\, ofGetHeight() \, 20 do \; local size = ofDist(ofGetMouseX() \, ofGetMouseY()
\, i \, j) \; size = size / a.maxDist * 33 \; ofDrawCircle(i \, j \,
size) \; end \; end \;;
#X text 325 404 This example was originally written in Processing.
https://processing.org/examples/distance2d.html;
#X connect 0 0 3 0;
#X connect 2 0 7 0;
#X connect 3 0 1 0;
#X connect 6 0 8 0;
#X connect 8 0 9 0;
