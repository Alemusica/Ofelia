#N canvas 720 100 665 634 10;
#X declare -path ofelia/libs/of;
#X obj 28 104 of.Window;
#X obj 28 62 loadbang;
#X obj 28 140 of.setup;
#X obj 28 218 of.draw;
#X obj 462 29 declare -path ofelia/libs/of;
#X msg 28 83 setPosition 30 100 \, setSize 640 400 \, create;
#X obj 28 161 of.background 51;
#X obj 28 182 of.setRectMode 1;
#X text 315 548 This example was originally written in Processing.
https://processing.org/examples/mouse2d.html;
#X obj 28 239 of.setColor 255 204;
#X obj 56 265 of.mouseMoved;
#X text 30 488 "require" function allows you to access variables and
functions from other named "ofelia define" object.;
#X text 25 23 Moving the mouse changes the position and size of each
box.;
#X text 496 319 first rectangle.;
#X text 496 405 second rectangle.;
#X text 151 265 Listen to the movement of mouse cursor. Open the abstraction's
script to see the types of values it outputs.;
#X msg 56 286 x \$2 \, y \$3;
#X obj 28 312 ofelia d \$0-rect1 \; local a = ofelia \; a.x \, a.y
= 0 \, 0 \; function a.bang() \; of.drawRectangle(a.x \, of.getHeight()/2
\, a.y/2+10 \, a.y/2+10) \; return nil \; end \;;
#X f 76;
#X obj 28 399 ofelia d \$0-rect2 \; function ofelia.bang() \; local
a = require("\$0-rect1") \; local inverseX = of.getWidth() - a.x \;
local inverseY = of.getHeight() - a.y \; of.drawRectangle(inverseX
\, of.getHeight()/2 \, inverseY/2+10 \, inverseY/2+10) \; end \;;
#X f 76;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 9 0 17 0;
#X connect 10 0 16 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
