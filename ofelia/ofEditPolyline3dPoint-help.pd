#N canvas 321 23 601 851 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofEditPolyline3dPoint 3 12 0 18
-204280 -1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 760 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 400 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 768 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 845 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 796 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 369 name <s>;
#X text 72 819 1) symbol;
#N canvas 321 115 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 271 389 - assigns the value to the array element.;
#X text 271 469 - adds the value to the array element.;
#X text 271 489 - subtracts the value from the array element.;
#X text 271 509 - multiplies the array element by the value.;
#X text 271 529 - divides the array element by the value.;
#X text 271 569 - linearly interpolates the array element.;
#X text 95 768 bang;
#X text 271 768 - outputs bang when editing is done.;
#X text 271 369 - sets the variable name followed by the index.;
#X text 271 819 - sets the variable name followed by the index.;
#X text 271 629 - sets the array element to the midpoint.;
#X text 95 589 limit <f>;
#X text 95 649 normalize;
#X text 95 729 scale <f>;
#X text 271 589 - restricts the length of the array element.;
#X text 271 609 - maps the array element to a new coordinate system.
;
#X text 271 649 - normalizes the array element to a length of 1;
#X text 271 669 - sets the array element to its own perpendicular.
;
#X text 271 729 - scales the array element up or down to the length.
;
#X text 95 389 assign <f \, f \, f>;
#X text 95 469 add <f \, f \, f>;
#X text 95 489 sub <f \, f \, f>;
#X text 95 509 mult <f \, f \, f>;
#X text 95 529 div <f \, f \, f>;
#X text 95 569 lerp <f \, f \, f \, f>;
#X text 95 669 perpendicular <f \, f \, f>;
#X text 95 549 cross <f \, f \, f>;
#X text 271 549 - sets the array element to the cross product.;
#X text 95 609 map <12f>;
#X text 95 689 rotate <7f>;
#X text 95 709 rotateRad <7f>;
#X text 271 689 - rotates the array element by degrees around the axis.
;
#X text 95 629 middle <f \, f \, f>;
#X text 271 709 - rotates the array element by radians around the axis.
;
#X text 95 409 assignX <f>;
#X text 95 429 assignY <f>;
#X text 95 449 assignZ <f>;
#X text 271 409 - assigns the x value to the array element.;
#X text 271 429 - assigns the y value to the array element.;
#X text 271 449 - assigns the z value to the array element.;
#X text 95 349 float;
#X text 271 349 - sets the index of the array element.;
#X obj 445 5 ofEditPolyline3dPoint;
#X obj 23 258 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 258 outputs bang when editing is done.;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#X text 11 23 edit the stored polyline3d point;
#N canvas 322 114 488 205 related_drawer_objects 0;
#X obj 30 118 ofTranslate 160 120;
#X obj 63 34 loadbang;
#X obj 63 55 ofGetLastRenderOrder;
#X obj 30 76 ofHead;
#X obj 30 97 ofClear 63;
#X obj 30 139 ofDrawPolyline3d @myPolyline3d;
#X text 222 139 draw the stored polyline3d.;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X restore 23 298 pd related_drawer_objects;
#X floatatom 23 173 5 0 0 0 - - -, f 5;
#X text 61 173 the number of elements stored in the array.;
#X obj 23 65 ofLoadPolyline3d \; @myPolyline3d \; circle 50 \; moveTo
25 0 0 \; lineTo -13 22 0 \; lineTo -13 -22 0 \; close \;;
#X floatatom 122 152 5 0 0 0 - - -, f 5;
#X text 161 152 the number of 2d points.;
#X obj 23 233 ofEditPolyline3dPoint @myPolyline3d[1];
#X text 262 233 edit the point at the index "1".;
#N canvas 321 114 693 719 ofEditPolyline3dPoint_parameters 0;
#X msg 30 264 limit 3;
#X msg 30 404 normalize;
#X msg 30 594 scale 10;
#X text 100 404 normalize the array element to a length of 1;
#X msg 30 34 assign 3 4 5;
#X text 118 34 assign "3 4 5" to the array element.;
#X msg 30 64 add 2 3 4;
#X text 99 64 add "2 3 4" to the array element.;
#X msg 30 94 sub 1 2 3;
#X text 99 94 subtract "1 2 3" from the array element.;
#X msg 30 124 mult 3 2 1;
#X text 105 124 multiply the array element by "3 2 1".;
#X msg 30 154 div 4 5 6;
#X text 101 154 divide the array element by "4 5 6".;
#X msg 30 184 cross 3 2 1;
#X msg 30 224 lerp 8 6 4 0.5;
#X text 131 225 linearly interpolate the array element towards "8 6
4" with the control amount of "0.5".;
#X text 111 185 set the array element to the cross product of itself
and "3 2 1".;
#X text 211 295 map the array element from its default coordinate system
origin (0 \, 0 \, 0) \, X direction (1 \, 0 \, 0) \, Y direction (0
\, 1 \, 0) \, Z direction (0 \, 0 \, 1) to a new coordinate system
defined with origin at "0 0 0" \, X direction "2 0 0" \, and Y direction
"0 2 0" \, and Z direction "0 0 2".;
#X msg 30 294 map 0 0 0 2 0 0 0 2 0 0 0 2;
#X msg 30 364 middle 8 6 4;
#X text 119 364 set the array element to the midpoint between itself
and "8 6 4".;
#X msg 30 434 perpendicular 0 1 0;
#X text 162 434 construct a plane using the array element and "0 1
0" (by finding the plane that both lie on) \, and set our 'x' \, 'y'
and 'z' to be the vector that is perpendicular to the constructed plane
(the normal to the plane).;
#X msg 30 494 rotate 90 5 4 0 10 8 0;
#X msg 30 544 rotateRad 1.5 5 4 0 10 8 0;
#X obj 30 661 outlet;
#X text 89 264 restrict the length(magnitude) of the array element
to "3".;
#X text 181 494 rotate the array element by "90" angle degrees around
the axis specified by "10 8 0" \, using "5 4 0" as the origin of rotation.
;
#X text 202 544 rotate the array element by "1.5" angle radians around
the axis specified by "10 8 0" \, using "5 4 0" as the origin of rotation.
;
#X text 95 594 scale the array element up or down so that it has the
requested length "10".;
#X connect 0 0 26 0;
#X connect 1 0 26 0;
#X connect 2 0 26 0;
#X connect 4 0 26 0;
#X connect 6 0 26 0;
#X connect 8 0 26 0;
#X connect 10 0 26 0;
#X connect 12 0 26 0;
#X connect 14 0 26 0;
#X connect 15 0 26 0;
#X connect 19 0 26 0;
#X connect 20 0 26 0;
#X connect 22 0 26 0;
#X connect 24 0 26 0;
#X connect 25 0 26 0;
#X restore 23 209 pd ofEditPolyline3dPoint_parameters;
#X obj 462 46 declare -lib ofelia;
#X connect 60 0 58 0;
#X connect 60 1 61 0;
#X connect 63 0 53 0;
#X connect 65 0 63 0;
