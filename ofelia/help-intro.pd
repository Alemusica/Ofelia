#N canvas 518 23 665 799 10;
#X declare -lib ofelia;
#X text 24 520 -------------------------- TYPES --------------------------
;
#X text 24 680 --------------------------- MATH ---------------------------
;
#X text 24 960 -------------------------- AUDIO --------------------------
;
#N canvas 519 75 650 643 getters 0;
#X obj 26 99 ofGetDimen;
#X obj 26 159 ofGetFrameRate;
#X obj 26 179 ofGetTargetFrameRate;
#X obj 26 199 ofGetElapsedTime;
#X obj 26 219 ofGetLastFrameTime;
#X obj 26 239 ofGetOrienLock;
#X obj 26 259 ofGetOrien;
#X obj 26 279 ofGetFullscreen;
#X obj 26 299 ofGetFocus;
#X obj 26 419 ofGetScreenDimen;
#X obj 26 439 ofGetRetina;
#X obj 26 519 ofGetBgColor;
#X obj 26 539 ofGetWindow;
#X obj 26 559 ofGetFirstRenderOrder;
#X obj 26 579 ofGetLastRenderOrder;
#X obj 26 59 ofGetWidth;
#X obj 26 79 ofGetHeight;
#X obj 26 379 ofGetScreenWidth;
#X obj 26 399 ofGetScreenHeight;
#X obj 26 459 ofGetBgColorR;
#X obj 26 479 ofGetBgColorG;
#X obj 26 499 ofGetBgColorB;
#X obj 26 139 ofGetFrameNum;
#X text 224 59 - get the width of the current window;
#X text 224 79 - get the height of the current window;
#X text 224 99 - get the dimensions of the current window;
#X text 224 119 - get the scale of the current window;
#X text 224 139 - get the number of frames rendered;
#X text 224 159 - get the actual frame rate of the current window;
#X text 224 179 - get the target frame rate of the current window;
#X text 224 199 - get the elapsed time in milliseconds;
#X text 224 219 - get the last frame time in milliseconds;
#X text 224 239 - get the orientation lock state of the current window
;
#X text 224 259 - get the orientation of the current window;
#X text 224 279 - get the fullscreen state of the current window;
#X text 224 299 - get the focus state of the current window;
#X text 224 319 - get the x position of the current window;
#X text 224 339 - get the y position of the current window;
#X text 224 359 - get the position of the current window;
#X text 224 379 - get the width of the current device's screen;
#X text 224 399 - get the height of the current device's screen;
#X text 224 419 - get the dimensions of the current device's screen
;
#X text 224 439 - get the retina scale of the current device's screen
;
#X text 224 459 - get the r value of the background color;
#X text 224 479 - get the g value of the background color;
#X text 224 499 - get the b value of the background color;
#X text 224 519 - get the background color of the current window;
#X text 224 539 - check if a window exists;
#X text 224 559 - get the first rendering order;
#X text 224 579 - get the last rendering order;
#X text 24 30 ------------------------- GETTERS -------------------------
;
#X obj 26 319 ofGetWindowPosX;
#X obj 26 339 ofGetWindowPosY;
#X obj 26 359 ofGetWindowPos;
#X obj 26 119 ofGetWindowScale;
#X restore 26 109 pd getters;
#N canvas 519 75 650 397 listeners 0;
#X obj 26 59 ofTouchListener;
#X obj 26 79 ofMouseListener;
#X obj 26 99 ofScrollListener;
#X obj 26 119 ofKeyListener;
#X obj 26 139 ofAccelListener;
#X obj 26 179 ofOrienListener;
#X obj 26 199 ofFullscreenListener;
#X obj 26 219 ofFocusListener;
#X obj 26 259 ofWindowListener;
#X obj 26 319 ofBackListener;
#X obj 26 279 ofWindowLoadBang;
#X obj 26 299 ofWindowCloseBang;
#X text 224 59 - listen to the touch events;
#X text 224 79 - listen to the mouse events;
#X text 224 99 - listen to the mouse scroll events;
#X text 224 119 - listen to the key events;
#X text 224 139 - listen to the accelerometer events;
#X text 224 159 - listen to the updated scale of the current window
;
#X text 224 179 - listen to the updated orientation of the current
window;
#X text 224 199 - listen to the fullscreen mode of the current window
;
#X text 224 219 - listen to the focus state of the current window;
#X text 224 239 - listen to the updated position of the current window
;
#X text 224 259 - listen to the creation/destruction of the current
window;
#X text 224 279 - listen to the creation of the current window;
#X text 224 299 - listen to the destruction of the current window;
#X text 224 319 - listen to the back button press on android devices
;
#X text 24 30 ------------------------ LISTENERS ------------------------
;
#X obj 26 159 ofWindowScaleListener;
#X obj 26 239 ofWindowPosListener;
#X restore 26 129 pd listeners;
#X text 24 160 ------------------------- GRAPHICS -------------------------
;
#N canvas 519 75 650 358 matrix 0;
#X obj 26 199 ofPushMatrix;
#X obj 26 219 ofPopMatrix;
#X obj 26 59 ofTranslate;
#X obj 26 79 ofRotateX;
#X obj 26 99 ofRotateY;
#X obj 26 119 ofRotateZ;
#X obj 26 179 ofScale;
#X text 224 199 - push the current matrix;
#X text 224 219 - pop the current matrix;
#X text 224 59 - move along the coordinate system;
#X text 224 79 - rotate around the x-axis of the coordinate system
;
#X text 224 99 - rotate around the y-axis of the coordinate system
;
#X text 224 119 - rotate around the z-axis of the coordinate system
;
#X text 224 179 - scale along the coordinate system;
#X obj 26 139 ofRotateXYZ;
#X obj 26 159 ofRotate;
#X text 224 139 - rotate around the xyz-axis of the coordinate system
;
#X text 224 159 - produce a rotation of angle around the vector;
#X text 24 30 -------------------------- MATRIX --------------------------
;
#X obj 26 239 ofGetTranslate;
#X text 224 239 - get the current translate information;
#X obj 26 259 ofGetRotate;
#X obj 26 279 ofGetScale;
#X text 224 259 - get the current rotate information;
#X text 224 279 - get the current scale information;
#X restore 26 209 pd matrix;
#N canvas 519 75 650 368 style 0;
#X obj 26 279 ofPushStyle;
#X obj 26 299 ofPopStyle;
#X obj 26 59 ofSetColor;
#X obj 26 79 ofSetBgColor;
#X obj 26 99 ofSetRectMode;
#X obj 26 119 ofSetTextMode;
#X obj 26 139 ofSetFillMode;
#X obj 26 179 ofSetBlendMode;
#X obj 26 199 ofSetLineWidth;
#X obj 26 239 ofSetCircleRes;
#X obj 26 259 ofSetCurveRes;
#X obj 26 159 ofSetPolyMode;
#X obj 26 219 ofSetLineSmoothing;
#X text 224 279 - push the current style;
#X text 224 299 - pop the current style;
#X text 224 59 - set the draw color;
#X text 224 99 - set the align mode for drawing rectangular objects
;
#X text 224 139 - set the fill mode for drawing shaped objects;
#X text 224 159 - set the poly winding mode for drawing;
#X text 224 179 - set the blend mode for drawing;
#X text 224 199 - set the width of the lined objects;
#X text 224 219 - enable/disable the smoothing for lines;
#X text 224 239 - set the resolution for circular objects;
#X text 224 259 - set the resolution for curved objects;
#X text 224 79 - set the background color;
#X text 224 119 - set the align mode for drawing texts;
#X text 24 30 -------------------------- STYLE --------------------------
;
#X restore 26 229 pd style;
#N canvas 519 75 650 275 setters 0;
#X text 24 30 ------------------------- SETTERS -------------------------
;
#X obj 26 59 ofSetDepthTest;
#X obj 26 79 ofSetArbTex;
#X obj 26 139 ofClear;
#X obj 26 159 ofClearColor;
#X obj 26 179 ofClearDepth;
#X obj 26 199 ofClearAlpha;
#X obj 26 99 ofSetAntiAliasing;
#X obj 26 119 ofSetBgAuto;
#X text 224 59 - enable/disable the depth test;
#X text 224 79 - enable/disable the use of ARB textures;
#X text 224 99 - enable/disable the anti-aliasing for lines;
#X text 224 119 - enable/disable the auto background clearing function
;
#X text 224 159 - clear the color bits of current renderer;
#X text 224 179 - clear the depth bits of current renderer;
#X text 224 199 - clear the alpha channel of current renderer;
#X text 224 139 - clear the color and depth bits of current renderer
;
#X restore 26 289 pd setters;
#N canvas 519 75 650 779 shapes 0;
#X text 24 30 -------------------------- SHAPES --------------------------
;
#X obj 26 239 ofCircle;
#X obj 26 259 ofEllipse;
#X obj 26 279 ofArc;
#X obj 26 299 ofSector;
#X obj 26 319 ofLine2d;
#X obj 26 339 ofLine3d;
#X obj 26 359 ofCurve2d;
#X obj 26 379 ofCurve3d;
#X obj 26 399 ofBezier2d;
#X obj 26 419 ofBezier3d;
#X obj 26 439 ofQuadBezier2d;
#X obj 26 459 ofQuadBezier3d;
#X obj 26 479 ofTriangle2d;
#X obj 26 499 ofTriangle3d;
#X obj 26 519 ofEqTriangle;
#X obj 26 539 ofIsoTriangle;
#X obj 26 559 ofQuad2d;
#X obj 26 579 ofQuad3d;
#X obj 26 599 ofSquare;
#X obj 26 619 ofRectangle;
#X obj 26 639 ofRectRounded;
#X obj 26 659 ofRectRounded4;
#X obj 26 679 ofCross;
#X obj 26 699 ofHeart;
#X obj 26 719 ofMoon;
#X obj 26 739 ofRegPolygon;
#X obj 26 759 ofStar;
#X obj 26 779 ofAxis;
#X obj 26 799 ofBox;
#X obj 26 819 ofCone;
#X obj 26 839 ofCylinder;
#X obj 26 859 ofIcosphere;
#X obj 26 879 ofPlane;
#X obj 26 899 ofSphere;
#X obj 26 919 ofArrow;
#X obj 26 939 ofGrid;
#X obj 26 959 ofGridPlane;
#X obj 26 979 ofRotationAxes;
#X obj 26 59 ofBeginShape;
#X obj 26 79 ofEndShape;
#X obj 26 119 ofVertex2d;
#X obj 26 139 ofVertex3d;
#X obj 26 159 ofCurveVertex2d;
#X obj 26 179 ofCurveVertex3d;
#X obj 26 199 ofBezierVertex2d;
#X obj 26 219 ofBezierVertex3d;
#X obj 26 99 ofNextContour;
#X text 224 59 - start drawing a new shape;
#X text 224 79 - finish drawing the shape and draw it to the screen
;
#X text 224 119 - specify a single 2d point of a shape;
#X text 224 139 - specify a single 3d point of a shape;
#X text 224 159 - specify a single 2d point of a shape;
#X text 224 179 - specify a single 3d point of a shape;
#X text 224 199 - describe a bezier curve through three points of a
shape;
#X text 224 219 - describe a bezier curve through three points of a
shape;
#X text 224 239 - draw a circle;
#X text 224 259 - draw an ellipse;
#X text 224 279 - draw an arc;
#X text 224 299 - draw a sector;
#X text 224 319 - draw a 2d line;
#X text 224 339 - draw a 3d line;
#X text 224 359 - draw a 2d curve;
#X text 224 379 - draw a 3d curve;
#X text 224 399 - draw a 2d bezier curve;
#X text 224 419 - draw a 3d bezier curve;
#X text 224 439 - draw a 2d quadratic bezier curve;
#X text 224 459 - draw a 3d quadratic bezier curve;
#X text 224 479 - draw a 2d triangle;
#X text 224 499 - draw a 3d triangle;
#X text 224 519 - draw an equilateral triangle;
#X text 224 539 - draw an isosceles triangle;
#X text 224 559 - draw a 2d quadrilateral;
#X text 224 579 - draw a 3d quadrilateral;
#X text 224 599 - draw a square;
#X text 224 619 - draw a rectangle;
#X text 224 639 - draw a rounded rectangle with a given corner radius
;
#X text 224 659 - draw a rounded rectangle with a given 4 corner radiuses
;
#X text 224 679 - draw a cross;
#X text 224 699 - draw a heart;
#X text 224 719 - draw a moon;
#X text 224 739 - draw a regular polygon;
#X text 224 759 - draw a star;
#X text 224 779 - draw axes;
#X text 224 799 - draw a box;
#X text 224 819 - draw a cone;
#X text 224 839 - draw a cylinder;
#X text 224 859 - draw an icosphere;
#X text 224 879 - draw a plane;
#X text 224 899 - draw a sphere;
#X text 224 919 - draw an arrow;
#X text 224 939 - draw grid planes;
#X text 224 959 - draw a yz grid plane;
#X text 224 979 - draw a set of 3-axis aligned circular bands;
#X text 224 99 - draw multiple contours within one shape;
#X restore 26 309 pd shapes;
#N canvas 519 75 650 635 polyline 0;
#X text 24 30 ------------------------- POLYLINE -------------------------
;
#X obj 26 59 ofLoadPolyline2d;
#X obj 26 99 ofDrawPolyline2d;
#X obj 26 379 ofGetPolyline2dCommands;
#X obj 26 419 ofGetPolyline2dBoundingBox;
#X obj 26 79 ofLoadPolyline3d;
#X obj 26 119 ofDrawPolyline3d;
#X obj 26 399 ofGetPolyline3dCommands;
#X obj 26 439 ofGetPolyline3dBoundingBox;
#X obj 26 139 ofDoesPolyline2dNameExist;
#X obj 26 159 ofDoesPolyline3dNameExist;
#X obj 26 299 ofIsPointInsidePolyline2d;
#X obj 26 319 ofIsPointInsidePolyline3d;
#X obj 26 219 ofGetPolyline2dPoint;
#X obj 26 239 ofGetPolyline3dPoint;
#X obj 26 259 ofGetPolyline2dPoints;
#X obj 26 279 ofGetPolyline3dPoints;
#X obj 26 339 ofGetPolyline2dCommand;
#X obj 26 359 ofGetPolyline3dCommand;
#X obj 26 459 ofGetPolyline2dCentroid;
#X obj 26 479 ofGetPolyline3dCentroid;
#X obj 26 499 ofGetPolyline2dArea;
#X obj 26 519 ofGetPolyline3dArea;
#X obj 26 179 ofEditPolyline2dPoint;
#X obj 26 199 ofEditPolyline3dPoint;
#X obj 26 539 ofGetPolyline2dPerimeter;
#X obj 26 559 ofGetPolyline3dPerimeter;
#X text 224 59 - store an array of polyline2d commands;
#X text 224 79 - store an array of polyline3d commands;
#X text 224 99 - draw the stored polyline2d;
#X text 224 119 - draw the stored polyline3d;
#X text 224 139 - check the existence of a polyline2d variable name
;
#X text 224 159 - check the existence of a polyline3d variable name
;
#X text 224 179 - edit the stored polyline2d point;
#X text 224 199 - edit the stored polyline3d point;
#X text 224 219 - get a polyline2d point at the given index;
#X text 224 239 - get a polyline3d point at the given index;
#X text 224 259 - get all polyline2d points as a list;
#X text 224 279 - get all polyline3d points as a list;
#X text 224 299 - check if a 2d point is within a closed polyline2d
;
#X text 224 319 - check if a 2d point is within a closed polyline3d
;
#X text 224 339 - get a polyline2d command at the given index;
#X text 224 359 - get a polyline3d command at the given index;
#X text 224 379 - get all polyline2d commands as a list;
#X text 224 399 - get all polyline3d commands as a list;
#X text 224 419 - get the dimensions of the polyline2d bounding box
;
#X text 224 439 - get the dimensions of the polyline3d bounding box
;
#X text 224 459 - get the center position of the polyline2d area;
#X text 224 479 - get the center position of the polyline3d area;
#X text 224 499 - get the precise area of the polyline2d;
#X text 224 519 - get the precise area of the polyline3d;
#X text 224 539 - get the size of the perimeter of the polyline2d;
#X text 224 559 - get the size of the perimeter of the polyline3d;
#X restore 26 329 pd polyline;
#N canvas 519 75 650 635 path 0;
#X text 24 30 --------------------------- PATH ---------------------------
;
#X obj 26 59 ofLoadPath2d;
#X obj 26 99 ofDrawPath2d;
#X obj 26 339 ofGetPath2dCommands;
#X obj 26 379 ofGetPath2dTessellation;
#X obj 26 419 ofGetPath2dBoundingBox;
#X obj 26 79 ofLoadPath3d;
#X obj 26 119 ofDrawPath3d;
#X obj 26 359 ofGetPath3dCommands;
#X obj 26 399 ofGetPath3dTessellation;
#X obj 26 439 ofGetPath3dBoundingBox;
#X obj 26 139 ofDoesPath2dNameExist;
#X obj 26 159 ofDoesPath3dNameExist;
#X obj 26 259 ofIsPointInsidePath2d;
#X obj 26 279 ofIsPointInsidePath3d;
#X obj 26 179 ofGetPath2dPoint;
#X obj 26 199 ofGetPath3dPoint;
#X obj 26 219 ofGetPath2dPoints;
#X obj 26 239 ofGetPath3dPoints;
#X obj 26 299 ofGetPath2dCommand;
#X obj 26 319 ofGetPath3dCommand;
#X obj 26 459 ofGetPath2dCentroid;
#X obj 26 479 ofGetPath3dCentroid;
#X obj 26 499 ofGetPath2dArea;
#X obj 26 519 ofGetPath3dArea;
#X obj 26 539 ofGetPath2dPerimeter;
#X obj 26 559 ofGetPath3dPerimeter;
#X text 224 59 - store an array of path2d commands;
#X text 224 79 - store an array of path3d commands;
#X text 224 99 - draw the stored path2d;
#X text 224 119 - draw the stored path3d;
#X text 224 139 - check the existence of a path2d variable name;
#X text 224 159 - check the existence of a path3d variable name;
#X text 224 179 - get a path2d point at the given index;
#X text 224 199 - get a path3d point at the given index;
#X text 224 219 - get all path2d points as a list;
#X text 224 239 - get all path3d points as a list;
#X text 224 259 - check if a 2d point is within a closed path2d;
#X text 224 279 - check if a 2d point is within a closed path3d;
#X text 224 299 - get a path2d command at the given index;
#X text 224 319 - get a path3d command at the given index;
#X text 224 339 - get all path2d commands as a list;
#X text 224 359 - get all path3d commands as a list;
#X text 224 379 - get the tessellation data to convert path2d to mesh2d
;
#X text 224 399 - get the tessellation data to convert path3d to mesh3d
;
#X text 224 419 - get the dimensions of the path2d bounding box;
#X text 224 439 - get the dimensions of the path3d bounding box;
#X text 224 459 - get the center position of the path2d area;
#X text 224 479 - get the center position of the path3d area;
#X text 224 499 - get the precise area of the path2d;
#X text 224 519 - get the precise area of the path3d;
#X text 224 539 - get the size of the perimeter of the path2d;
#X text 224 559 - get the size of the perimeter of the path3d;
#X restore 26 349 pd path;
#N canvas 519 75 650 273 fbo 0;
#X text 24 30 --------------------------- FBO ---------------------------
;
#X obj 26 79 ofBindFboTex;
#X obj 26 99 ofDrawFbo;
#X obj 26 159 ofGetFboDimen;
#X obj 26 179 ofGetFboType;
#X obj 26 119 ofDoesFboNameExist;
#X obj 26 59 ofCreateFbo;
#X obj 26 139 ofIsFboAllocated;
#X text 224 59 - create framebuffer object;
#X text 224 79 - bind the stored fbo's texture;
#X text 224 99 - draw the stored fbo;
#X text 224 119 - check the existence of a fbo variable name;
#X text 224 139 - check if the fbo is allocated or not;
#X text 224 159 - get the dimensions of the fbo;
#X text 224 179 - get the type of the fbo;
#X obj 26 199 ofGetFboMaxSamples;
#X text 224 199 - get the maximum number of MSAA samples;
#X restore 26 369 pd fbo;
#N canvas 519 75 650 412 image 0;
#X text 24 30 -------------------------- IMAGE --------------------------
;
#X obj 26 99 ofEditImage;
#X obj 26 139 ofBindImageTex;
#X obj 26 159 ofDrawImage;
#X obj 26 179 ofDrawSubImage;
#X obj 26 219 ofGetImagePath;
#X obj 26 259 ofGetImageDimen;
#X obj 26 279 ofGetImageType;
#X obj 26 299 ofGetImageColorAt;
#X obj 26 319 ofGetImageTexCoord;
#X obj 26 339 ofGetImageTexCoords;
#X obj 26 199 ofDoesImageNameExist;
#X obj 26 119 ofSaveImage;
#X obj 26 79 ofLoadImage;
#X obj 26 59 ofCreateImage;
#X obj 26 239 ofIsImageAllocated;
#X text 224 59 - create an image;
#X text 224 79 - store an array of images;
#X text 224 99 - edit the stored image;
#X text 224 119 - save image to disk;
#X text 224 139 - bind the stored image's texture;
#X text 224 159 - draw the stored image;
#X text 224 179 - draw a subsection of the image;
#X text 224 199 - check the existence of an image variable name;
#X text 224 219 - get the absolute path of the image;
#X text 224 239 - check if the image is allocated or not;
#X text 224 259 - get the dimensions of the image;
#X text 224 279 - get the type of the image;
#X text 224 299 - get the color of a pixel at the specified x \, y
index;
#X text 224 319 - get the texture coordinate of the image from 2d vertex
;
#X text 224 339 - get the texture coordinates of the image from 2d
vertices;
#X restore 26 389 pd image;
#N canvas 519 75 650 412 font 0;
#X text 24 30 --------------------------- FONT ---------------------------
;
#X obj 26 59 ofLoadFont;
#X obj 26 79 ofEditFont;
#X obj 26 119 ofDrawText;
#X obj 26 139 ofDrawTextAsShapes;
#X obj 26 99 ofBindFontTex;
#X obj 26 179 ofGetFontPath;
#X obj 26 199 ofGetFontSize;
#X obj 26 239 ofGetTextBoundingBox;
#X obj 26 259 ofGetFontLetterSpacing;
#X obj 26 279 ofGetFontLineHeight;
#X obj 26 299 ofGetFontSpaceSize;
#X obj 26 319 ofGetTextMesh2dCommands;
#X obj 26 339 ofGetTextMesh3dCommands;
#X obj 26 159 ofDoesFontNameExist;
#X obj 26 219 ofIsFontLoaded;
#X text 224 59 - store an array of fonts;
#X text 224 79 - edit the stored font;
#X text 224 99 - bind the stored font's texture;
#X text 224 119 - draw a text using the stored font;
#X text 224 139 - draw a text as shapes using the stored font;
#X text 224 159 - check the existence of a font variable name;
#X text 224 179 - get the absolute path of the font;
#X text 224 199 - get the size of the font;
#X text 224 219 - check if the font is loaded or not;
#X text 224 239 - get the dimensions of the text bounding box;
#X text 224 259 - get the letter spacing of the font;
#X text 224 279 - get the line height of the font;
#X text 224 299 - get the space size of the font;
#X text 224 319 - get the mesh2d data based on the font and text;
#X text 224 339 - get the mesh3d data based on the font and text;
#X restore 26 409 pd font;
#N canvas 519 75 650 778 mesh 0;
#X text 24 30 --------------------------- MESH ---------------------------
;
#X obj 26 59 ofLoadMesh2d;
#X obj 26 79 ofLoadMesh3d;
#X obj 26 99 ofDrawMesh2d;
#X obj 26 119 ofDrawMesh3d;
#X obj 26 779 ofGetMesh2dCommands;
#X obj 26 799 ofGetMesh3dCommands;
#X obj 26 819 ofGetMesh2dBoundingBox;
#X obj 26 839 ofGetMesh3dBoundingBox;
#X obj 26 379 ofGetMesh2dVertex;
#X obj 26 579 ofGetMesh2dVertices;
#X obj 26 419 ofGetMesh2dIndex;
#X obj 26 459 ofGetMesh2dNormal;
#X obj 26 499 ofGetMesh2dTexCoord;
#X obj 26 539 ofGetMesh2dColor;
#X obj 26 619 ofGetMesh2dIndices;
#X obj 26 659 ofGetMesh2dNormals;
#X obj 26 699 ofGetMesh2dTexCoords;
#X obj 26 739 ofGetMesh2dColors;
#X obj 26 399 ofGetMesh3dVertex;
#X obj 26 439 ofGetMesh3dIndex;
#X obj 26 479 ofGetMesh3dNormal;
#X obj 26 519 ofGetMesh3dTexCoord;
#X obj 26 559 ofGetMesh3dColor;
#X obj 26 599 ofGetMesh3dVertices;
#X obj 26 639 ofGetMesh3dIndices;
#X obj 26 679 ofGetMesh3dNormals;
#X obj 26 719 ofGetMesh3dTexCoords;
#X obj 26 759 ofGetMesh3dColors;
#X obj 26 139 ofDoesMesh2dNameExist;
#X obj 26 159 ofDoesMesh3dNameExist;
#X obj 26 859 ofGetMesh2dCentroid;
#X obj 26 879 ofGetMesh3dCentroid;
#X obj 26 179 ofEditMesh2dVertex;
#X obj 26 199 ofEditMesh3dVertex;
#X obj 26 219 ofEditMesh2dIndex;
#X obj 26 239 ofEditMesh3dIndex;
#X obj 26 259 ofEditMesh2dNormal;
#X obj 26 279 ofEditMesh3dNormal;
#X obj 26 299 ofEditMesh2dTexCoord;
#X obj 26 319 ofEditMesh3dTexCoord;
#X obj 26 339 ofEditMesh2dColor;
#X obj 26 359 ofEditMesh3dColor;
#X text 224 59 - store a set of arrays for a 2d mesh;
#X text 224 79 - store a set of arrays for a 3d mesh;
#X text 224 99 - draw the stored mesh2d;
#X text 224 119 - draw the stored mesh3d;
#X text 224 139 - check the existence of a mesh2d variable name;
#X text 224 159 - check the existence of a mesh3d variable name;
#X text 224 179 - edit the stored mesh2d vertex;
#X text 224 199 - edit the stored mesh3d vertex;
#X text 224 219 - edit the stored mesh2d index;
#X text 224 239 - edit the stored mesh3d index;
#X text 224 259 - edit the stored mesh2d normal;
#X text 224 279 - edit the stored mesh3d normal;
#X text 224 299 - edit the stored mesh2d texture coordinate;
#X text 224 319 - edit the stored mesh3d texture coordinate;
#X text 224 339 - edit the stored mesh2d color;
#X text 224 359 - edit the stored mesh3d color;
#X text 224 379 - get the mesh2d vertex at the given index;
#X text 224 399 - get the mesh3d vertex at the given index;
#X text 224 419 - get the mesh2d index at the given index;
#X text 224 439 - get the mesh3d index at the given index;
#X text 224 459 - get the mesh2d normal at the given index;
#X text 224 479 - get the mesh3d normal at the given index;
#X text 224 499 - get the mesh2d texture coordinate at the given index
;
#X text 224 519 - get the mesh3d texture coordinate at the given index
;
#X text 224 539 - get the mesh2d color at the given index;
#X text 224 559 - get the mesh3d color at the given index;
#X text 224 579 - get all mesh2d vertices as a list;
#X text 224 599 - get all mesh3d vertices as a list;
#X text 224 619 - get all mesh2d indices as a list;
#X text 224 639 - get all mesh3d indices as a list;
#X text 224 659 - get all mesh2d normals as a list;
#X text 224 679 - get all mesh3d normals as a list;
#X text 224 699 - get all mesh2d texture coordinates as a list;
#X text 224 719 - get all mesh3d texture coordinates as a list;
#X text 224 739 - get all mesh2d colors as a list;
#X text 224 759 - get all mesh3d colors as a list;
#X text 224 779 - get all mesh2d commands as a list;
#X text 224 799 - get all mesh3d commands as a list;
#X text 224 819 - get the dimensions of the mesh2d bounding box;
#X text 224 839 - get the dimensions of the mesh3d bounding box;
#X text 224 859 - get the centroid of all the vetices in the mesh2d
;
#X text 224 879 - get the centroid of all the vetices in the mesh3d
;
#X restore 26 429 pd mesh;
#N canvas 519 75 650 158 camera 0;
#X text 24 30 -------------------------- CAMERA --------------------------
;
#X obj 26 59 ofEasyCam;
#X obj 26 79 ofCamera;
#X text 224 59 - a simple camera for interacting with objects in 3d
space;
#X text 224 79 - a basic camera for interacting with objects in 3d
space;
#X restore 26 449 pd camera;
#N canvas 519 75 650 176 light 0;
#X text 24 30 -------------------------- LIGHT --------------------------
;
#X obj 26 99 ofDirectionalLight;
#X obj 26 59 ofPointLight;
#X obj 26 79 ofSpotlight;
#X text 224 59 - a light that spreads outward evenly in all directions
;
#X text 224 79 - a light that spreads outward in a cone;
#X text 224 99 - a light that comes evenly from a given direction;
#X restore 26 469 pd light;
#N canvas 519 75 650 235 float 0;
#X text 24 30 -------------------------- FLOAT --------------------------
;
#X obj 26 59 ofLoadFloat;
#X obj 26 79 ofEditFloat;
#X obj 26 99 ofDoesFloatNameExist;
#X obj 26 119 ofGetFloat;
#X obj 26 139 ofGetFloats;
#X obj 26 159 ofGetFloatAverage;
#X text 224 59 - store an array of floats;
#X text 224 79 - edit the stored float;
#X text 224 99 - check the existence of a float variable name;
#X text 224 119 - get a float element at the given index;
#X text 224 139 - get all float elements as a list;
#X text 224 159 - get the average value of float elements;
#X restore 26 549 pd float;
#N canvas 519 75 650 381 vec2f 0;
#X obj 26 119 ofGetVec2f;
#X obj 26 59 ofLoadVec2f;
#X obj 26 79 ofEditVec2f;
#X obj 26 99 ofDoesVec2fNameExist;
#X obj 26 139 ofGetVec2fs;
#X obj 26 159 ofGetVec2fAverage;
#X obj 26 179 ofGetVec2fAngle;
#X obj 26 199 ofGetVec2fAngleRad;
#X obj 26 219 ofGetVec2fDist;
#X obj 26 239 ofGetVec2fDistSquared;
#X obj 26 259 ofGetVec2fDot;
#X obj 26 279 ofGetVec2fLength;
#X obj 26 299 ofGetVec2fLengthSquared;
#X text 224 59 - store an array of two dimensional vectors;
#X text 224 79 - edit the stored vec2f;
#X text 224 99 - check the existence of a vec2f variable name;
#X text 224 119 - get a vec2f element at the given index;
#X text 224 139 - get all vec2f elements as a list;
#X text 224 159 - get the average value of vec2f elements;
#X text 224 179 - get the angle in degrees between two vec2fs;
#X text 224 199 - get the angle in radians between two vec2fs;
#X text 224 219 - get the distance between two vec2fs;
#X text 224 239 - get the squared distance between two vec2fs;
#X text 224 259 - get the dot product of two vec2fs;
#X text 224 279 - get the length of the vec2f element;
#X text 224 299 - get the squared length of the vec2f element;
#X text 24 30 -------------------------- VEC2F --------------------------
;
#X restore 26 569 pd vec2f;
#N canvas 519 75 650 381 vec3f 0;
#X text 24 30 -------------------------- VEC3F --------------------------
;
#X obj 26 59 ofLoadVec3f;
#X obj 26 79 ofEditVec3f;
#X obj 26 99 ofDoesVec3fNameExist;
#X obj 26 119 ofGetVec3f;
#X obj 26 139 ofGetVec3fs;
#X obj 26 159 ofGetVec3fAverage;
#X obj 26 179 ofGetVec3fAngle;
#X obj 26 199 ofGetVec3fAngleRad;
#X obj 26 219 ofGetVec3fDist;
#X obj 26 239 ofGetVec3fDistSquared;
#X obj 26 259 ofGetVec3fDot;
#X obj 26 279 ofGetVec3fLength;
#X obj 26 299 ofGetVec3fLengthSquared;
#X text 224 59 - store an array of three dimensional vectors;
#X text 224 79 - edit the stored vec3f;
#X text 224 99 - check the existence of a vec3f variable name;
#X text 224 119 - get a vec3f element at the given index;
#X text 224 139 - get all vec3f elements as a list;
#X text 224 159 - get the average value of vec3f elements;
#X text 224 179 - get the angle in degrees between two vec3fs;
#X text 224 199 - get the angle in radians between two vec3fs;
#X text 224 219 - get the distance between two vec3fs;
#X text 224 239 - get the squared distance between two vec3fs;
#X text 224 259 - get the dot product of two vec3fs;
#X text 224 279 - get the length of the vec3f element;
#X text 224 299 - get the squared length of the vec3f element;
#X restore 26 589 pd vec3f;
#N canvas 519 75 650 334 vec4f 0;
#X text 24 30 -------------------------- VEC4F --------------------------
;
#X obj 26 59 ofLoadVec4f;
#X obj 26 79 ofEditVec4f;
#X obj 26 99 ofDoesVec4fNameExist;
#X obj 26 119 ofGetVec4f;
#X obj 26 139 ofGetVec4fs;
#X obj 26 159 ofGetVec4fAverage;
#X obj 26 179 ofGetVec4fDist;
#X obj 26 199 ofGetVec4fDistSquared;
#X obj 26 219 ofGetVec4fDot;
#X obj 26 239 ofGetVec4fLength;
#X obj 26 259 ofGetVec4fLengthSquared;
#X text 224 59 - store an array of four dimensional vectors;
#X text 224 79 - edit the stored vec4f;
#X text 224 99 - check the existence of a vec4f variable name;
#X text 224 119 - get a vec4f element at the given index;
#X text 224 139 - get all vec4f elements as a list;
#X text 224 159 - get the average value of vec4f elements;
#X text 224 179 - get the distance between two vec4fs;
#X text 224 199 - get the squared distance between two vec4fs;
#X text 224 219 - get the dot product of two vec4fs;
#X text 224 239 - get the length of the vec4f element;
#X text 224 259 - get the squared length of the vec4f element;
#X restore 26 609 pd vec4f;
#N canvas 519 75 650 217 color 0;
#X text 24 30 -------------------------- COLOR --------------------------
;
#X obj 26 59 ofLoadColor;
#X obj 26 79 ofEditColor;
#X obj 26 99 ofDoesColorNameExist;
#X obj 26 119 ofGetColor;
#X obj 26 139 ofGetColors;
#X text 224 59 - store an array of colors;
#X text 224 79 - edit the stored color;
#X text 224 99 - check the existence of a color variable name;
#X text 224 119 - get a color element at the given index;
#X text 224 139 - get all color elements as a list;
#X restore 26 629 pd color;
#N canvas 519 75 650 217 symbol 0;
#X text 24 30 -------------------------- SYMBOL --------------------------
;
#X obj 26 59 ofLoadSymbol;
#X obj 26 79 ofEditSymbol;
#X obj 26 99 ofDoesSymbolNameExist;
#X obj 26 119 ofGetSymbol;
#X obj 26 139 ofGetSymbols;
#X text 224 59 - store an array of symbols;
#X text 224 79 - edit the stored symbol;
#X text 224 99 - check the existence of a symbol variable name;
#X text 224 119 - get a symbol element at the given index;
#X text 224 139 - get all symbol elements as a list;
#X restore 26 649 pd symbol;
#N canvas 519 75 650 639 math 0;
#X text 24 30 -------------------------- MATH --------------------------
;
#X obj 26 99 ofDegToRad;
#X obj 26 119 ofRadToDeg;
#X obj 26 139 ofDist2d;
#X obj 26 159 ofDist3d;
#X obj 26 179 ofDistSquared2d;
#X obj 26 199 ofDistSquared3d;
#X obj 26 219 ofInRange;
#X obj 26 259 ofNormalize;
#X obj 26 279 ofLerp;
#X obj 26 299 ofLerpDegrees;
#X obj 26 319 ofLerpRadians;
#X obj 26 339 ofRandom;
#X obj 26 419 ofWrap;
#X obj 26 479 ofMap;
#X obj 26 519 ofNoise;
#X obj 26 539 ofSignedNoise;
#X obj 26 559 ofSign;
#X obj 26 59 ofAngleDifferenceDegrees;
#X obj 26 79 ofAngleDifferenceRadians;
#X obj 26 239 ofClamp;
#X obj 26 439 ofWrapDegrees;
#X obj 26 459 ofWrapRadians;
#X obj 26 499 ofNextPow2;
#X obj 26 359 ofRandomf;
#X obj 26 379 ofRandomuf;
#X obj 26 399 ofSeedRandom;
#X text 224 99 - convert degrees to radians;
#X text 224 119 - convert radians to degrees;
#X text 224 139 - calculate the 2d distance between two points;
#X text 224 159 - calculate the 3d distance between two points;
#X text 224 199 - calculate the squared 3d distance between two points
;
#X text 224 219 - determine if a number is inside of a given range
;
#X text 224 239 - clamp a value between min and max;
#X text 224 259 - map the input value to be within 0 and 1;
#X text 224 279 - linearly interpolate a value within a range;
#X text 224 299 - linearly interpolate a value between two angles in
degrees;
#X text 224 319 - linearly interpolate a value between two angles in
radians;
#X text 224 339 - get a random number within a given range;
#X text 224 359 - get a random floating point number between -1 and
1;
#X text 224 379 - get a random floating point number between 0 and
1;
#X text 224 399 - seed the random number generator with a unique value
;
#X text 224 419 - wrap a value if it overflows a given range;
#X text 224 439 - wrap a value within the angle in degrees;
#X text 224 459 - wrap a value within the angle in radians;
#X text 224 479 - map the value to a new value;
#X text 224 519 - calculate a simplex noise value between 0 and 1;
#X text 224 539 - calculate a simplex noise value between -1 and 1
;
#X text 224 559 - get the sign of a value;
#X text 224 179 - calculate the squared 2d distance between two points
;
#X text 224 499 - calculate the next larger power of 2;
#X text 224 59 - calculate the difference between two angles in degrees
;
#X text 224 79 - calculate the difference between two angles in radians
;
#X restore 26 709 pd math;
#N canvas 519 75 650 171 message 0;
#X obj 26 59 ofAppend;
#X obj 26 79 ofPrepend;
#X obj 26 99 ofPack;
#X text 224 59 - append a symbol to an incoming message;
#X text 224 79 - prepend a symbol to an incoming message;
#X text 224 99 - combine several atoms into one message;
#X text 25 30 ------------------------- MESSAGE -------------------------
;
#X restore 26 769 pd message;
#N canvas 519 75 650 472 list 0;
#X obj 26 379 ofListToSymbol;
#X obj 26 399 ofSymbolToList;
#X obj 26 59 ofListFind;
#X obj 26 79 ofFindList;
#X obj 26 99 ofListInsert;
#X obj 26 119 ofInsertList;
#X obj 26 139 ofListFill;
#X obj 26 159 ofFillList;
#X obj 26 179 ofListReplace;
#X obj 26 199 ofReplaceList;
#X obj 26 219 ofListRemove;
#X obj 26 239 ofRemoveList;
#X obj 26 259 ofListErase;
#X obj 26 279 ofEraseList;
#X obj 26 299 ofListSort;
#X obj 26 319 ofListUnique;
#X obj 26 339 ofListReverse;
#X obj 26 359 ofListShuffle;
#X text 224 59 - get indices of sublists found in a list;
#X text 224 79 - get indices of sublists found in a list;
#X text 224 99 - insert a list into a list;
#X text 224 119 - insert a list into a list;
#X text 224 139 - fill a list with element;
#X text 224 159 - fill a list with element;
#X text 224 179 - replace sublists in a list;
#X text 224 199 - replace sublists in a list;
#X text 224 219 - remove sublists in a list;
#X text 224 239 - remove sublists in a list;
#X text 224 259 - remove a range of elements from a list;
#X text 224 279 - remove a range of elements from a list;
#X text 224 299 - sort a list in ascending or descending order;
#X text 224 319 - remove duplicates from a list;
#X text 224 339 - reverse the order of a list;
#X text 224 359 - randomly change the order of a list;
#X text 224 379 - convert a list into a symbol;
#X text 224 399 - convert a symbol into a list;
#X text 25 30 --------------------------- LIST ---------------------------
;
#X restore 26 789 pd list;
#N canvas 518 74 650 197 device 0;
#X obj 26 59 ofGetAudioDevices;
#X obj 26 79 ofSetAudioDevices;
#X obj 26 99 ofGetMidiDevices;
#X obj 26 119 ofSetMidiDevices;
#X text 224 79 - set input/output audio device \, sample rate and block
size;
#X text 224 99 - get a list of all available input/output midi devices
;
#X text 224 119 - set input/output midi device;
#X text 224 59 - get a list of all available input/output audio devices
;
#X text 25 30 -------------------------- DEVICE --------------------------
;
#X restore 26 909 pd device;
#N canvas 518 74 650 214 patch 0;
#X obj 26 99 ofGetDollarZero;
#X obj 26 119 ofGetDollarArgs;
#X obj 26 139 ofError;
#X obj 26 79 ofGetCanvasName;
#X obj 26 59 ofPatch;
#X text 224 79 - get the unique name of the canvas;
#X text 224 99 - get the \$0 value of the patch;
#X text 224 119 - get the arguments of the patch;
#X text 224 139 - print an error to the pd console;
#X text 224 59 - open/close pd patches;
#X text 25 30 -------------------------- PATCH --------------------------
;
#X restore 26 849 pd patch;
#N canvas 518 74 650 231 color 0;
#X text 25 30 -------------------------- COLOR --------------------------
;
#X obj 26 59 ofHexToHsb;
#X obj 26 79 ofHexToRgb;
#X obj 26 99 ofHsbToHex;
#X obj 26 119 ofHsbToRgb;
#X obj 26 139 ofRgbToHex;
#X obj 26 159 ofRgbToHsb;
#X text 224 59 - convert hex color values to hsb color values;
#X text 224 79 - convert hex color values to rgb color values;
#X text 224 99 - convert hsb color values to hex color values;
#X text 224 119 - convert hsb color values to rgb color values;
#X text 224 139 - convert rgb color values to hex color values;
#X text 224 159 - convert rgb color values to hsb color values;
#X restore 26 809 pd color;
#N canvas 518 74 650 216 file 0;
#X text 25 30 --------------------------- FILE ---------------------------
;
#X obj 26 119 ofGetDirectoryFileNames;
#X obj 26 139 ofGetDirectoryFilePaths;
#X obj 26 99 ofDoesFileExist;
#X obj 26 59 ofFile;
#X obj 26 79 ofSaveURL;
#X text 224 99 - check the existence of a file;
#X text 224 119 - get the list of file names in a directory;
#X text 224 139 - get the list of file paths in a directory;
#X text 224 59 - create/remove/rename/copy/move files;
#X text 224 79 - save a file from a url;
#X restore 26 869 pd file;
#N canvas 518 74 650 250 directory 0;
#X text 25 30 ------------------------ DIRECTORY ------------------------
;
#X obj 26 79 ofGetPatchDirectory;
#X obj 26 99 ofGetHomeDirectory;
#X obj 26 119 ofGetDocumentsDirectory;
#X obj 26 139 ofGetLibraryDirectory;
#X obj 26 159 ofGetTemporaryDirectory;
#X obj 26 179 ofDoesDirectoryExist;
#X obj 26 59 ofDirectory;
#X text 224 79 - get the directory of the patch;
#X text 224 99 - get the user home directory on desktop platforms;
#X text 224 119 - get the documents directory on ios devices;
#X text 224 139 - get the library directory on ios devices;
#X text 224 159 - get the temporary directory on ios devices;
#X text 224 179 - check the existence of a directory;
#X text 224 59 - create/remove/rename/copy/move directories;
#X restore 26 889 pd directory;
#N canvas 519 75 650 340 misc 0;
#X obj 26 219 ofGetPlatform;
#X obj 26 239 ofGetDate;
#X obj 26 259 ofGetTime;
#X text 224 219 - get the OS platform being used;
#X text 224 239 - get the day/month/year;
#X text 224 259 - get the time in seconds/minutes/hours;
#X text 24 30 --------------------------- MISC ---------------------------
;
#X obj 26 59 ofCount;
#X obj 26 79 ofCountUntil;
#X obj 26 179 ofGetMinFloat;
#X obj 26 199 ofGetMaxFloat;
#X obj 26 99 ofStep;
#X text 224 99 - increase or decrease a value in steps;
#X text 224 179 - get the lowest possible float;
#X text 224 199 - get the highest possible float;
#X text 224 59 - count over a range;
#X text 224 79 - count over a range at once;
#X obj 26 119 ofAnimate;
#X text 224 119 - smoothly change a value over time;
#X obj 26 139 ofSwitch;
#X obj 26 159 ofGate;
#X text 224 139 - pass messages from a specific inlet;
#X text 224 159 - route a message to an outlet;
#X restore 26 929 pd misc;
#N canvas 519 75 650 211 variable 0;
#X obj 26 119 ofExpr;
#X obj 26 139 ofDefine;
#X text 224 119 - expression evaluation object;
#X text 224 139 - expression evaluation object;
#X text 24 30 ------------------------- VARIABLE -------------------------
;
#X obj 26 59 ofValue;
#X obj 26 79 ofSend;
#X obj 26 99 ofReceive;
#X text 224 59 - nonlocal shared value;
#X text 224 79 - send messages without patch cords;
#X text 224 99 - receive messages without patch cords;
#X restore 26 829 pd variable;
#N canvas 519 75 650 291 oscillators 0;
#X obj 27 59 ofSine~;
#X obj 27 79 ofTriangle~;
#X obj 27 99 ofSaw~;
#X obj 27 119 ofSquare~;
#X obj 27 139 ofPulse~;
#X obj 27 159 ofBlTriangle~;
#X obj 27 179 ofBlSaw~;
#X obj 27 199 ofBlSquare~;
#X obj 27 219 ofBlPulse~;
#X text 225 59 - sine wave oscillator;
#X text 225 79 - triangle wave oscillator;
#X text 225 99 - sawtooth wave oscillator;
#X text 225 119 - square wave oscillator;
#X text 225 139 - pulse wave oscillator;
#X text 225 159 - bandlimited triangle wave oscillator;
#X text 225 179 - bandlimited sawtooth wave oscillator;
#X text 225 199 - bandlimited square wave oscillator;
#X text 225 219 - bandlimited pulse wave oscillator;
#X text 24 30 ----------------------- OSCILLATORS -----------------------
;
#X restore 26 989 pd oscillators;
#N canvas 519 75 650 277 filters 0;
#X obj 27 59 ofLowPass~;
#X obj 27 79 ofHighPass~;
#X obj 27 99 ofBandPass~;
#X obj 27 119 ofNotch~;
#X obj 27 139 ofPeaking~;
#X obj 27 159 ofLowShelf~;
#X obj 27 179 ofHighShelf~;
#X obj 27 199 ofAllPass~;
#X text 225 59 - low-pass filter with resonance control;
#X text 225 79 - high-pass filter with resonance control;
#X text 225 99 - band-pass filter with Q control;
#X text 225 119 - notch filter with bandwidth control;
#X text 225 139 - peaking filter with Q and gain control;
#X text 225 159 - low shelf filter with shelf slope and gain control
;
#X text 225 179 - high shelf filter with shelf slope and gain control
;
#X text 225 199 - all-pass filter with bandwidth control;
#X text 24 30 ------------------------- FILTERS -------------------------
;
#X restore 26 1009 pd filters;
#N canvas 519 75 650 161 window 0;
#X text 24 30 ------------------------- WINDOW -------------------------
;
#X obj 26 79 ofWindow;
#X text 224 79 - handle the output window;
#X obj 26 59 ofelia;
#X text 224 59 - initialize the ofelia external library;
#X restore 26 89 pd window;
#N canvas 519 75 650 137 material 0;
#X obj 26 59 ofMaterial;
#X text 224 59 - set the material of the object;
#X text 24 30 ------------------------- MATERIAL -------------------------
;
#X restore 26 489 pd material;
#N canvas 519 75 650 137 viewport 0;
#X obj 26 59 ofViewport;
#X text 224 59 - setup the drawing viewport;
#X text 24 30 ------------------------- VIEWPORT -------------------------
;
#X restore 26 269 pd viewport;
#N canvas 518 74 650 168 separators 0;
#X obj 26 99 ofSeparator;
#X text 224 99 - separate render chains in matrix and style;
#X text 24 30 ------------------------ SEPARATORS ------------------------
;
#X obj 26 59 ofSepMatrix;
#X text 224 59 - separate render chains in matrix;
#X obj 26 79 ofSepStyle;
#X text 224 79 - separate render chains in style;
#X restore 26 249 pd separators;
#N canvas 519 75 650 131 head 0;
#X obj 26 59 ofHead;
#X text 224 59 - the start of a rendering chain;
#X text 24 30 -------------------------- HEAD --------------------------
;
#X restore 26 189 pd head;
#X text 24 740 -------------------------- UTILS --------------------------
;
#X text 24 60 -------------------------- WINDOW --------------------------
;
#X text 23 22 a categorized list of built-in objects in ofelia.;
#X obj 512 20 declare -lib ofelia;
