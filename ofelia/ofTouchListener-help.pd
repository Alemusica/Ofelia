#N canvas 321 23 604 562 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofTouchListener 3 12 0 18 -204280
-1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 375 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 383 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 506 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 457 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 480 (none);
#X text 72 349 (none);
#X text 95 383 list <f \, f \, f>;
#X obj 75 406 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 95 406 list <f \, f \, f>;
#X obj 75 429 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 95 429 list <f \, f \, f>;
#X obj 11 203 unpack f f f;
#X floatatom 11 225 5 0 0 0 - - -, f 5;
#X floatatom 45 245 5 0 0 0 - - -, f 5;
#X floatatom 80 265 5 0 0 0 - - -, f 5;
#X obj 186 203 unpack f f f;
#X floatatom 186 225 5 0 0 0 - - -, f 5;
#X floatatom 220 245 5 0 0 0 - - -, f 5;
#X floatatom 255 265 5 0 0 0 - - -, f 5;
#X obj 367 203 unpack f f f;
#X floatatom 367 225 5 0 0 0 - - -, f 5;
#X floatatom 401 245 5 0 0 0 - - -, f 5;
#X floatatom 436 265 5 0 0 0 - - -, f 5;
#X text 207 301 touch id is used to detect 'n'th touch on the device.
;
#N canvas 321 134 603 450 more_examples 0;
#N canvas 322 135 814 645 button1 0;
#X obj 226 78 list split 1;
#X obj 226 138 spigot;
#X obj 226 160 t b f;
#X obj 226 335 change;
#X floatatom 226 357 5 0 0 0 - - -, f 5;
#X obj 226 376 sel 1 0;
#X obj 422 254 0;
#X obj 226 182 1;
#X obj 53 28 inlet;
#X text 316 397 change the color when touched inside the area.;
#X obj 354 210 route -1;
#X obj 422 210 route -1;
#X obj 454 254 -1;
#X obj 422 232 t b b;
#X obj 53 172 ofTranslate 40 40;
#X obj 311 28 ofTouchListener;
#X obj 53 541 ofSetColor 255 165 0;
#X obj 53 588 ofRectRounded 80 80 10;
#X obj 260 102 ofExpr if ($i1 > 40 && $i1 < 120 && $i2 > 40 && $i2
< 120 \, 1 \, 0), f 64;
#X obj 354 291 ofExpr if ($i1 > 40 && $i1 < 120 && $i2 > 40 && $i2
< 120 \, 1 \, 0), f 64;
#X text 485 209 process further if the touch has the same id.;
#X msg 226 397 set 210 140 0;
#X msg 245 417 set 255 165 0;
#X connect 0 0 1 0;
#X connect 0 1 18 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 2 1 10 1;
#X connect 2 1 11 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 21 0;
#X connect 5 1 22 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 14 0;
#X connect 10 0 19 0;
#X connect 11 0 13 0;
#X connect 12 0 10 1;
#X connect 12 0 11 1;
#X connect 13 0 6 0;
#X connect 13 1 12 0;
#X connect 14 0 16 0;
#X connect 15 0 0 0;
#X connect 15 1 10 0;
#X connect 15 2 11 0;
#X connect 16 0 17 0;
#X connect 18 0 1 1;
#X connect 19 0 3 0;
#X connect 21 0 16 0;
#X connect 22 0 16 0;
#X restore 165 239 pd button1;
#X obj 79 38 loadbang;
#N canvas 321 135 826 632 button2 0;
#X obj 251 78 list split 1;
#X obj 251 138 spigot;
#X obj 251 160 t b f;
#X obj 251 335 change;
#X floatatom 251 357 5 0 0 0 - - -, f 5;
#X obj 447 254 0;
#X obj 251 182 1;
#X obj 98 28 inlet;
#X obj 251 376 + 1;
#X text 294 570 change the shape when touched inside the area.;
#X obj 379 210 route -1;
#X obj 447 210 route -1;
#X obj 447 232 t b b;
#X obj 479 254 -1;
#X obj 98 172 ofTranslate 120 120;
#X obj 98 210 ofSetColor 255 214 0;
#X obj 41 466 ofGate 2 1;
#X obj 336 28 ofTouchListener;
#X obj 198 534 ofTranslate 40 40;
#X obj 41 570 ofRectRounded 80 80 10;
#X obj 198 570 ofStar 40 20 5;
#X obj 285 102 ofExpr if ($i1 > 120 && $i1 < 200 && $i2 > 120 && $i2
< 200 \, 1 \, 0), f 66;
#X obj 379 291 ofExpr if ($i1 > 120 && $i1 < 200 && $i2 > 120 && $i2
< 200 \, 1 \, 0), f 66;
#X text 508 208 process further if the touch has the same id.;
#X connect 0 0 1 0;
#X connect 0 1 21 0;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 2 1 10 1;
#X connect 2 1 11 1;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 14 0;
#X connect 8 0 16 0;
#X connect 10 0 22 0;
#X connect 11 0 12 0;
#X connect 12 0 5 0;
#X connect 12 1 13 0;
#X connect 13 0 10 1;
#X connect 13 0 11 1;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 16 0 19 0;
#X connect 16 1 18 0;
#X connect 17 0 0 0;
#X connect 17 1 10 0;
#X connect 17 2 11 0;
#X connect 18 0 20 0;
#X connect 21 0 1 1;
#X connect 22 0 3 0;
#X restore 249 239 pd button2;
#N canvas 321 133 773 562 area_touched 0;
#X floatatom 271 188 5 0 0 0 - - -, f 5;
#X text 394 73 it doesn't use touch id. therefore it can only handle
a single touch.;
#X obj 52 70 inlet;
#X obj 271 207 sel 1 0;
#X text 330 228 change the color when touched inside the area.;
#X text 331 188 outputs 1 when touched down or moved within the rectangle.
otherwise \, outputs 0;
#X obj 52 134 ofTranslate 20 20;
#X obj 52 161 ofSetFillMode OUTLINE;
#X obj 271 70 ofTouchListener;
#X obj 52 458 ofSetColor skyBlue;
#X obj 52 498 ofRectangle 200 200;
#X obj 271 164 ofExpr if ($i2 > 20 && $i2 < 220 && $i3 > 20 && $i3
< 220 \, 1 \, 0), f 64;
#X msg 358 92 0;
#X msg 271 228 set lime;
#X msg 290 248 set skyBlue;
#X connect 0 0 3 0;
#X connect 2 0 6 0;
#X connect 3 0 13 0;
#X connect 3 1 14 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 11 0;
#X connect 8 1 11 0;
#X connect 8 2 12 0;
#X connect 9 0 10 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X connect 13 0 9 0;
#X connect 14 0 9 0;
#X restore 46 239 pd area_touched;
#X text 322 239 <- see each example inside.;
#X text 44 280 the subpatch "area_touched" shows an example of detecting
if a touch is within the area or not regardless of 'n'th touch which
means it cannot handle more than one touch at a time. on the other
hand \, the subpatch "button1" and "button2" show an example of creating
multi-touch safe GUIs. for example \, the button1 can be pressed and
released while holding down the button2 which is not possible if they
are implemented as the subpatch "area_touched".;
#X obj 79 66 ofGetLastRenderOrder;
#X obj 46 128 ofClear 63;
#X obj 46 160 ofSeparator 3;
#X obj 46 98 ofHead;
#X connect 1 0 6 0;
#X connect 6 0 9 1;
#X connect 7 0 8 0;
#X connect 8 0 3 0;
#X connect 8 1 0 0;
#X connect 8 2 2 0;
#X connect 9 0 7 0;
#X restore 480 66 pd more_examples;
#X text 206 318 (starting from '0');
#X text 11 23 listen to the touch events;
#X obj 481 5 ofTouchListener;
#X text 21 43 [ofTouchListener] is used to detect the touch events
on mobile devices. it will listen to the mouse events when used on
desktop computers.;
#X obj 143 115 ofTouchListener;
#X obj 23 318 ofWindow 320 240 LEFT TOP;
#X text 211 383 - touch down. (touch id \, x coordinate \, y coordinate)
;
#X text 211 406 - touch moved. (touch id \, x coordinate \, y coordinate)
;
#X text 211 429 - touch up. (touch id \, x coordinate \, y coordinate)
;
#X text 102 202 touch down.;
#X text 277 202 touch moved.;
#X text 458 202 touch up.;
#X text 50 224 touch id.;
#X text 225 224 touch id.;
#X text 406 224 touch id.;
#X text 86 244 x coordinate.;
#X text 120 264 y coordinate.;
#X text 261 244 x coordinate.;
#X text 295 264 y coordinate.;
#X text 442 244 x coordinate.;
#X text 476 264 y coordinate.;
#X obj 462 46 declare -lib ofelia;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 13 2 16 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 17 2 20 0;
#X connect 21 0 22 0;
#X connect 21 1 23 0;
#X connect 21 2 24 0;
#X connect 31 0 13 0;
#X connect 31 1 17 0;
#X connect 31 2 21 0;
