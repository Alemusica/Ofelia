#N canvas 321 23 601 839 10;
#X obj 0 0 cnv 15 580 40 empty empty ofDrawTextAsShapes 3 12 0 18 -204280
-1 0;
#X obj 0 541 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 660 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 549 cnv 17 3 100 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 668 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 785 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 696 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 719 1) symbol;
#N canvas 322 132 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X text 275 149 the number of elements stored in the array.;
#X obj 23 519 ofWindow 320 240 LEFT TOP;
#X floatatom 236 149 5 0 0 0 - - -, f 5;
#X obj 23 169 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 169 outputs bang when loading is done.;
#X obj 56 203 loadbang;
#X obj 56 224 ofGetLastRenderOrder;
#X obj 23 245 ofHead;
#X obj 23 266 ofClear 63;
#X obj 43 378 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 63 378 switch the font.;
#X obj 23 288 ofSetTextMode CENTER MIDDLE;
#X text 196 288 set the text align mode.;
#X obj 23 310 ofTranslate 160 120;
#X text 95 589 name <s>;
#X text 95 629 text <l>;
#X text 95 549 render bang;
#X text 241 549 - the incoming render bang.;
#X text 241 668 - the outgoing render bang.;
#X text 95 668 render bang;
#X obj 463 5 ofDrawTextAsShapes;
#X text 11 23 draw a text as shapes using the stored font;
#X text 299 482 draw the text as shapes.;
#X floatatom 284 458 5 0 0 0 - - -, f 5;
#X text 326 457 change the text size.;
#X text 95 609 size <f>;
#X text 72 759 3) list;
#X text 72 739 2) float;
#X obj 23 352 ofSetFillMode OUTLINE;
#X obj 146 332 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 21 43 [ofDrawTextAsShapes] draws the text as if it was geometrical
shapes. unlike [ofDrawText] \, aliasing will not occur even when the
text is scaled.;
#X msg 190 426 text Draw\$1the\$1text!;
#X obj 190 402 list tosymbol;
#X msg 190 378 10;
#X text 241 739 - sets the size of the text.;
#X text 241 759 - sets the text to draw. (default: "");
#X text 167 332 0: OUTLINE \, 1: FILLED.;
#X text 241 609 - sets the size of the text.;
#X text 241 629 - sets the text to draw.;
#X text 241 589 - sets the variable name followed by the index.;
#X text 241 719 - sets the variable name followed by the index.;
#X text 221 378 insert "new line" escape sequence to draw the text.
;
#X obj 23 482 ofDrawTextAsShapes @myFonts[0] 0 Hello World;
#X text 95 569 float;
#X text 241 569 - sets the index of the array element.;
#X obj 23 95 ofLoadFont \; @myFonts \; examples/data/Sansation.ttf
30 \; examples/data/DejaVuSansMono.ttf 24 \;;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X connect 17 0 20 0;
#X connect 18 0 51 0;
#X connect 20 0 22 0;
#X connect 22 0 37 0;
#X connect 32 0 51 1;
#X connect 37 0 51 0;
#X connect 38 0 37 1;
#X connect 40 0 51 0;
#X connect 41 0 40 0;
#X connect 42 0 41 0;
#X connect 54 0 12 0;
#X connect 54 1 11 0;
