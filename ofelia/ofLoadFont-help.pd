#N canvas 321 23 601 732 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofLoadFont 3 12 0 18 -204280 -1
0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 540 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 548 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 668 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 599 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 349 name <s>;
#X text 95 369 load <l>;
#X text 95 409 append <l>;
#X text 95 429 prepend <l>;
#X text 95 489 erase <f \, f>;
#X text 95 509 clear;
#X text 72 622 1) symbol;
#X text 72 642 2) list;
#N canvas 321 133 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 275 179 the number of elements stored in the array.;
#N canvas 321 23 699 844 related_getter_objects 0;
#X obj 30 12 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 92 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 223 5 0 0 0 - - -, f 5;
#X obj 30 252 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 332 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 432 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 63 5 0 0 0 - - -, f 5;
#X symbolatom 30 143 70 0 0 0 - - -, f 70;
#X obj 30 172 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 303 5 0 0 0 - - -, f 5;
#X text 53 251 check if the font is loaded or not.;
#X obj 30 383 unpack f f;
#X floatatom 30 406 5 0 0 0 - - -, f 5;
#X floatatom 87 406 5 0 0 0 - - -, f 5;
#X text 131 405 width \, height.;
#X floatatom 30 483 5 0 0 0 - - -, f 5;
#X text 53 431 get the letter spacing of the font.;
#X obj 30 512 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 563 5 0 0 0 - - -, f 5;
#X text 53 511 get the line height of the font.;
#X obj 30 592 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 30 643 5 0 0 0 - - -, f 5;
#X text 53 591 get the space size of the font.;
#X obj 30 672 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 723 print;
#X obj 30 752 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 30 803 print;
#X text 53 671 get the mesh2d data based on the font and text.;
#X text 53 751 get the mesh3d data based on the font and text.;
#X text 72 63 0: not exists \, 1: exists.;
#X text 72 303 0: not loaded \, 1: loaded.;
#X text 223 616 note: currently \, it is only possible to get the space
size once it is set with [ofEditFont].;
#X text 53 11 check if the font variable name exists or not.;
#X obj 30 36 ofDoesFontNameExist @myFonts;
#X obj 30 116 ofGetFontPath @myFonts[0];
#X obj 30 196 ofGetFontSize @myFonts[0];
#X obj 30 276 ofIsFontLoaded @myFonts[0];
#X obj 30 356 ofGetTextBoundingBox @myFonts[0] Hello World;
#X obj 30 456 ofGetFontLetterSpacing @myFonts[0];
#X obj 30 536 ofGetFontLineHeight @myFonts[0];
#X obj 30 616 ofGetFontSpaceSize @myFonts[0];
#X obj 30 696 ofGetTextMesh2dCommands @myFonts[0] Hello World;
#X obj 30 776 ofGetTextMesh3dCommands @myFonts[0] Hello World;
#X text 53 331 get the dimensions of the text bounding box.;
#X text 53 91 get the absolute path of the font.;
#X text 53 171 get the size of the font.;
#X connect 0 0 33 0;
#X connect 1 0 34 0;
#X connect 3 0 36 0;
#X connect 4 0 37 0;
#X connect 5 0 38 0;
#X connect 8 0 35 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 17 0 39 0;
#X connect 20 0 40 0;
#X connect 23 0 41 0;
#X connect 25 0 42 0;
#X connect 33 0 6 0;
#X connect 34 0 7 0;
#X connect 35 0 2 0;
#X connect 36 0 9 0;
#X connect 37 0 11 0;
#X connect 38 0 15 0;
#X connect 39 0 18 0;
#X connect 40 0 21 0;
#X connect 41 0 24 0;
#X connect 42 0 26 0;
#X restore 23 288 pd related_getter_objects;
#X text 95 449 insert <l \, f \, f>;
#X text 95 469 fill <l \, f \, f>;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#X text 95 389 add <l>;
#X text 11 23 store an array of fonts;
#X obj 511 5 ofLoadFont;
#N canvas 322 134 881 406 font_example 0;
#X msg 36 33 print;
#X obj 36 333 outlet;
#X text 83 33 print the current settings and stored array elements.
;
#X msg 36 270 clear;
#X text 85 270 remove all elements from the array.;
#X msg 36 128 erase 0 0;
#X text 105 128 remove the index range "0~0".;
#X msg 36 83 load examples/data/Sansation.ttf 32 examples/data/DejaVuSansMono.ttf
28;
#X text 265 83 (re)initialize an array with "examples/data/Sansation.ttf
32" \, "examples/data/DejaVuSansMono.ttf 28".;
#X msg 36 170 add examples/data/Sansation.ttf 30;
#X text 257 170 add an element "examples/data/Sansation.ttf 30" to
the end of the array.;
#X text 316 220 assign "examples/data/DejaVuSansMono.ttf 24" to the
index range "0~0".;
#X msg 36 220 fill examples/data/DejaVuSansMono.ttf 24 0 0;
#X connect 0 0 1 0;
#X connect 3 0 1 0;
#X connect 5 0 1 0;
#X connect 7 0 1 0;
#X connect 9 0 1 0;
#X connect 12 0 1 0;
#X restore 23 101 pd font_example;
#X floatatom 236 179 5 0 0 0 - - -, f 5;
#X obj 23 199 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 199 outputs bang when loading is done.;
#X obj 75 571 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 95 571 float;
#X text 241 571 - the number of elements stored in the array.;
#X text 95 548 bang;
#X text 241 548 - outputs bang when loading is done.;
#X text 21 43 [ofLoadFont] stores an array of fonts that can be edited
\, bound as a texture \, drawn directly to the screen \, or used by
its related "getter" objects.;
#X text 241 349 - sets the unique variable name for the array.;
#X text 241 369 - (re)initializes an array with one or more elements.
;
#X text 241 389 - adds a single element to the end of the array.;
#X text 241 409 - appends one or more elements to the array.;
#X text 241 429 - prepends one or more elements to the array.;
#X text 241 449 - inserts an element at the specified position.;
#X text 241 469 - assigns value to all the elements in the range.;
#X text 241 489 - removes a range of elements from the array.;
#X text 241 509 - removes all elements from the array.;
#X text 241 622 - sets the unique variable name for the array.;
#X text 241 642 - initializes an array with one or more elements.;
#N canvas 321 133 606 441 related_editor_objects 0;
#X obj 66 273 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 46 79 ofPack letterSpacing 1;
#X floatatom 175 55 5 0 0 0 - - -, f 5;
#X text 217 54 change the letter spacing.;
#X floatatom 157 115 5 0 0 0 - - -, f 5;
#X obj 46 139 ofPack lineHeight 0;
#X floatatom 151 175 5 0 0 0 - - -, f 5;
#X obj 46 199 ofPack spaceSize 0;
#X text 193 174 change the space size.;
#X text 86 273 switch the font to edit.;
#X text 163 236 clone the specified font.;
#X text 199 114 change the line height. (for line broken texts);
#X obj 46 334 ofEditFont @myFonts[0];
#X msg 46 236 clone @myFonts[1];
#X connect 0 0 12 0;
#X connect 1 0 12 0;
#X connect 2 0 1 1;
#X connect 4 0 5 1;
#X connect 5 0 12 0;
#X connect 6 0 7 1;
#X connect 7 0 12 0;
#X connect 13 0 12 0;
#X restore 23 248 pd related_editor_objects;
#N canvas 321 132 722 627 related_drawer_objects 0;
#X obj 63 24 loadbang;
#X obj 63 45 ofGetLastRenderOrder;
#X obj 30 66 ofHead;
#X obj 30 87 ofClear 63;
#X text 246 273 draw the text using the stored font.;
#X obj 60 189 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 80 189 switch the font.;
#X obj 30 141 ofSetTextMode CENTER MIDDLE;
#X obj 30 163 ofTranslate 160 80;
#X obj 30 295 ofTranslate 0 40;
#X obj 30 340 ofTranslate 0 40;
#X floatatom 291 297 5 0 0 0 - - -, f 5;
#X text 307 317 draw the text as shapes using the stored font.;
#X text 337 189 change the text.;
#X msg 210 189 text Draw the text!;
#X obj 30 514 ofPrepend load;
#X text 202 141 set the text align mode.;
#X obj 30 119 ofSetFillMode OUTLINE;
#X obj 153 99 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 30 363 ofSetFillMode FILLED;
#X text 193 386 bind the stored font's texture.;
#X msg 30 464 textMode CENTER MIDDLE \, bang;
#X text 163 407 draw the mesh.;
#X text 211 464 set the text mode \, load mesh based on the font and
text.;
#X text 174 99 0: OUTLINE \, 1: FILLED.;
#X obj 30 273 ofDrawText @myFonts[0] Hello World;
#X obj 30 317 ofDrawTextAsShapes @myFonts[0] 0 Hello World;
#X obj 30 385 ofBindFontTex @myFonts[0];
#X obj 30 491 ofGetTextMesh2dCommands @myFonts[0] Hello World;
#X obj 30 537 ofLoadMesh2d @myMesh;
#X obj 30 407 ofDrawMesh2d @myMesh;
#X text 329 296 change the text size.;
#X connect 0 0 1 0;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 3 0 17 0;
#X connect 5 0 25 0;
#X connect 5 0 26 0;
#X connect 7 0 8 0;
#X connect 8 0 25 0;
#X connect 9 0 26 0;
#X connect 10 0 19 0;
#X connect 11 0 26 1;
#X connect 14 0 25 0;
#X connect 14 0 26 0;
#X connect 15 0 29 0;
#X connect 17 0 7 0;
#X connect 18 0 17 1;
#X connect 19 0 27 0;
#X connect 21 0 28 0;
#X connect 25 0 9 0;
#X connect 26 0 10 0;
#X connect 27 0 30 0;
#X connect 28 0 15 0;
#X restore 23 268 pd related_drawer_objects;
#X obj 23 125 ofLoadFont \; @myFonts \; examples/data/Sansation.ttf
30 \; examples/data/DejaVuSansMono.ttf 24 \;;
#X obj 462 46 declare -lib ofelia;
#X connect 24 0 47 0;
#X connect 47 0 26 0;
#X connect 47 1 25 0;
