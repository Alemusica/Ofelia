#N canvas 321 23 601 828 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofLoadRect 3 12 0 18 -204280 -1
0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 670 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 678 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 775 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 706 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 678 float;
#X text 95 479 name <s>;
#X text 95 499 load <l>;
#X text 95 539 append <l>;
#X text 95 559 prepend <l>;
#X text 95 619 erase <f \, f>;
#X text 95 639 clear;
#X text 72 729 1) symbol;
#X text 72 749 2) list;
#N canvas 321 123 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X msg 26 93 print;
#X text 72 333 remove all elements from the array.;
#X msg 26 333 clear;
#X floatatom 26 397 5 0 0 0 - - -, f 5;
#X text 281 678 - the number of elements stored in the array.;
#X text 70 397 the number of elements stored in the array.;
#X msg 26 303 erase 3 4;
#X text 95 519 add <f \, f \, f \, f>;
#X text 95 579 insert <f \, f \, f \, f \, f \, f>;
#X text 95 599 fill <f \, f \, f \, f \, f \, f>;
#X text 75 93 print the name and stored array elements.;
#X text 281 479 - sets the unique variable name for the array.;
#X text 281 499 - (re)initializes an array with one or more elements.
;
#X text 281 519 - adds a single element to the end of the array.;
#X text 281 539 - appends one or more elements to the array.;
#X text 281 559 - prepends one or more elements to the array.;
#X text 281 579 - inserts an element at the specified position.;
#X text 281 599 - assigns value to all the elements in the range.;
#X text 281 619 - removes a range of elements from the array.;
#X text 281 639 - removes all elements from the array.;
#X text 281 729 - sets the unique variable name for the array.;
#X text 281 749 - initializes an array with one or more elements.;
#X text 95 303 remove the index range "3~4".;
#N canvas 322 119 661 620 related_editor_objects 0;
#X text 176 481 edit the specified array element.;
#X obj 30 545 print;
#X obj 30 503 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 48 503 outputs bang when editing is done.;
#X obj 30 481 ofEditRect @myRects[1];
#X obj 30 523 ofGetRect @myRects[1];
#X msg 30 34 assign 100 100 30 30;
#X text 164 34 assign "100 100 30 30" to the array element.;
#X msg 30 64 assignFromCenter 100 100 30 30;
#X text 225 64 assign "100 100 30 30" from center to the array element.
;
#X msg 30 94 assignX 200;
#X text 110 94 assign "200" to the x position of the array element.
;
#X msg 30 124 assignY 200;
#X text 110 124 assign "200" to the y position of the array element.
;
#X msg 30 154 assignWidth 50;
#X text 128 154 assign "50" to the width of the array element.;
#X msg 30 184 assignHeight 50;
#X text 135 185 assign "50" to the height of the array element.;
#X msg 30 274 growToInclude 300 200;
#X text 173 274 grow the rectangle to include the given point.;
#X msg 30 304 growToInclude 300 200 50 50;
#X text 206 304 grow the rectangle to include the given rectangle.
;
#X text 100 334 scale the width and height of the rectangle.;
#X text 159 364 scale the width and height of the rectangle from its
center.;
#X msg 30 334 scale 2 1;
#X msg 30 364 scaleFromCenter 1 2;
#X msg 30 394 standardize;
#X text 109 394 standardize the rectangle.;
#X msg 30 424 translate 50 50;
#X text 133 424 offsets the position of the rectangle.;
#X msg 30 214 assignPos 200 200;
#X text 146 214 assign "200 200" to the position of the array element.
;
#X msg 30 244 assignDimen 50 50;
#X text 146 244 assign "50 50" to the dimensions of the array element.
;
#X connect 2 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 6 0 4 0;
#X connect 8 0 4 0;
#X connect 10 0 4 0;
#X connect 12 0 4 0;
#X connect 14 0 4 0;
#X connect 16 0 4 0;
#X connect 18 0 4 0;
#X connect 20 0 4 0;
#X connect 24 0 4 0;
#X connect 25 0 4 0;
#X connect 26 0 4 0;
#X connect 28 0 4 0;
#X connect 30 0 4 0;
#X connect 32 0 4 0;
#X restore 26 428 pd related_editor_objects;
#N canvas 321 23 566 835 related_getter_objects 0;
#X obj 40 102 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 40 194 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 40 235 print;
#X obj 40 32 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 40 77 5 0 0 0 - - -, f 5;
#X floatatom 40 169 5 0 0 0 - - -, f 5;
#X floatatom 82 169 5 0 0 0 - - -, f 5;
#X text 81 77 0: not exists \, 1: exists.;
#X obj 40 147 unpack f f f f;
#X floatatom 124 169 5 0 0 0 - - -, f 5;
#X floatatom 166 169 5 0 0 0 - - -, f 5;
#X obj 40 56 ofDoesRectNameExist @myRects;
#X obj 40 126 ofGetRect @myRects[1];
#X text 63 31 check if the rectangle variable name exists or not.;
#X text 63 101 get a rectangle element at the index "1". (starting
from "0");
#X text 209 169 x \, y \, width \, height.;
#X text 63 193 get all rectangle elements as a list.;
#X obj 40 214 ofGetRects @myRects;
#X floatatom 40 303 5 0 0 0 - - -, f 5;
#X obj 40 282 ofIsPointInsideRect @myRects[1];
#X text 95 261 check if a point is inside the rectangle.;
#X msg 40 261 220 220;
#X text 81 303 0: not inside \, 1: inside.;
#X floatatom 40 370 5 0 0 0 - - -, f 5;
#X text 81 370 0: not inside \, 1: inside.;
#X obj 40 349 ofIsLineInsideRect @myRects[1];
#X text 145 328 check if a line is inside the rectangle.;
#X msg 40 328 210 210 220 220;
#X floatatom 40 437 5 0 0 0 - - -, f 5;
#X text 81 437 0: not inside \, 1: inside.;
#X obj 40 416 ofIsRectInsideRect @myRects[1];
#X msg 40 395 210 210 10 10;
#X text 133 395 check if a rectangle is inside the rectangle.;
#X floatatom 40 504 5 0 0 0 - - -, f 5;
#X msg 40 462 210 210 220 220;
#X floatatom 40 571 5 0 0 0 - - -, f 5;
#X msg 40 529 210 210 10 10;
#X obj 40 483 ofDoesLineIntersectRect @myRects[1];
#X text 145 462 check if a line intersects with the rectangle.;
#X text 133 529 check if a rectangle intersects with the rectangle.
;
#X text 81 504 0: not intersects \, 1: intersects.;
#X text 81 571 0: not intersects \, 1: intersects.;
#X obj 40 550 ofDoesRectIntersectRect @myRects[1];
#X obj 40 596 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 40 659 5 0 0 0 - - -, f 5;
#X floatatom 97 659 5 0 0 0 - - -, f 5;
#X text 63 595 get the center position of the rectangle.;
#X obj 40 616 ofGetRectCenter @myRects[1];
#X obj 40 637 unpack f f;
#X obj 40 684 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 40 725 5 0 0 0 - - -, f 5;
#X obj 40 704 ofGetRectArea @myRects[1];
#X text 63 683 get the area of the rectangle.;
#X obj 40 750 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 40 791 5 0 0 0 - - -, f 5;
#X text 63 749 get the perimeter of the rectangle.;
#X obj 40 770 ofGetRectPerimeter @myRects[1];
#X connect 0 0 12 0;
#X connect 1 0 17 0;
#X connect 3 0 11 0;
#X connect 8 0 5 0;
#X connect 8 1 6 0;
#X connect 8 2 9 0;
#X connect 8 3 10 0;
#X connect 11 0 4 0;
#X connect 12 0 8 0;
#X connect 17 0 2 0;
#X connect 19 0 18 0;
#X connect 21 0 19 0;
#X connect 25 0 23 0;
#X connect 27 0 25 0;
#X connect 30 0 28 0;
#X connect 31 0 30 0;
#X connect 34 0 37 0;
#X connect 36 0 42 0;
#X connect 37 0 33 0;
#X connect 42 0 35 0;
#X connect 43 0 47 0;
#X connect 47 0 48 0;
#X connect 48 0 44 0;
#X connect 48 1 45 0;
#X connect 49 0 51 0;
#X connect 51 0 50 0;
#X connect 53 0 56 0;
#X connect 56 0 54 0;
#X restore 26 448 pd related_getter_objects;
#X obj 462 46 declare -lib ofelia;
#X obj 511 5 ofLoadRect;
#X obj 26 370 ofLoadRect @myRects 0 0 100 80 200 150 110 80;
#X msg 26 153 add 0 100 50 50;
#X text 130 153 add an element "0 100 50 50" to the end of the array.
;
#X msg 26 183 append 100 200 50 50;
#X msg 26 123 load 0 0 50 50 200 200 50 50;
#X text 207 123 (re)initialize an array with "0 0 50 50" \, "200 200
50 50".;
#X text 162 182 append "100 200 50 50" to the array.;
#X msg 26 213 prepend 200 100 50 50;
#X text 168 213 prepend "200 100 50 50" to the array.;
#X msg 26 243 insert 50 50 50 50 2 2;
#X text 171 243 insert "50 50 50 50" to the index range "2~2".;
#X msg 26 273 fill 100 100 50 50 4 4;
#X text 171 273 assign "100 100 50 50" to the index range "4~4".;
#X text 11 23 store an array of rectangles;
#X text 21 43 [ofLoadRect] stores an array of rectangles that can be
edited or used by its related "getter" objects.;
#X connect 17 0 44 0;
#X connect 19 0 44 0;
#X connect 23 0 44 0;
#X connect 44 0 20 0;
#X connect 45 0 44 0;
#X connect 47 0 44 0;
#X connect 48 0 44 0;
#X connect 51 0 44 0;
#X connect 53 0 44 0;
#X connect 55 0 44 0;
