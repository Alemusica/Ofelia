#N canvas 321 23 601 691 10;
#X declare -lib ofelia;
#X obj 0 0 cnv 15 580 40 empty empty ofBindFontTex 3 12 0 18 -204280
-1 0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 550 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 558 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 635 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 586 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 609 1) symbol;
#N canvas 321 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 66 pd about_vector;
#X text 275 119 the number of elements stored in the array.;
#X obj 23 449 ofWindow 320 240 LEFT TOP;
#X floatatom 236 119 5 0 0 0 - - -, f 5;
#X obj 23 139 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 41 139 outputs bang when loading is done.;
#X obj 76 173 loadbang;
#X obj 76 194 ofGetLastRenderOrder;
#X obj 43 215 ofHead;
#X obj 43 236 ofClear 63;
#X text 95 519 name <s>;
#X text 95 479 render bang;
#X text 241 479 - the incoming render bang.;
#X text 241 558 - the outgoing render bang.;
#X text 95 558 render bang;
#X text 11 23 bind the stored font's texture;
#X obj 493 5 ofBindFontTex;
#X text 207 280 bind the stored font's texture.;
#X obj 23 387 ofPrepend load;
#X msg 23 337 textMode CENTER MIDDLE \, bang;
#X text 176 302 draw the mesh.;
#X obj 43 259 ofTranslate 160 120;
#X text 205 337 set the text mode \, load mesh based on the font and
text.;
#X text 241 519 - sets the variable name followed by the index.;
#X text 241 609 - sets the variable name followed by the index.;
#X obj 43 279 ofBindFontTex @myFonts[0];
#X obj 43 301 ofDrawMesh2d @myMesh;
#X obj 23 364 ofGetTextMesh2dCommands @myFonts[0] Hello World;
#X obj 23 410 ofLoadMesh2d @myMesh;
#X text 95 499 float;
#X text 241 499 - sets the index of the array element.;
#X obj 23 65 ofLoadFont \; @myFonts \; examples/data/Sansation.ttf
30 \; examples/data/DejaVuSansMono.ttf 24 \;;
#X obj 462 46 declare -lib ofelia;
#X connect 12 0 27 0;
#X connect 14 0 15 0;
#X connect 15 0 16 1;
#X connect 16 0 17 0;
#X connect 17 0 29 0;
#X connect 26 0 36 0;
#X connect 27 0 35 0;
#X connect 29 0 33 0;
#X connect 33 0 34 0;
#X connect 35 0 26 0;
#X connect 39 0 12 0;
#X connect 39 1 11 0;
