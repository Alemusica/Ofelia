#N canvas 321 23 601 561 10;
#X obj 0 0 cnv 15 580 40 empty empty ofGetPolyline2dPoint 3 12 0 18
-204280 -1 0;
#X obj 0 341 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 420 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 349 cnv 17 3 60 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 428 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 505 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 456 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 72 479 1) symbol;
#N canvas 321 115 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X text 95 349 bang;
#X text 95 428 list;
#X text 95 389 name <s>;
#X obj 23 319 ofWindow 320 240 LEFT TOP;
#X text 241 389 - sets the variable name followed by the index.;
#X text 241 479 - sets the variable name followed by the index.;
#X text 95 369 float;
#X text 241 369 - sets the index of the array element.;
#X obj 451 5 ofGetPolyline2dPoint;
#X obj 26 172 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 26 223 print;
#X obj 26 70 ofLoadPolyline2d \; @myPolyline2d \; square 100 \;;
#X obj 26 196 ofGetPolyline2dPoint @myPolyline2d[1];
#X text 11 23 get a polyline2d point at the given index;
#X text 47 171 get a polyline2d point at the index "1". (starting from
"0");
#X text 241 349 - gets a polyline2d point at the given index.;
#X text 241 428 - the polyline2d point at the given index.;
#X connect 18 0 21 0;
#X connect 21 0 19 0;
