#N canvas 321 23 601 812 10;
#X obj 0 0 cnv 15 580 40 empty empty ofEditFloat 3 12 0 18 -204280
-1 0;
#X obj 0 471 cnv 3 580 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 0 670 cnv 3 580 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 75 479 cnv 17 3 180 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 75 678 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 0 755 cnv 15 580 21 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 0 706 cnv 3 580 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X text 95 499 name <s>;
#X text 95 539 add <f>;
#X text 72 729 1) symbol;
#N canvas 321 114 507 253 about_vector 0;
#X text 26 23 in ofelia \, a vector data structure is commonly used
for handling various data types such as float \, symbol and list. vectors
are much like arrays that can dynamically be changed in size.;
#X text 26 163 each "loader" object should have a unique variable name
so its data can be properly accessed by "getter" objects that use the
name.;
#X text 26 93 in general \, objects that use vector are divided into
two types \, "loader" objects that can store an array of data and "getter"
objects that can read the stored data from "loader" objects.;
#X restore 486 46 pd about_vector;
#X floatatom 26 97 5 0 0 0 - - -, f 5;
#X text 65 97 the number of elements stored in the array.;
#X text 11 23 edit the stored float;
#X obj 505 5 ofEditFloat;
#X msg 26 134 assign 3;
#X text 88 134 assign "3" to the array element.;
#X msg 26 164 add 2;
#X msg 26 224 mult 2;
#X text 76 225 multiply the array element by "2".;
#X text 69 165 add "2" to the array element.;
#X msg 26 254 div 2;
#X text 69 255 divide the array element by "2".;
#X msg 26 194 sub 2;
#X text 69 195 subtract "2" from the array element.;
#X msg 26 284 lerp 5 0.5;
#X msg 26 314 middle 8;
#X text 103 285 linearly interpolate the array element towards "5"
with the control amount of "0.5".;
#X text 93 315 set the array element to the midpoint between itself
and "8".;
#X text 182 362 edit the specified array element.;
#X obj 26 387 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 44 387 outputs bang when editing is done.;
#X obj 26 437 print;
#X text 95 519 assign <f>;
#X text 241 519 - assigns the value to the array element.;
#X text 241 539 - adds the value to the array element.;
#X text 95 559 sub <f>;
#X text 241 559 - subtracts the value from the array element.;
#X text 95 579 mult <f>;
#X text 241 579 - multiplies the array element by the value.;
#X text 95 599 div <f>;
#X text 241 599 - divides the array element by the value.;
#X text 95 619 lerp <f \, f>;
#X text 95 639 middle <f>;
#X text 241 619 - linearly interpolates the array element.;
#X text 241 639 - sets the array element to the midpoint.;
#X text 95 678 bang;
#X text 241 678 - outputs bang when editing is done.;
#X text 241 499 - sets the variable name followed by the index.;
#X text 241 729 - sets the variable name followed by the index.;
#X text 71 438 print all array elements as a list.;
#X obj 26 70 ofLoadFloat @myFloats 7 8 9 10;
#X obj 26 362 ofEditFloat @myFloats[1];
#X obj 26 410 ofGetFloats @myFloats;
#X text 95 479 float;
#X text 241 479 - sets the index of the array element.;
#X connect 15 0 52 0;
#X connect 17 0 52 0;
#X connect 18 0 52 0;
#X connect 21 0 52 0;
#X connect 23 0 52 0;
#X connect 25 0 52 0;
#X connect 26 0 52 0;
#X connect 30 0 53 0;
#X connect 51 0 11 0;
#X connect 52 0 30 0;
#X connect 53 0 32 0;
